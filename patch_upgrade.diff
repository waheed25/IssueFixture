diff --git a/App/Components/AudioPlayer/AudioPlayer.js b/App/Components/AudioPlayer/AudioPlayer.js
index 60237e2..f6e1a6e 100644
--- a/App/Components/AudioPlayer/AudioPlayer.js
+++ b/App/Components/AudioPlayer/AudioPlayer.js
@@ -2,43 +2,37 @@ import React from 'react'
 import Video from 'react-native-video'
 import { StyleSheet, View, ScrollView, TouchableOpacity, ActivityIndicator, TouchableWithoutFeedback } from 'react-native'
 import MaterialIcons from 'react-native-vector-icons/MaterialIcons'
+// import TrackPlayer from 'react-native-track-player'

-export default class VideoPlayer extends React.Component {
+export default class AudioPlayer extends React.Component {
   constructor (props) {
     super(props)
     this.state = {
       paused: true
     }
   }
+  // componentDidMount () {
+  //   TrackPlayer.setupPlayer().then(async () => {
+  //     // Adds a track to the queue
+  //     await TrackPlayer.add({
+  //       id: 'trackId',
+  //       url: this.props.url,
+  //       title: 'Track Title',
+  //       artist: 'Track Artist',
+  //       // artwork: require('track.png')
+  //     })
+  //
+  //     // Starts playing it
+  //     TrackPlayer.play()
+  //   })
+  // }

   loadStart=() => (<ActivityIndicator size='large' color='#2AAAD2' />)
   render () {
     console.log('thissssssssssss:::', this.state.paused)
     const { closeModal, mediaData } = this.props
     return (
-      <View>
-        {/* <TouchableOpacity style={{position: 'absolute', right: 30, top: 50, zIndex: 10}} onPress={closeModal} > */}
-        {/* <MaterialIcons style={{opacity: 0.7}} name='cancel' size={30} color={'#fff'} /> */}
-        {/* </TouchableOpacity> */}
-        <TouchableWithoutFeedback style={{zIndex: 4}} onPress={() => this.setState({paused: !this.state.paused})}>
-          <Video
-            controls
-            source={{ uri: this.props.url }}   // Can be a URL or a local file.
-            ref={(ref) => {
-              this.player = ref
-            }}
-            paused={this.state.paused}
-            onLoadStart={this.loadStart}// Store reference
-            onBuffer={this.onBuffer}                // Callback when remote video is buffering
-            onError={this.videoError}               // Callback when video cannot be loaded
-            style={styles.backgroundVideo}
-            resizeMode='contain'
-          >
-            {/*<ActivityIndicator size='small' color='#2AAAD2' />*/}
-          </Video>
-        </TouchableWithoutFeedback>
-      </View>
-
+      <View />
     )
   }
 }
diff --git a/App/Components/CreationTiles/CreationTiles.js b/App/Components/CreationTiles/CreationTiles.js
index 1a4251a..a864d69 100644
--- a/App/Components/CreationTiles/CreationTiles.js
+++ b/App/Components/CreationTiles/CreationTiles.js
@@ -10,7 +10,7 @@ import Images from '../../Images/rootImages/index'
 import { withsubscribeChannel } from '../../Redux/hoc/withPusher/Pusher'
 import { hitSlop } from '../../Utils/hitslop'
 import Shimmer from '../Shimmer'
-class CreationTiles extends React.PureComponent {
+class CreationTiles extends React.Component {
   channenls = [];

   constructor (props) {
@@ -38,13 +38,13 @@ class CreationTiles extends React.PureComponent {
     }
   }

-  // shouldComponentUpdate (nextProps, nextState, nextContext) {
-  //   if (nextProps.likesCount !== this.props.likesCount || nextProps.refiqesCount !== this.props.refiqesCount || nextProps.viewsCount !== this.props.viewsCount) {
-  //     return true
-  //   } else {
-  //     return false
-  //   }
-  // }
+  shouldComponentUpdate (nextProps, nextState, nextContext) {
+    if (nextProps.likesCount !== this.props.likesCount || nextProps.refiqesCount !== this.props.refiqesCount || nextProps.viewsCount !== this.props.viewsCount) {
+      return true
+    } else {
+      return false
+    }
+  }
   pusherSubscription (nid) {
     this.channels = [
       {
@@ -98,7 +98,7 @@ class CreationTiles extends React.PureComponent {
     return (
       <TouchableOpacity onPress={() => handleOnPress(item, index)}>
       <View
-        style={{height: 300, width: 400}}
+        style={{height: Sizes.DEVICE_HEIGHT * 0.40, width: Sizes.DEVICE_WIDTH * 0.93}}
       >
         <Card style={styles.CardStyle}>
           <FastImage
diff --git a/App/Components/MediaView/MediaView.js b/App/Components/MediaView/MediaView.js
index d4b92a6..6b95660 100644
--- a/App/Components/MediaView/MediaView.js
+++ b/App/Components/MediaView/MediaView.js
@@ -13,6 +13,7 @@ import FastImage from 'react-native-fast-image'
 import CreationDetails from '../CreationDetails/CreationDetails'
 import DeviceSizes from '../../Styles/DeviceSizes'
 import VideoPlayer from '../VideoPlayer/VideoPlayer'
+import AudioPlayer from '../AudioPlayer/AudioPlayer'
 import Loader from '../../Components/Loader/Loader'
 import WefiqList from '../WefiqList'

diff --git a/App/Containers/Creations/Creations.js b/App/Containers/Creations/Creations.js
index 418716a..b817644 100644
--- a/App/Containers/Creations/Creations.js
+++ b/App/Containers/Creations/Creations.js
@@ -17,7 +17,7 @@ import { LargeList } from 'react-native-largelist-v3'
 import { RecyclerListView, DataProvider, LayoutProvider } from 'recyclerlistview'
 const apiType = 'creation?'
 class Creations extends React.PureComponent {
-  pageLimit = 50;
+  pageLimit = 10;
   pageOffset = 0;

   constructor (props) {
@@ -124,7 +124,7 @@ class Creations extends React.PureComponent {
   }
   renderItem=(type, data, index) => {
     const item = data
-    console.log('data', data)
+    // console.log('data', data)
     const metadata = JSON.parse(item.attributes.mediaMetadata)
     return (<CreationTiles isLoading={this.props.isLoading} refiqesCount={item.attributes.refiqesCount} likesCount={item.attributes.likesCount} nid={item.attributes.drupalInternalNid} viewsCount={item.attributes.viewsCount} index={index} handleCloseModal={this.handleCloseModal} handleOnPress={this.handleOnPress} isFetchingMore={this.props.isLoading} item={item} metadata={metadata} />)
   }
@@ -170,7 +170,7 @@ class Creations extends React.PureComponent {
             layoutProvider={this._layoutProvider}
             onEndReached={this.endScroll}
             renderFooter={this.renderFooter}
-            renderAheadDistance={400}
+            renderAheadDistance={100}
           />
           }
         </View>)
diff --git a/App/Utils/trackPlayer.js b/App/Utils/trackPlayer.js
new file mode 100644
index 0000000..6d2a3df
--- /dev/null
+++ b/App/Utils/trackPlayer.js
@@ -0,0 +1,23 @@
+// import TrackPlayer from 'react-native-track-player'
+//
+// module.exports = async function () {
+//   TrackPlayer.addEventListener('remote-play', () => {
+//     TrackPlayer.play()
+//   })
+//
+//   TrackPlayer.addEventListener('remote-pause', () => {
+//     TrackPlayer.pause()
+//   })
+//
+//   TrackPlayer.addEventListener('remote-next', () => {
+//     TrackPlayer.skipToNext()
+//   })
+//
+//   TrackPlayer.addEventListener('remote-previous', () => {
+//     TrackPlayer.skipToPrevious()
+//   })
+//
+//   TrackPlayer.addEventListener('remote-stop', () => {
+//     TrackPlayer.destroy()
+//   })
+// }
diff --git a/android/app/src/main/AndroidManifest.xml b/android/app/src/main/AndroidManifest.xml
index 8871b23..f553fa0 100644
--- a/android/app/src/main/AndroidManifest.xml
+++ b/android/app/src/main/AndroidManifest.xml
@@ -10,6 +10,7 @@
       android:icon="@mipmap/ic_launcher"
       android:allowBackup="false"
       android:largeHeap="true"
+      android:hardwareAccelerated="false"
       android:theme="@style/AppTheme">
         <meta-data android:name="com.facebook.sdk.ApplicationId"
             android:value="@string/facebook_app_id"/>
diff --git a/android/app/src/main/assets/fonts/EvilIcons.ttf b/android/app/src/main/assets/fonts/EvilIcons.ttf
index b270f98..6868f7b 100644
Binary files a/android/app/src/main/assets/fonts/EvilIcons.ttf and b/android/app/src/main/assets/fonts/EvilIcons.ttf differ
diff --git a/android/app/src/main/assets/fonts/Feather.ttf b/android/app/src/main/assets/fonts/Feather.ttf
old mode 100644
new mode 100755
index 244854c..fc963df
Binary files a/android/app/src/main/assets/fonts/Feather.ttf and b/android/app/src/main/assets/fonts/Feather.ttf differ
diff --git a/android/app/src/main/assets/fonts/Ionicons.ttf b/android/app/src/main/assets/fonts/Ionicons.ttf
index 307ad88..67bd842 100644
Binary files a/android/app/src/main/assets/fonts/Ionicons.ttf and b/android/app/src/main/assets/fonts/Ionicons.ttf differ
diff --git a/android/app/src/main/assets/fonts/MaterialCommunityIcons.ttf b/android/app/src/main/assets/fonts/MaterialCommunityIcons.ttf
index 82524a0..42a11c8 100644
Binary files a/android/app/src/main/assets/fonts/MaterialCommunityIcons.ttf and b/android/app/src/main/assets/fonts/MaterialCommunityIcons.ttf differ
diff --git a/android/app/src/main/assets/fonts/Octicons.ttf b/android/app/src/main/assets/fonts/Octicons.ttf
index 09f5a96..0ffe00b 100644
Binary files a/android/app/src/main/assets/fonts/Octicons.ttf and b/android/app/src/main/assets/fonts/Octicons.ttf differ
diff --git a/android/app/src/main/res/drawable-xhdpi/node_modules_reactnativespringscrollview_customize_res_arrow.png b/android/app/src/main/res/drawable-xhdpi/node_modules_reactnativespringscrollview_customize_res_arrow.png
new file mode 100644
index 0000000..b1078de
Binary files /dev/null and b/android/app/src/main/res/drawable-xhdpi/node_modules_reactnativespringscrollview_customize_res_arrow.png differ
diff --git a/android/build.gradle b/android/build.gradle
index d1eab0e..92ad824 100644
--- a/android/build.gradle
+++ b/android/build.gradle
@@ -32,6 +32,9 @@ allprojects {
             url "$rootDir/../node_modules/react-native/android"
         }
     }
+    configurations.all {
+        resolutionStrategy.force "com.android.support:support-v4:26.1.0"
+    }
 }
 subprojects {
     afterEvaluate {project ->
@@ -43,6 +46,16 @@ subprojects {
         }
     }
 }
+//subprojects {
+//    project.configurations.all {
+//        resolutionStrategy.eachDependency { details ->
+//            if (details.requested.group == 'com.android.support'
+//                    && !details.requested.name.contains('multidex') ) {
+//                details.useVersion "version which should be used - in your case 27.0.3"
+//            }
+//        }
+//    }
+//}

 //task wrapper(type: Wrapper) {
 //    gradleVersion = '4.4'
diff --git a/android/settings.gradle b/android/settings.gradle
index bf26c81..4c57d97 100644
--- a/android/settings.gradle
+++ b/android/settings.gradle
@@ -33,5 +33,4 @@ include ':react-native-vector-icons'
 project(':react-native-vector-icons').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-vector-icons/android')
 include ':react-native-gesture-handler'
 project(':react-native-gesture-handler').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-gesture-handler/android')
-
 include ':app'
diff --git a/index.js b/index.js
index 80f5f6a..50f2244 100644
--- a/index.js
+++ b/index.js
@@ -12,7 +12,7 @@ import {
   NativeModules,
   AppRegistry
 } from 'react-native'
-
+// import TrackPlayer from 'react-native-track-player'
 const DevMenuTrigger = ({children}) => {
   const {DevMenu} = NativeModules
   const panResponder = PanResponder.create({
@@ -24,4 +24,5 @@ const DevMenuTrigger = ({children}) => {
   })
   return <View style={{flex: 1}} {...panResponder.panHandlers}><App /></View>
 }
+// TrackPlayer.registerPlaybackService(() => require('./App/Utils/trackPlayer'))
 AppRegistry.registerComponent('Wefiq', () => DevMenuTrigger)
diff --git a/ios/Frameworks/Bolts.framework/Bolts b/ios/Frameworks/Bolts.framework/Bolts
new file mode 100755
index 0000000..6e13af4
Binary files /dev/null and b/ios/Frameworks/Bolts.framework/Bolts differ
diff --git a/ios/Frameworks/Bolts.framework/Headers/BFAppLink.h b/ios/Frameworks/Bolts.framework/Headers/BFAppLink.h
new file mode 100755
index 0000000..aa89efc
--- /dev/null
+++ b/ios/Frameworks/Bolts.framework/Headers/BFAppLink.h
@@ -0,0 +1,49 @@
+/*
+ *  Copyright (c) 2014, Facebook, Inc.
+ *  All rights reserved.
+ *
+ *  This source code is licensed under the BSD-style license found in the
+ *  LICENSE file in the root directory of this source tree. An additional grant
+ *  of patent rights can be found in the PATENTS file in the same directory.
+ *
+ */
+
+#import <Foundation/Foundation.h>
+
+/*! The version of the App Link protocol that this library supports */
+FOUNDATION_EXPORT NSString *const BFAppLinkVersion;
+
+/*!
+ Contains App Link metadata relevant for navigation on this device
+ derived from the HTML at a given URL.
+ */
+@interface BFAppLink : NSObject
+
+/*!
+ Creates a BFAppLink with the given list of BFAppLinkTargets and target URL.
+
+ Generally, this will only be used by implementers of the BFAppLinkResolving protocol,
+ as these implementers will produce App Link metadata for a given URL.
+
+ @param sourceURL the URL from which this App Link is derived
+ @param targets an ordered list of BFAppLinkTargets for this platform derived
+ from App Link metadata.
+ @param webURL the fallback web URL, if any, for the app link.
+ */
++ (instancetype)appLinkWithSourceURL:(NSURL *)sourceURL
+                             targets:(NSArray *)targets
+                              webURL:(NSURL *)webURL;
+
+/*! The URL from which this BFAppLink was derived */
+@property (nonatomic, strong, readonly) NSURL *sourceURL;
+
+/*!
+ The ordered list of targets applicable to this platform that will be used
+ for navigation.
+ */
+@property (nonatomic, copy, readonly) NSArray *targets;
+
+/*! The fallback web URL to use if no targets are installed on this device. */
+@property (nonatomic, strong, readonly) NSURL *webURL;
+
+@end
diff --git a/ios/Frameworks/Bolts.framework/Headers/BFAppLinkNavigation.h b/ios/Frameworks/Bolts.framework/Headers/BFAppLinkNavigation.h
new file mode 100755
index 0000000..4b8a71e
--- /dev/null
+++ b/ios/Frameworks/Bolts.framework/Headers/BFAppLinkNavigation.h
@@ -0,0 +1,114 @@
+/*
+ *  Copyright (c) 2014, Facebook, Inc.
+ *  All rights reserved.
+ *
+ *  This source code is licensed under the BSD-style license found in the
+ *  LICENSE file in the root directory of this source tree. An additional grant
+ *  of patent rights can be found in the PATENTS file in the same directory.
+ *
+ */
+
+#import <Foundation/Foundation.h>
+
+#import <Bolts/BFAppLink.h>
+
+/*!
+ The result of calling navigate on a BFAppLinkNavigation
+ */
+typedef NS_ENUM(NSInteger, BFAppLinkNavigationType) {
+    /*! Indicates that the navigation failed and no app was opened */
+    BFAppLinkNavigationTypeFailure,
+    /*! Indicates that the navigation succeeded by opening the URL in the browser */
+    BFAppLinkNavigationTypeBrowser,
+    /*! Indicates that the navigation succeeded by opening the URL in an app on the device */
+    BFAppLinkNavigationTypeApp
+};
+
+@protocol BFAppLinkResolving;
+@class BFTask;
+
+/*!
+ Represents a pending request to navigate to an App Link. Most developers will
+ simply use navigateToURLInBackground: to open a URL, but developers can build
+ custom requests with additional navigation and app data attached to them by
+ creating BFAppLinkNavigations themselves.
+ */
+NS_EXTENSION_UNAVAILABLE_IOS("Not available in app extension")
+@interface BFAppLinkNavigation : NSObject
+
+/*!
+ The extras for the AppLinkNavigation. This will generally contain application-specific
+ data that should be passed along with the request, such as advertiser or affiliate IDs or
+ other such metadata relevant on this device.
+ */
+@property (nonatomic, copy, readonly) NSDictionary *extras;
+
+/*!
+ The al_applink_data for the AppLinkNavigation. This will generally contain data common to
+ navigation attempts such as back-links, user agents, and other information that may be used
+ in routing and handling an App Link request.
+ */
+@property (nonatomic, copy, readonly) NSDictionary *appLinkData;
+
+/*! The AppLink to navigate to */
+@property (nonatomic, strong, readonly) BFAppLink *appLink;
+
+/*! Creates an AppLinkNavigation with the given link, extras, and App Link data */
++ (instancetype)navigationWithAppLink:(BFAppLink *)appLink
+                               extras:(NSDictionary *)extras
+                          appLinkData:(NSDictionary *)appLinkData;
+
+/*!
+ Creates an NSDictionary with the correct format for iOS callback URLs,
+ to be used as 'appLinkData' argument in the call to navigationWithAppLink:extras:appLinkData:
+ */
++ (NSDictionary *)callbackAppLinkDataForAppWithName:(NSString *)appName url:(NSString *)url;
+
+/*! Performs the navigation */
+- (BFAppLinkNavigationType)navigate:(NSError **)error;
+
+/*! Returns a BFAppLink for the given URL */
++ (BFTask *)resolveAppLinkInBackground:(NSURL *)destination;
+
+/*! Returns a BFAppLink for the given URL using the given App Link resolution strategy */
++ (BFTask *)resolveAppLinkInBackground:(NSURL *)destination resolver:(id<BFAppLinkResolving>)resolver;
+
+/*! Navigates to a BFAppLink and returns whether it opened in-app or in-browser */
++ (BFAppLinkNavigationType)navigateToAppLink:(BFAppLink *)link error:(NSError **)error;
+
+/*!
+ Returns a BFAppLinkNavigationType based on a BFAppLink.
+ It's essentially a no-side-effect version of navigateToAppLink:error:,
+ allowing apps to determine flow based on the link type (e.g. open an
+ internal web view instead of going straight to the browser for regular links.)
+ */
++ (BFAppLinkNavigationType)navigationTypeForLink:(BFAppLink *)link;
+
+/*!
+ Return navigation type for current instance.
+ No-side-effect version of navigate:
+ */
+- (BFAppLinkNavigationType)navigationType;
+
+/*! Navigates to a URL (an asynchronous action) and returns a BFNavigationType */
++ (BFTask *)navigateToURLInBackground:(NSURL *)destination;
+
+/*!
+ Navigates to a URL (an asynchronous action) using the given App Link resolution
+ strategy and returns a BFNavigationType
+ */
++ (BFTask *)navigateToURLInBackground:(NSURL *)destination resolver:(id<BFAppLinkResolving>)resolver;
+
+/*!
+ Gets the default resolver to be used for App Link resolution. If the developer has not set one explicitly,
+ a basic, built-in resolver will be used.
+ */
++ (id<BFAppLinkResolving>)defaultResolver;
+
+/*!
+ Sets the default resolver to be used for App Link resolution. Setting this to nil will revert the
+ default resolver to the basic, built-in resolver provided by Bolts.
+ */
++ (void)setDefaultResolver:(id<BFAppLinkResolving>)resolver;
+
+@end
diff --git a/ios/Frameworks/Bolts.framework/Headers/BFAppLinkResolving.h b/ios/Frameworks/Bolts.framework/Headers/BFAppLinkResolving.h
new file mode 100755
index 0000000..5c78bff
--- /dev/null
+++ b/ios/Frameworks/Bolts.framework/Headers/BFAppLinkResolving.h
@@ -0,0 +1,30 @@
+/*
+ *  Copyright (c) 2014, Facebook, Inc.
+ *  All rights reserved.
+ *
+ *  This source code is licensed under the BSD-style license found in the
+ *  LICENSE file in the root directory of this source tree. An additional grant
+ *  of patent rights can be found in the PATENTS file in the same directory.
+ *
+ */
+
+#import <Foundation/Foundation.h>
+
+@class BFTask;
+
+/*!
+ Implement this protocol to provide an alternate strategy for resolving
+ App Links that may include pre-fetching, caching, or querying for App Link
+ data from an index provided by a service provider.
+ */
+@protocol BFAppLinkResolving <NSObject>
+
+/*!
+ Asynchronously resolves App Link data for a given URL.
+
+ @param url The URL to resolve into an App Link.
+ @returns A BFTask that will return a BFAppLink for the given URL.
+ */
+- (BFTask *)appLinkFromURLInBackground:(NSURL *)url NS_EXTENSION_UNAVAILABLE_IOS("Not available in app extension");
+
+@end
diff --git a/ios/Frameworks/Bolts.framework/Headers/BFAppLinkReturnToRefererController.h b/ios/Frameworks/Bolts.framework/Headers/BFAppLinkReturnToRefererController.h
new file mode 100755
index 0000000..436c528
--- /dev/null
+++ b/ios/Frameworks/Bolts.framework/Headers/BFAppLinkReturnToRefererController.h
@@ -0,0 +1,88 @@
+/*
+ *  Copyright (c) 2014, Facebook, Inc.
+ *  All rights reserved.
+ *
+ *  This source code is licensed under the BSD-style license found in the
+ *  LICENSE file in the root directory of this source tree. An additional grant
+ *  of patent rights can be found in the PATENTS file in the same directory.
+ *
+ */
+
+#import <Foundation/Foundation.h>
+#import <UIKit/UIKit.h>
+
+#import <Bolts/BFAppLinkReturnToRefererView.h>
+
+@class BFAppLink;
+@class BFAppLinkReturnToRefererController;
+
+/*!
+ Protocol that a class can implement in order to be notified when the user has navigated back
+ to the referer of an App Link.
+ */
+@protocol BFAppLinkReturnToRefererControllerDelegate <NSObject>
+
+@optional
+
+/*! Called when the user has tapped to navigate, but before the navigation has been performed. */
+- (void)returnToRefererController:(BFAppLinkReturnToRefererController *)controller
+            willNavigateToAppLink:(BFAppLink *)appLink;
+
+/*! Called after the navigation has been attempted, with an indication of whether the referer
+ app link was successfully opened. */
+- (void)returnToRefererController:(BFAppLinkReturnToRefererController *)controller
+             didNavigateToAppLink:(BFAppLink *)url
+                             type:(BFAppLinkNavigationType)type;
+
+@end
+
+/*!
+ A controller class that implements default behavior for a BFAppLinkReturnToRefererView, including
+ the ability to display the view above the navigation bar for navigation-based apps.
+ */
+NS_EXTENSION_UNAVAILABLE_IOS("Not available in app extension")
+@interface BFAppLinkReturnToRefererController : NSObject <BFAppLinkReturnToRefererViewDelegate>
+
+/*!
+ The delegate that will be notified when the user navigates back to the referer.
+ */
+@property (nonatomic, weak) id<BFAppLinkReturnToRefererControllerDelegate> delegate;
+
+/*!
+ The BFAppLinkReturnToRefererView this controller is controlling.
+ */
+@property (nonatomic, strong) BFAppLinkReturnToRefererView *view;
+
+/*!
+ Initializes a controller suitable for controlling a BFAppLinkReturnToRefererView that is to be displayed
+ contained within another UIView (i.e., not displayed above the navigation bar).
+ */
+- (instancetype)init;
+
+/*!
+ Initializes a controller suitable for controlling a BFAppLinkReturnToRefererView that is to be displayed
+ displayed above the navigation bar.
+ */
+- (instancetype)initForDisplayAboveNavController:(UINavigationController *)navController;
+
+/*!
+ Removes the view entirely from the navigation controller it is currently displayed in.
+ */
+- (void)removeFromNavController;
+
+/*!
+ Shows the BFAppLinkReturnToRefererView with the specified referer information. If nil or missing data,
+ the view will not be displayed. */
+- (void)showViewForRefererAppLink:(BFAppLink *)refererAppLink;
+
+/*!
+ Shows the BFAppLinkReturnToRefererView with referer information extracted from the specified URL.
+ If nil or missing referer App Link data, the view will not be displayed. */
+- (void)showViewForRefererURL:(NSURL *)url;
+
+/*!
+ Closes the view, possibly animating it.
+ */
+- (void)closeViewAnimated:(BOOL)animated;
+
+@end
diff --git a/ios/Frameworks/Bolts.framework/Headers/BFAppLinkReturnToRefererView.h b/ios/Frameworks/Bolts.framework/Headers/BFAppLinkReturnToRefererView.h
new file mode 100755
index 0000000..f62bc66
--- /dev/null
+++ b/ios/Frameworks/Bolts.framework/Headers/BFAppLinkReturnToRefererView.h
@@ -0,0 +1,78 @@
+/*
+ *  Copyright (c) 2014, Facebook, Inc.
+ *  All rights reserved.
+ *
+ *  This source code is licensed under the BSD-style license found in the
+ *  LICENSE file in the root directory of this source tree. An additional grant
+ *  of patent rights can be found in the PATENTS file in the same directory.
+ *
+ */
+
+#import <Foundation/Foundation.h>
+#import <UIKit/UIKit.h>
+
+#import <Bolts/BFAppLinkNavigation.h>
+
+@class BFAppLinkReturnToRefererView;
+@class BFURL;
+
+typedef NS_ENUM(NSUInteger, BFIncludeStatusBarInSize) {
+    BFIncludeStatusBarInSizeNever,
+    BFIncludeStatusBarInSizeIOS7AndLater,
+    BFIncludeStatusBarInSizeAlways,
+};
+
+/*!
+ Protocol that a class can implement in order to be notified when the user has navigated back
+ to the referer of an App Link.
+ */
+@protocol BFAppLinkReturnToRefererViewDelegate <NSObject>
+
+/*!
+ Called when the user has tapped inside the close button.
+ */
+- (void)returnToRefererViewDidTapInsideCloseButton:(BFAppLinkReturnToRefererView *)view;
+
+/*!
+ Called when the user has tapped inside the App Link portion of the view.
+ */
+- (void)returnToRefererViewDidTapInsideLink:(BFAppLinkReturnToRefererView *)view
+                                       link:(BFAppLink *)link;
+
+@end
+
+/*!
+ Provides a UIView that displays a button allowing users to navigate back to the
+ application that launched the App Link currently being handled, if the App Link
+ contained referer data. The user can also close the view by clicking a close button
+ rather than navigating away. If the view is provided an App Link that does not contain
+ referer data, it will have zero size and no UI will be displayed.
+ */
+NS_EXTENSION_UNAVAILABLE_IOS("Not available in app extension")
+@interface BFAppLinkReturnToRefererView : UIView
+
+/*!
+ The delegate that will be notified when the user navigates back to the referer.
+ */
+@property (nonatomic, weak) id<BFAppLinkReturnToRefererViewDelegate> delegate;
+
+/*!
+ The color of the text label and close button.
+ */
+@property (nonatomic, strong) UIColor *textColor;
+
+@property (nonatomic, strong) BFAppLink *refererAppLink;
+
+/*!
+ Indicates whether to extend the size of the view to include the current status bar
+ size, for use in scenarios where the view might extend under the status bar on iOS 7 and
+ above; this property has no effect on earlier versions of iOS.
+ */
+@property (nonatomic, assign) BFIncludeStatusBarInSize includeStatusBarInSize;
+
+/*!
+ Indicates whether the user has closed the view by clicking the close button.
+ */
+@property (nonatomic, assign) BOOL closed;
+
+@end
diff --git a/ios/Frameworks/Bolts.framework/Headers/BFAppLinkTarget.h b/ios/Frameworks/Bolts.framework/Headers/BFAppLinkTarget.h
new file mode 100755
index 0000000..6172126
--- /dev/null
+++ b/ios/Frameworks/Bolts.framework/Headers/BFAppLinkTarget.h
@@ -0,0 +1,33 @@
+/*
+ *  Copyright (c) 2014, Facebook, Inc.
+ *  All rights reserved.
+ *
+ *  This source code is licensed under the BSD-style license found in the
+ *  LICENSE file in the root directory of this source tree. An additional grant
+ *  of patent rights can be found in the PATENTS file in the same directory.
+ *
+ */
+
+#import <Foundation/Foundation.h>
+
+/*!
+ Represents a target defined in App Link metadata, consisting of at least
+ a URL, and optionally an App Store ID and name.
+ */
+@interface BFAppLinkTarget : NSObject
+
+/*! Creates a BFAppLinkTarget with the given app site and target URL. */
++ (instancetype)appLinkTargetWithURL:(NSURL *)url
+                          appStoreId:(NSString *)appStoreId
+                             appName:(NSString *)appName;
+
+/*! The URL prefix for this app link target */
+@property (nonatomic, strong, readonly) NSURL *URL;
+
+/*! The app ID for the app store */
+@property (nonatomic, copy, readonly) NSString *appStoreId;
+
+/*! The name of the app */
+@property (nonatomic, copy, readonly) NSString *appName;
+
+@end
diff --git a/ios/Frameworks/Bolts.framework/Headers/BFCancellationToken.h b/ios/Frameworks/Bolts.framework/Headers/BFCancellationToken.h
new file mode 100755
index 0000000..bda32ee
--- /dev/null
+++ b/ios/Frameworks/Bolts.framework/Headers/BFCancellationToken.h
@@ -0,0 +1,42 @@
+/*
+ *  Copyright (c) 2014, Facebook, Inc.
+ *  All rights reserved.
+ *
+ *  This source code is licensed under the BSD-style license found in the
+ *  LICENSE file in the root directory of this source tree. An additional grant
+ *  of patent rights can be found in the PATENTS file in the same directory.
+ *
+ */
+
+#import <Foundation/Foundation.h>
+
+#import <Bolts/BFCancellationTokenRegistration.h>
+
+NS_ASSUME_NONNULL_BEGIN
+
+/*!
+ A block that will be called when a token is cancelled.
+ */
+typedef void(^BFCancellationBlock)(void);
+
+/*!
+ The consumer view of a CancellationToken.
+ Propagates notification that operations should be canceled.
+ A BFCancellationToken has methods to inspect whether the token has been cancelled.
+ */
+@interface BFCancellationToken : NSObject
+
+/*!
+ Whether cancellation has been requested for this token source.
+ */
+@property (nonatomic, assign, readonly, getter=isCancellationRequested) BOOL cancellationRequested;
+
+/*!
+ Register a block to be notified when the token is cancelled.
+ If the token is already cancelled the delegate will be notified immediately.
+ */
+- (BFCancellationTokenRegistration *)registerCancellationObserverWithBlock:(BFCancellationBlock)block;
+
+@end
+
+NS_ASSUME_NONNULL_END
diff --git a/ios/Frameworks/Bolts.framework/Headers/BFCancellationTokenRegistration.h b/ios/Frameworks/Bolts.framework/Headers/BFCancellationTokenRegistration.h
new file mode 100755
index 0000000..fa6090f
--- /dev/null
+++ b/ios/Frameworks/Bolts.framework/Headers/BFCancellationTokenRegistration.h
@@ -0,0 +1,29 @@
+/*
+ *  Copyright (c) 2014, Facebook, Inc.
+ *  All rights reserved.
+ *
+ *  This source code is licensed under the BSD-style license found in the
+ *  LICENSE file in the root directory of this source tree. An additional grant
+ *  of patent rights can be found in the PATENTS file in the same directory.
+ *
+ */
+
+#import <Foundation/Foundation.h>
+
+NS_ASSUME_NONNULL_BEGIN
+
+/*!
+ Represents the registration of a cancellation observer with a cancellation token.
+ Can be used to unregister the observer at a later time.
+ */
+@interface BFCancellationTokenRegistration : NSObject
+
+/*!
+ Removes the cancellation observer registered with the token
+ and releases all resources associated with this registration.
+ */
+- (void)dispose;
+
+@end
+
+NS_ASSUME_NONNULL_END
diff --git a/ios/Frameworks/Bolts.framework/Headers/BFCancellationTokenSource.h b/ios/Frameworks/Bolts.framework/Headers/BFCancellationTokenSource.h
new file mode 100755
index 0000000..4627e99
--- /dev/null
+++ b/ios/Frameworks/Bolts.framework/Headers/BFCancellationTokenSource.h
@@ -0,0 +1,60 @@
+/*
+ *  Copyright (c) 2014, Facebook, Inc.
+ *  All rights reserved.
+ *
+ *  This source code is licensed under the BSD-style license found in the
+ *  LICENSE file in the root directory of this source tree. An additional grant
+ *  of patent rights can be found in the PATENTS file in the same directory.
+ *
+ */
+
+#import <Foundation/Foundation.h>
+
+NS_ASSUME_NONNULL_BEGIN
+
+@class BFCancellationToken;
+
+/*!
+ BFCancellationTokenSource represents the producer side of a CancellationToken.
+ Signals to a CancellationToken that it should be canceled.
+ It is a cancellation token that also has methods
+ for changing the state of a token by cancelling it.
+ */
+@interface BFCancellationTokenSource : NSObject
+
+/*!
+ Creates a new cancellation token source.
+ */
++ (instancetype)cancellationTokenSource;
+
+/*!
+ The cancellation token associated with this CancellationTokenSource.
+ */
+@property (nonatomic, strong, readonly) BFCancellationToken *token;
+
+/*!
+ Whether cancellation has been requested for this token source.
+ */
+@property (nonatomic, assign, readonly, getter=isCancellationRequested) BOOL cancellationRequested;
+
+/*!
+ Cancels the token if it has not already been cancelled.
+ */
+- (void)cancel;
+
+/*!
+ Schedules a cancel operation on this CancellationTokenSource after the specified number of milliseconds.
+ @param millis The number of milliseconds to wait before completing the returned task.
+ If delay is `0` the cancel is executed immediately. If delay is `-1` any scheduled cancellation is stopped.
+ */
+- (void)cancelAfterDelay:(int)millis;
+
+/*!
+ Releases all resources associated with this token source,
+ including disposing of all registrations.
+ */
+- (void)dispose;
+
+@end
+
+NS_ASSUME_NONNULL_END
diff --git a/ios/Frameworks/Bolts.framework/Headers/BFExecutor.h b/ios/Frameworks/Bolts.framework/Headers/BFExecutor.h
new file mode 100755
index 0000000..694c8a5
--- /dev/null
+++ b/ios/Frameworks/Bolts.framework/Headers/BFExecutor.h
@@ -0,0 +1,62 @@
+/*
+ *  Copyright (c) 2014, Facebook, Inc.
+ *  All rights reserved.
+ *
+ *  This source code is licensed under the BSD-style license found in the
+ *  LICENSE file in the root directory of this source tree. An additional grant
+ *  of patent rights can be found in the PATENTS file in the same directory.
+ *
+ */
+
+#import <Foundation/Foundation.h>
+
+NS_ASSUME_NONNULL_BEGIN
+
+/*!
+ An object that can run a given block.
+ */
+@interface BFExecutor : NSObject
+
+/*!
+ Returns a default executor, which runs continuations immediately until the call stack gets too
+ deep, then dispatches to a new GCD queue.
+ */
++ (instancetype)defaultExecutor;
+
+/*!
+ Returns an executor that runs continuations on the thread where the previous task was completed.
+ */
++ (instancetype)immediateExecutor;
+
+/*!
+ Returns an executor that runs continuations on the main thread.
+ */
++ (instancetype)mainThreadExecutor;
+
+/*!
+ Returns a new executor that uses the given block to execute continuations.
+ @param block The block to use.
+ */
++ (instancetype)executorWithBlock:(void(^)(void(^block)(void)))block;
+
+/*!
+ Returns a new executor that runs continuations on the given queue.
+ @param queue The instance of `dispatch_queue_t` to dispatch all continuations onto.
+ */
++ (instancetype)executorWithDispatchQueue:(dispatch_queue_t)queue;
+
+/*!
+ Returns a new executor that runs continuations on the given queue.
+ @param queue The instance of `NSOperationQueue` to run all continuations on.
+ */
++ (instancetype)executorWithOperationQueue:(NSOperationQueue *)queue;
+
+/*!
+ Runs the given block using this executor's particular strategy.
+ @param block The block to execute.
+ */
+- (void)execute:(void(^)(void))block;
+
+@end
+
+NS_ASSUME_NONNULL_END
diff --git a/ios/Frameworks/Bolts.framework/Headers/BFGeneric.h b/ios/Frameworks/Bolts.framework/Headers/BFGeneric.h
new file mode 100755
index 0000000..99b2cf7
--- /dev/null
+++ b/ios/Frameworks/Bolts.framework/Headers/BFGeneric.h
@@ -0,0 +1,25 @@
+/*
+ *  Copyright (c) 2014, Facebook, Inc.
+ *  All rights reserved.
+ *
+ *  This source code is licensed under the BSD-style license found in the
+ *  LICENSE file in the root directory of this source tree. An additional grant
+ *  of patent rights can be found in the PATENTS file in the same directory.
+ *
+ */
+
+#import <Foundation/Foundation.h>
+
+#pragma once
+
+/**
+ This exists to use along with `BFTask` and `BFTaskCompletionSource`.
+
+ Instead of returning a `BFTask` with no generic type, or a generic type of 'NSNull'
+ when there is no usable result from a task, we use the type 'BFVoid', which will always have a value of `nil`.
+
+ This allows you to provide a more enforced API contract to the caller,
+ as sending any message to `BFVoid` will result in a compile time error.
+ */
+@class _BFVoid_Nonexistant;
+typedef _BFVoid_Nonexistant *BFVoid;
diff --git a/ios/Frameworks/Bolts.framework/Headers/BFMeasurementEvent.h b/ios/Frameworks/Bolts.framework/Headers/BFMeasurementEvent.h
new file mode 100755
index 0000000..b3173fc
--- /dev/null
+++ b/ios/Frameworks/Bolts.framework/Headers/BFMeasurementEvent.h
@@ -0,0 +1,45 @@
+/*
+ *  Copyright (c) 2014, Facebook, Inc.
+ *  All rights reserved.
+ *
+ *  This source code is licensed under the BSD-style license found in the
+ *  LICENSE file in the root directory of this source tree. An additional grant
+ *  of patent rights can be found in the PATENTS file in the same directory.
+ *
+ */
+
+#import <Foundation/Foundation.h>
+
+/*! The name of the notification posted by BFMeasurementEvent */
+FOUNDATION_EXPORT NSString *const BFMeasurementEventNotificationName;
+
+/*! Defines keys in the userInfo object for the notification named BFMeasurementEventNotificationName */
+/*! The string field for the name of the event */
+FOUNDATION_EXPORT NSString *const BFMeasurementEventNameKey;
+/*! The dictionary field for the arguments of the event */
+FOUNDATION_EXPORT NSString *const BFMeasurementEventArgsKey;
+
+/*! Bolts Events raised by BFMeasurementEvent for Applink */
+/*!
+ The name of the event posted when [BFURL URLWithURL:] is called successfully. This represents the successful parsing of an app link URL.
+ */
+FOUNDATION_EXPORT NSString *const BFAppLinkParseEventName;
+
+/*!
+ The name of the event posted when [BFURL URLWithInboundURL:] is called successfully.
+ This represents parsing an inbound app link URL from a different application
+ */
+FOUNDATION_EXPORT NSString *const BFAppLinkNavigateInEventName;
+
+/*! The event raised when the user navigates from your app to other apps */
+FOUNDATION_EXPORT NSString *const BFAppLinkNavigateOutEventName;
+
+/*!
+ The event raised when the user navigates out from your app and back to the referrer app.
+ e.g when the user leaves your app after tapping the back-to-referrer navigation bar
+ */
+FOUNDATION_EXPORT NSString *const BFAppLinkNavigateBackToReferrerEventName;
+
+@interface BFMeasurementEvent : NSObject
+
+@end
diff --git a/ios/Frameworks/Bolts.framework/Headers/BFTask.h b/ios/Frameworks/Bolts.framework/Headers/BFTask.h
new file mode 100755
index 0000000..074c182
--- /dev/null
+++ b/ios/Frameworks/Bolts.framework/Headers/BFTask.h
@@ -0,0 +1,266 @@
+/*
+ *  Copyright (c) 2014, Facebook, Inc.
+ *  All rights reserved.
+ *
+ *  This source code is licensed under the BSD-style license found in the
+ *  LICENSE file in the root directory of this source tree. An additional grant
+ *  of patent rights can be found in the PATENTS file in the same directory.
+ *
+ */
+
+#import <Foundation/Foundation.h>
+
+#import <Bolts/BFCancellationToken.h>
+#import <Bolts/BFGeneric.h>
+
+NS_ASSUME_NONNULL_BEGIN
+
+/*!
+ Error domain used if there was multiple errors on <BFTask taskForCompletionOfAllTasks:>.
+ */
+extern NSString *const BFTaskErrorDomain;
+
+/*!
+ An error code used for <BFTask taskForCompletionOfAllTasks:>, if there were multiple errors.
+ */
+extern NSInteger const kBFMultipleErrorsError;
+
+/*!
+ An error userInfo key used if there were multiple errors on <BFTask taskForCompletionOfAllTasks:>.
+ Value type is `NSArray<NSError *> *`.
+ */
+extern NSString *const BFTaskMultipleErrorsUserInfoKey;
+
+@class BFExecutor;
+@class BFTask;
+
+/*!
+ The consumer view of a Task. A BFTask has methods to
+ inspect the state of the task, and to add continuations to
+ be run once the task is complete.
+ */
+@interface BFTask<__covariant ResultType> : NSObject
+
+/*!
+ A block that can act as a continuation for a task.
+ */
+typedef __nullable id(^BFContinuationBlock)(BFTask<ResultType> *t);
+
+/*!
+ Creates a task that is already completed with the given result.
+ @param result The result for the task.
+ */
++ (instancetype)taskWithResult:(nullable ResultType)result;
+
+/*!
+ Creates a task that is already completed with the given error.
+ @param error The error for the task.
+ */
++ (instancetype)taskWithError:(NSError *)error;
+
+/*!
+ Creates a task that is already cancelled.
+ */
++ (instancetype)cancelledTask;
+
+/*!
+ Returns a task that will be completed (with result == nil) once
+ all of the input tasks have completed.
+ @param tasks An `NSArray` of the tasks to use as an input.
+ */
++ (instancetype)taskForCompletionOfAllTasks:(nullable NSArray<BFTask *> *)tasks;
+
+/*!
+ Returns a task that will be completed once all of the input tasks have completed.
+ If all tasks complete successfully without being faulted or cancelled the result will be
+ an `NSArray` of all task results in the order they were provided.
+ @param tasks An `NSArray` of the tasks to use as an input.
+ */
++ (instancetype)taskForCompletionOfAllTasksWithResults:(nullable NSArray<BFTask *> *)tasks;
+
+/*!
+ Returns a task that will be completed once there is at least one successful task.
+ The first task to successuly complete will set the result, all other tasks results are
+ ignored.
+ @param tasks An `NSArray` of the tasks to use as an input.
+ */
++ (instancetype)taskForCompletionOfAnyTask:(nullable NSArray<BFTask *> *)tasks;
+
+/*!
+ Returns a task that will be completed a certain amount of time in the future.
+ @param millis The approximate number of milliseconds to wait before the
+ task will be finished (with result == nil).
+ */
++ (BFTask<BFVoid> *)taskWithDelay:(int)millis;
+
+/*!
+ Returns a task that will be completed a certain amount of time in the future.
+ @param millis The approximate number of milliseconds to wait before the
+ task will be finished (with result == nil).
+ @param token The cancellation token (optional).
+ */
++ (BFTask<BFVoid> *)taskWithDelay:(int)millis cancellationToken:(nullable BFCancellationToken *)token;
+
+/*!
+ Returns a task that will be completed after the given block completes with
+ the specified executor.
+ @param executor A BFExecutor responsible for determining how the
+ continuation block will be run.
+ @param block The block to immediately schedule to run with the given executor.
+ @returns A task that will be completed after block has run.
+ If block returns a BFTask, then the task returned from
+ this method will not be completed until that task is completed.
+ */
++ (instancetype)taskFromExecutor:(BFExecutor *)executor withBlock:(nullable id (^)(void))block;
+
+// Properties that will be set on the task once it is completed.
+
+/*!
+ The result of a successful task.
+ */
+@property (nullable, nonatomic, strong, readonly) ResultType result;
+
+/*!
+ The error of a failed task.
+ */
+@property (nullable, nonatomic, strong, readonly) NSError *error;
+
+/*!
+ Whether this task has been cancelled.
+ */
+@property (nonatomic, assign, readonly, getter=isCancelled) BOOL cancelled;
+
+/*!
+ Whether this task has completed due to an error.
+ */
+@property (nonatomic, assign, readonly, getter=isFaulted) BOOL faulted;
+
+/*!
+ Whether this task has completed.
+ */
+@property (nonatomic, assign, readonly, getter=isCompleted) BOOL completed;
+
+/*!
+ Enqueues the given block to be run once this task is complete.
+ This method uses a default execution strategy. The block will be
+ run on the thread where the previous task completes, unless the
+ the stack depth is too deep, in which case it will be run on a
+ dispatch queue with default priority.
+ @param block The block to be run once this task is complete.
+ @returns A task that will be completed after block has run.
+ If block returns a BFTask, then the task returned from
+ this method will not be completed until that task is completed.
+ */
+- (BFTask *)continueWithBlock:(BFContinuationBlock)block NS_SWIFT_NAME(continueWith(block:));
+
+/*!
+ Enqueues the given block to be run once this task is complete.
+ This method uses a default execution strategy. The block will be
+ run on the thread where the previous task completes, unless the
+ the stack depth is too deep, in which case it will be run on a
+ dispatch queue with default priority.
+ @param block The block to be run once this task is complete.
+ @param cancellationToken The cancellation token (optional).
+ @returns A task that will be completed after block has run.
+ If block returns a BFTask, then the task returned from
+ this method will not be completed until that task is completed.
+ */
+- (BFTask *)continueWithBlock:(BFContinuationBlock)block
+            cancellationToken:(nullable BFCancellationToken *)cancellationToken NS_SWIFT_NAME(continueWith(block:cancellationToken:));
+
+/*!
+ Enqueues the given block to be run once this task is complete.
+ @param executor A BFExecutor responsible for determining how the
+ continuation block will be run.
+ @param block The block to be run once this task is complete.
+ @returns A task that will be completed after block has run.
+ If block returns a BFTask, then the task returned from
+ this method will not be completed until that task is completed.
+ */
+- (BFTask *)continueWithExecutor:(BFExecutor *)executor
+                       withBlock:(BFContinuationBlock)block NS_SWIFT_NAME(continueWith(executor:block:));
+
+/*!
+ Enqueues the given block to be run once this task is complete.
+ @param executor A BFExecutor responsible for determining how the
+ continuation block will be run.
+ @param block The block to be run once this task is complete.
+ @param cancellationToken The cancellation token (optional).
+ @returns A task that will be completed after block has run.
+ If block returns a BFTask, then the task returned from
+ his method will not be completed until that task is completed.
+ */
+- (BFTask *)continueWithExecutor:(BFExecutor *)executor
+                           block:(BFContinuationBlock)block
+               cancellationToken:(nullable BFCancellationToken *)cancellationToken
+NS_SWIFT_NAME(continueWith(executor:block:cancellationToken:));
+
+/*!
+ Identical to continueWithBlock:, except that the block is only run
+ if this task did not produce a cancellation or an error.
+ If it did, then the failure will be propagated to the returned
+ task.
+ @param block The block to be run once this task is complete.
+ @returns A task that will be completed after block has run.
+ If block returns a BFTask, then the task returned from
+ this method will not be completed until that task is completed.
+ */
+- (BFTask *)continueWithSuccessBlock:(BFContinuationBlock)block NS_SWIFT_NAME(continueOnSuccessWith(block:));
+
+/*!
+ Identical to continueWithBlock:, except that the block is only run
+ if this task did not produce a cancellation or an error.
+ If it did, then the failure will be propagated to the returned
+ task.
+ @param block The block to be run once this task is complete.
+ @param cancellationToken The cancellation token (optional).
+ @returns A task that will be completed after block has run.
+ If block returns a BFTask, then the task returned from
+ this method will not be completed until that task is completed.
+ */
+- (BFTask *)continueWithSuccessBlock:(BFContinuationBlock)block
+                   cancellationToken:(nullable BFCancellationToken *)cancellationToken
+NS_SWIFT_NAME(continueOnSuccessWith(block:cancellationToken:));
+
+/*!
+ Identical to continueWithExecutor:withBlock:, except that the block
+ is only run if this task did not produce a cancellation, error, or an error.
+ If it did, then the failure will be propagated to the returned task.
+ @param executor A BFExecutor responsible for determining how the
+ continuation block will be run.
+ @param block The block to be run once this task is complete.
+ @returns A task that will be completed after block has run.
+ If block returns a BFTask, then the task returned from
+ this method will not be completed until that task is completed.
+ */
+- (BFTask *)continueWithExecutor:(BFExecutor *)executor
+                withSuccessBlock:(BFContinuationBlock)block NS_SWIFT_NAME(continueOnSuccessWith(executor:block:));
+
+/*!
+ Identical to continueWithExecutor:withBlock:, except that the block
+ is only run if this task did not produce a cancellation or an error.
+ If it did, then the failure will be propagated to the returned task.
+ @param executor A BFExecutor responsible for determining how the
+ continuation block will be run.
+ @param block The block to be run once this task is complete.
+ @param cancellationToken The cancellation token (optional).
+ @returns A task that will be completed after block has run.
+ If block returns a BFTask, then the task returned from
+ this method will not be completed until that task is completed.
+ */
+- (BFTask *)continueWithExecutor:(BFExecutor *)executor
+                    successBlock:(BFContinuationBlock)block
+               cancellationToken:(nullable BFCancellationToken *)cancellationToken
+NS_SWIFT_NAME(continueOnSuccessWith(executor:block:cancellationToken:));
+
+/*!
+ Waits until this operation is completed.
+ This method is inefficient and consumes a thread resource while
+ it's running. It should be avoided. This method logs a warning
+ message if it is used on the main thread.
+ */
+- (void)waitUntilFinished;
+
+@end
+
+NS_ASSUME_NONNULL_END
diff --git a/ios/Frameworks/Bolts.framework/Headers/BFTaskCompletionSource.h b/ios/Frameworks/Bolts.framework/Headers/BFTaskCompletionSource.h
new file mode 100755
index 0000000..f94c18f
--- /dev/null
+++ b/ios/Frameworks/Bolts.framework/Headers/BFTaskCompletionSource.h
@@ -0,0 +1,75 @@
+/*
+ *  Copyright (c) 2014, Facebook, Inc.
+ *  All rights reserved.
+ *
+ *  This source code is licensed under the BSD-style license found in the
+ *  LICENSE file in the root directory of this source tree. An additional grant
+ *  of patent rights can be found in the PATENTS file in the same directory.
+ *
+ */
+
+#import <Foundation/Foundation.h>
+
+NS_ASSUME_NONNULL_BEGIN
+
+@class BFTask<__covariant ResultType>;
+
+/*!
+ A BFTaskCompletionSource represents the producer side of tasks.
+ It is a task that also has methods for changing the state of the
+ task by settings its completion values.
+ */
+@interface BFTaskCompletionSource<__covariant ResultType> : NSObject
+
+/*!
+ Creates a new unfinished task.
+ */
++ (instancetype)taskCompletionSource;
+
+/*!
+ The task associated with this TaskCompletionSource.
+ */
+@property (nonatomic, strong, readonly) BFTask<ResultType> *task;
+
+/*!
+ Completes the task by setting the result.
+ Attempting to set this for a completed task will raise an exception.
+ @param result The result of the task.
+ */
+- (void)setResult:(nullable ResultType)result NS_SWIFT_NAME(set(result:));
+
+/*!
+ Completes the task by setting the error.
+ Attempting to set this for a completed task will raise an exception.
+ @param error The error for the task.
+ */
+- (void)setError:(NSError *)error NS_SWIFT_NAME(set(error:));
+
+/*!
+ Completes the task by marking it as cancelled.
+ Attempting to set this for a completed task will raise an exception.
+ */
+- (void)cancel;
+
+/*!
+ Sets the result of the task if it wasn't already completed.
+ @returns whether the new value was set.
+ */
+- (BOOL)trySetResult:(nullable ResultType)result NS_SWIFT_NAME(trySet(result:));
+
+/*!
+ Sets the error of the task if it wasn't already completed.
+ @param error The error for the task.
+ @returns whether the new value was set.
+ */
+- (BOOL)trySetError:(NSError *)error NS_SWIFT_NAME(trySet(error:));
+
+/*!
+ Sets the cancellation state of the task if it wasn't already completed.
+ @returns whether the new value was set.
+ */
+- (BOOL)trySetCancelled;
+
+@end
+
+NS_ASSUME_NONNULL_END
diff --git a/ios/Frameworks/Bolts.framework/Headers/BFURL.h b/ios/Frameworks/Bolts.framework/Headers/BFURL.h
new file mode 100755
index 0000000..924c91d
--- /dev/null
+++ b/ios/Frameworks/Bolts.framework/Headers/BFURL.h
@@ -0,0 +1,75 @@
+/*
+ *  Copyright (c) 2014, Facebook, Inc.
+ *  All rights reserved.
+ *
+ *  This source code is licensed under the BSD-style license found in the
+ *  LICENSE file in the root directory of this source tree. An additional grant
+ *  of patent rights can be found in the PATENTS file in the same directory.
+ *
+ */
+
+#import <Foundation/Foundation.h>
+
+@class BFAppLink;
+
+/*!
+ Provides a set of utilities for working with NSURLs, such as parsing of query parameters
+ and handling for App Link requests.
+ */
+@interface BFURL : NSObject
+
+/*!
+ Creates a link target from a raw URL.
+ On success, this posts the BFAppLinkParseEventName measurement event. If you are constructing the BFURL within your application delegate's
+ application:openURL:sourceApplication:annotation:, you should instead use URLWithInboundURL:sourceApplication:
+ to support better BFMeasurementEvent notifications
+ @param url The instance of `NSURL` to create BFURL from.
+ */
++ (BFURL *)URLWithURL:(NSURL *)url;
+
+/*!
+ Creates a link target from a raw URL received from an external application. This is typically called from the app delegate's
+ application:openURL:sourceApplication:annotation: and will post the BFAppLinkNavigateInEventName measurement event.
+ @param url The instance of `NSURL` to create BFURL from.
+ @param sourceApplication the bundle ID of the app that is requesting your app to open the URL. The same sourceApplication in application:openURL:sourceApplication:annotation:
+ */
++ (BFURL *)URLWithInboundURL:(NSURL *)url sourceApplication:(NSString *)sourceApplication;
+
+/*!
+ Gets the target URL.  If the link is an App Link, this is the target of the App Link.
+ Otherwise, it is the url that created the target.
+ */
+@property (nonatomic, strong, readonly) NSURL *targetURL;
+
+/*!
+ Gets the query parameters for the target, parsed into an NSDictionary.
+ */
+@property (nonatomic, strong, readonly) NSDictionary *targetQueryParameters;
+
+/*!
+ If this link target is an App Link, this is the data found in al_applink_data.
+ Otherwise, it is nil.
+ */
+@property (nonatomic, strong, readonly) NSDictionary *appLinkData;
+
+/*!
+ If this link target is an App Link, this is the data found in extras.
+ */
+@property (nonatomic, strong, readonly) NSDictionary *appLinkExtras;
+
+/*!
+ The App Link indicating how to navigate back to the referer app, if any.
+ */
+@property (nonatomic, strong, readonly) BFAppLink *appLinkReferer;
+
+/*!
+ The URL that was used to create this BFURL.
+ */
+@property (nonatomic, strong, readonly) NSURL *inputURL;
+
+/*!
+ The query parameters of the inputURL, parsed into an NSDictionary.
+ */
+@property (nonatomic, strong, readonly) NSDictionary *inputQueryParameters;
+
+@end
diff --git a/ios/Frameworks/Bolts.framework/Headers/BFWebViewAppLinkResolver.h b/ios/Frameworks/Bolts.framework/Headers/BFWebViewAppLinkResolver.h
new file mode 100755
index 0000000..3782ae2
--- /dev/null
+++ b/ios/Frameworks/Bolts.framework/Headers/BFWebViewAppLinkResolver.h
@@ -0,0 +1,26 @@
+/*
+ *  Copyright (c) 2014, Facebook, Inc.
+ *  All rights reserved.
+ *
+ *  This source code is licensed under the BSD-style license found in the
+ *  LICENSE file in the root directory of this source tree. An additional grant
+ *  of patent rights can be found in the PATENTS file in the same directory.
+ *
+ */
+
+#import <Foundation/Foundation.h>
+
+#import <Bolts/BFAppLinkResolving.h>
+
+/*!
+ A reference implementation for an App Link resolver that uses a hidden UIWebView
+ to parse the HTML containing App Link metadata.
+ */
+@interface BFWebViewAppLinkResolver : NSObject <BFAppLinkResolving>
+
+/*!
+ Gets the instance of a BFWebViewAppLinkResolver.
+ */
++ (instancetype)sharedInstance;
+
+@end
diff --git a/ios/Frameworks/Bolts.framework/Headers/Bolts.h b/ios/Frameworks/Bolts.framework/Headers/Bolts.h
new file mode 100755
index 0000000..a3f2bd6
--- /dev/null
+++ b/ios/Frameworks/Bolts.framework/Headers/Bolts.h
@@ -0,0 +1,39 @@
+/*
+ *  Copyright (c) 2014, Facebook, Inc.
+ *  All rights reserved.
+ *
+ *  This source code is licensed under the BSD-style license found in the
+ *  LICENSE file in the root directory of this source tree. An additional grant
+ *  of patent rights can be found in the PATENTS file in the same directory.
+ *
+ */
+
+#import <Bolts/BFCancellationToken.h>
+#import <Bolts/BFCancellationTokenRegistration.h>
+#import <Bolts/BFCancellationTokenSource.h>
+#import <Bolts/BFExecutor.h>
+#import <Bolts/BFGeneric.h>
+#import <Bolts/BFTask.h>
+#import <Bolts/BFTaskCompletionSource.h>
+
+#if __has_include(<Bolts/BFAppLink.h>) && TARGET_OS_IPHONE && !TARGET_OS_WATCH && !TARGET_OS_TV
+#import <Bolts/BFAppLink.h>
+#import <Bolts/BFAppLinkNavigation.h>
+#import <Bolts/BFAppLinkResolving.h>
+#import <Bolts/BFAppLinkReturnToRefererController.h>
+#import <Bolts/BFAppLinkReturnToRefererView.h>
+#import <Bolts/BFAppLinkTarget.h>
+#import <Bolts/BFMeasurementEvent.h>
+#import <Bolts/BFURL.h>
+#import <Bolts/BFWebViewAppLinkResolver.h>
+#endif
+
+
+NS_ASSUME_NONNULL_BEGIN
+
+/**
+ A string containing the version of the Bolts Framework used by the current application.
+ */
+extern NSString *const BoltsFrameworkVersionString;
+
+NS_ASSUME_NONNULL_END
diff --git a/ios/Frameworks/Bolts.framework/Info.plist b/ios/Frameworks/Bolts.framework/Info.plist
new file mode 100755
index 0000000..b2f3cc6
Binary files /dev/null and b/ios/Frameworks/Bolts.framework/Info.plist differ
diff --git a/ios/Frameworks/Bolts.framework/Modules/module.modulemap b/ios/Frameworks/Bolts.framework/Modules/module.modulemap
new file mode 100755
index 0000000..3c92a17
--- /dev/null
+++ b/ios/Frameworks/Bolts.framework/Modules/module.modulemap
@@ -0,0 +1,15 @@
+framework module Bolts {
+  umbrella header "Bolts.h"
+
+  export *
+  module * { export * }
+
+  explicit module BFAppLinkResolving {
+    header "BFAppLinkResolving.h"
+    export *
+  }
+  explicit module BFWebViewAppLinkResolver {
+    header "BFWebViewAppLinkResolver.h"
+    export *
+  }
+}
diff --git a/ios/Frameworks/FBSDKCoreKit.framework/FBSDKCoreKit b/ios/Frameworks/FBSDKCoreKit.framework/FBSDKCoreKit
new file mode 100644
index 0000000..7d37823
Binary files /dev/null and b/ios/Frameworks/FBSDKCoreKit.framework/FBSDKCoreKit differ
diff --git a/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKAccessToken.h b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKAccessToken.h
new file mode 100644
index 0000000..ff73de5
--- /dev/null
+++ b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKAccessToken.h
@@ -0,0 +1,247 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import <FBSDKCoreKit/FBSDKCopying.h>
+#import <FBSDKCoreKit/FBSDKGraphRequestConnection.h>
+
+#if __IPHONE_OS_VERSION_MAX_ALLOWED >= __IPHONE_10_0
+
+/**
+  Notification indicating that the `currentAccessToken` has changed.
+
+ the userInfo dictionary of the notification will contain keys
+ `FBSDKAccessTokenChangeOldKey` and
+ `FBSDKAccessTokenChangeNewKey`.
+ */
+FOUNDATION_EXPORT NSNotificationName const FBSDKAccessTokenDidChangeNotification;
+
+#else
+
+/**
+  Notification indicating that the `currentAccessToken` has changed.
+
+ the userInfo dictionary of the notification will contain keys
+ `FBSDKAccessTokenChangeOldKey` and
+ `FBSDKAccessTokenChangeNewKey`.
+ */
+FOUNDATION_EXPORT NSString *const FBSDKAccessTokenDidChangeNotification;
+
+#endif
+
+/**
+  A key in the notification's userInfo that will be set
+  if and only if the user ID changed between the old and new tokens.
+
+ Token refreshes can occur automatically with the SDK
+  which do not change the user. If you're only interested in user
+  changes (such as logging out), you should check for the existence
+  of this key. The value is a NSNumber with a boolValue.
+
+  On a fresh start of the app where the SDK reads in the cached value
+  of an access token, this key will also exist since the access token
+  is moving from a null state (no user) to a non-null state (user).
+ */
+FOUNDATION_EXPORT NSString *const FBSDKAccessTokenDidChangeUserIDKey;
+
+FOUNDATION_EXPORT NSString *const FBSDKAccessTokenDidChangeUserID
+DEPRECATED_MSG_ATTRIBUTE("Renamed `FBSDKAccessTokenDidChangeUserIDKey`");
+
+/*
+  key in notification's userInfo object for getting the old token.
+
+ If there was no old token, the key will not be present.
+ */
+FOUNDATION_EXPORT NSString *const FBSDKAccessTokenChangeOldKey;
+
+/*
+  key in notification's userInfo object for getting the new token.
+
+ If there is no new token, the key will not be present.
+ */
+FOUNDATION_EXPORT NSString *const FBSDKAccessTokenChangeNewKey;
+
+/*
+ A key in the notification's userInfo that will be set
+ if and only if the token has expired.
+ */
+FOUNDATION_EXPORT NSString *const FBSDKAccessTokenDidExpireKey;
+
+FOUNDATION_EXPORT NSString *const FBSDKAccessTokenDidExpire
+DEPRECATED_MSG_ATTRIBUTE("Renamed `FBSDKAccessTokenDidExpireKey`");
+
+
+/**
+  Represents an immutable access token for using Facebook services.
+ */
+@interface FBSDKAccessToken : NSObject<FBSDKCopying, NSSecureCoding>
+
+/**
+  Returns the app ID.
+ */
+@property (readonly, copy, nonatomic) NSString *appID;
+
+/**
+ Returns the expiration date for data access
+ */
+@property (readonly, copy, nonatomic) NSDate *dataAccessExpirationDate;
+
+/**
+  Returns the known declined permissions.
+ */
+@property (readonly, copy, nonatomic) NSSet *declinedPermissions;
+
+/**
+  Returns the expiration date.
+ */
+@property (readonly, copy, nonatomic) NSDate *expirationDate;
+
+/**
+  Returns the known granted permissions.
+ */
+@property (readonly, copy, nonatomic) NSSet *permissions;
+
+/**
+  Returns the date the token was last refreshed.
+*/
+@property (readonly, copy, nonatomic) NSDate *refreshDate;
+
+/**
+  Returns the opaque token string.
+ */
+@property (readonly, copy, nonatomic) NSString *tokenString;
+
+/**
+  Returns the user ID.
+ */
+@property (readonly, copy, nonatomic) NSString *userID;
+
+/**
+ Returns whether the access token is expired by checking its expirationDate property
+ */
+@property (readonly, assign, nonatomic, getter = isExpired) BOOL expired;
+
+/**
+ Returns whether user data access is still active for the given access token
+ */
+@property (readonly, assign, nonatomic, getter = isDataAccessExpired) BOOL dataAccessExpired;
+
+- (instancetype)init NS_UNAVAILABLE;
++ (instancetype)new NS_UNAVAILABLE;
+
+/**
+ Initializes a new instance.
+ @param tokenString the opaque token string.
+ @param permissions the granted permissions. Note this is converted to NSSet and is only
+ an NSArray for the convenience of literal syntax.
+ @param declinedPermissions the declined permissions. Note this is converted to NSSet and is only
+ an NSArray for the convenience of literal syntax.
+ @param appID the app ID.
+ @param userID the user ID.
+ @param expirationDate the optional expiration date (defaults to distantFuture).
+ @param refreshDate the optional date the token was last refreshed (defaults to today).
+
+ This initializer should only be used for advanced apps that
+ manage tokens explicitly. Typical login flows only need to use `FBSDKLoginManager`
+ along with `+currentAccessToken`.
+ */
+- (instancetype)initWithTokenString:(NSString *)tokenString
+                        permissions:(NSArray *)permissions
+                declinedPermissions:(NSArray *)declinedPermissions
+                              appID:(NSString *)appID
+                             userID:(NSString *)userID
+                     expirationDate:(NSDate *)expirationDate
+                        refreshDate:(NSDate *)refreshDate;
+
+/**
+  Initializes a new instance.
+ @param tokenString the opaque token string.
+ @param permissions the granted permissions. Note this is converted to NSSet and is only
+ an NSArray for the convenience of literal syntax.
+ @param declinedPermissions the declined permissions. Note this is converted to NSSet and is only
+ an NSArray for the convenience of literal syntax.
+ @param appID the app ID.
+ @param userID the user ID.
+ @param expirationDate the optional expiration date (defaults to distantFuture).
+ @param refreshDate the optional date the token was last refreshed (defaults to today).
+ @param dataAccessExpirationDate the date which data access will expire for the given user
+ (defaults to distantFuture).
+
+ This initializer should only be used for advanced apps that
+ manage tokens explicitly. Typical login flows only need to use `FBSDKLoginManager`
+ along with `+currentAccessToken`.
+ */
+- (instancetype)initWithTokenString:(NSString *)tokenString
+                        permissions:(NSArray *)permissions
+                declinedPermissions:(NSArray *)declinedPermissions
+                              appID:(NSString *)appID
+                             userID:(NSString *)userID
+                     expirationDate:(NSDate *)expirationDate
+                        refreshDate:(NSDate *)refreshDate
+                 dataAccessExpirationDate:(NSDate *)dataAccessExpirationDate
+NS_DESIGNATED_INITIALIZER;
+
+/**
+  Convenience getter to determine if a permission has been granted
+ @param permission  The permission to check.
+ */
+- (BOOL)hasGranted:(NSString *)permission;
+
+/**
+  Compares the receiver to another FBSDKAccessToken
+ @param token The other token
+ @return YES if the receiver's values are equal to the other token's values; otherwise NO
+ */
+- (BOOL)isEqualToAccessToken:(FBSDKAccessToken *)token;
+
+/**
+  Returns the "global" access token that represents the currently logged in user.
+
+ The `currentAccessToken` is a convenient representation of the token of the
+ current user and is used by other SDK components (like `FBSDKLoginManager`).
+ */
++ (FBSDKAccessToken *)currentAccessToken;
+
+/**
+ Returns YES if currentAccessToken is not nil AND currentAccessToken is not expired
+
+ */
++ (BOOL)currentAccessTokenIsActive;
+
+/**
+  Sets the "global" access token that represents the currently logged in user.
+ @param token The access token to set.
+
+ This will broadcast a notification and save the token to the app keychain.
+ */
++ (void)setCurrentAccessToken:(FBSDKAccessToken *)token;
+
+/**
+  Refresh the current access token's permission state and extend the token's expiration date,
+  if possible.
+ @param completionHandler an optional callback handler that can surface any errors related to permission refreshing.
+
+ On a successful refresh, the currentAccessToken will be updated so you typically only need to
+  observe the `FBSDKAccessTokenDidChangeNotification` notification.
+
+ If a token is already expired, it cannot be refreshed.
+ */
++ (void)refreshCurrentAccessToken:(FBSDKGraphRequestHandler)completionHandler;
+
+@end
diff --git a/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKAppEvents.h b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKAppEvents.h
new file mode 100644
index 0000000..4216bfd
--- /dev/null
+++ b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKAppEvents.h
@@ -0,0 +1,822 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#if !TARGET_OS_TV
+#import <WebKit/WebKit.h>
+#endif
+
+#import <FBSDKCoreKit/FBSDKGraphRequestConnection.h>
+
+@class FBSDKAccessToken;
+@class FBSDKGraphRequest;
+
+#if __IPHONE_OS_VERSION_MAX_ALLOWED >= __IPHONE_10_0
+
+/**  NSNotificationCenter name indicating a result of a failed log flush attempt. The posted object will be an NSError instance. */
+FOUNDATION_EXPORT NSNotificationName const FBSDKAppEventsLoggingResultNotification;
+
+#else
+
+/**  NSNotificationCenter name indicating a result of a failed log flush attempt. The posted object will be an NSError instance. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventsLoggingResultNotification;
+
+#endif
+
+/**  optional plist key ("FacebookLoggingOverrideAppID") for setting `loggingOverrideAppID` */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventsOverrideAppIDBundleKey;
+
+/**
+
+ NS_ENUM (NSUInteger, FBSDKAppEventsFlushBehavior)
+
+  Specifies when `FBSDKAppEvents` sends log events to the server.
+
+ */
+typedef NS_ENUM(NSUInteger, FBSDKAppEventsFlushBehavior)
+{
+
+  /** Flush automatically: periodically (once a minute or every 100 logged events) and always at app reactivation. */
+  FBSDKAppEventsFlushBehaviorAuto = 0,
+
+  /** Only flush when the `flush` method is called. When an app is moved to background/terminated, the
+   events are persisted and re-established at activation, but they will only be written with an
+   explicit call to `flush`. */
+  FBSDKAppEventsFlushBehaviorExplicitOnly,
+
+};
+
+/**
+  NS_ENUM(NSUInteger, FBSDKProductAvailability)
+    Specifies product availability for Product Catalog product item update
+ */
+typedef NS_ENUM(NSUInteger, FBSDKProductAvailability)
+{
+  /**
+   * Item ships immediately
+   */
+  FBSDKProductAvailabilityInStock = 0,
+  /**
+   * No plan to restock
+   */
+  FBSDKProductAvailabilityOutOfStock,
+  /**
+   * Available in future
+   */
+  FBSDKProductAvailabilityPreOrder,
+  /**
+   * Ships in 1-2 weeks
+   */
+  FBSDKProductAvailabilityAvailableForOrder,
+  /**
+   * Discontinued
+   */
+  FBSDKProductAvailabilityDiscontinued,
+};
+
+/**
+ NS_ENUM(NSUInteger, FBSDKProductCondition)
+ Specifies product condition for Product Catalog product item update
+ */
+typedef NS_ENUM(NSUInteger, FBSDKProductCondition)
+{
+  FBSDKProductConditionNew = 0,
+  FBSDKProductConditionRefurbished,
+  FBSDKProductConditionUsed,
+};
+
+/**
+ @methodgroup Predefined event names for logging events common to many apps.  Logging occurs through the `logEvent` family of methods on `FBSDKAppEvents`.
+ Common event parameters are provided in the `FBSDKAppEventsParameterNames*` constants.
+ */
+
+/** Log this event when the user has achieved a level in the app. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventNameAchievedLevel;
+
+/** Log this event when the user has entered their payment info. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventNameAddedPaymentInfo;
+
+/** Log this event when the user has added an item to their cart.  The valueToSum passed to logEvent should be the item's price. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventNameAddedToCart;
+
+/** Log this event when the user has added an item to their wishlist.  The valueToSum passed to logEvent should be the item's price. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventNameAddedToWishlist;
+
+/** Log this event when a user has completed registration with the app. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventNameCompletedRegistration;
+
+/** Log this event when the user has completed a tutorial in the app. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventNameCompletedTutorial;
+
+/** Log this event when the user has entered the checkout process.  The valueToSum passed to logEvent should be the total price in the cart. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventNameInitiatedCheckout;
+
+/** Log this event when the user has rated an item in the app.  The valueToSum passed to logEvent should be the numeric rating. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventNameRated;
+
+/** Log this event when a user has performed a search within the app. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventNameSearched;
+
+/** Log this event when the user has spent app credits.  The valueToSum passed to logEvent should be the number of credits spent. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventNameSpentCredits;
+
+/** Log this event when the user has unlocked an achievement in the app. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventNameUnlockedAchievement;
+
+/** Log this event when a user has viewed a form of content in the app. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventNameViewedContent;
+
+/** A telephone/SMS, email, chat or other type of contact between a customer and your business. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventNameContact;
+
+/** The customization of products through a configuration tool or other application your business owns. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventNameCustomizeProduct;
+
+/** The donation of funds to your organization or cause. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventNameDonate;
+
+/** When a person finds one of your locations via web or application, with an intention to visit (example: find product at a local store). */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventNameFindLocation;
+
+/** The booking of an appointment to visit one of your locations. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventNameSchedule;
+
+/** The start of a free trial of a product or service you offer (example: trial subscription). */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventNameStartTrial;
+
+/** The submission of an application for a product, service or program you offer (example: credit card, educational program or job). */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventNameSubmitApplication;
+
+/** The start of a paid subscription for a product or service you offer. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventNameSubscribe;
+
+/** Log this event when the user views an ad. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventNameAdImpression;
+
+/** Log this event when the user clicks an ad. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventNameAdClick;
+
+/**
+ @methodgroup Predefined event name parameters for common additional information to accompany events logged through the `logEvent` family
+ of methods on `FBSDKAppEvents`.  Common event names are provided in the `FBAppEventName*` constants.
+ */
+
+ /**
+  * Parameter key used to specify data for the one or more pieces of content being logged about.
+  * Data should be a JSON encoded string.
+  * Example:
+  * "[{\"id\": \"1234\", \"quantity\": 2, \"item_price\": 5.99}, {\"id\": \"5678\", \"quantity\": 1, \"item_price\": 9.99}]"
+  */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterNameContent;
+
+/** Parameter key used to specify an ID for the specific piece of content being logged about.  Could be an EAN, article identifier, etc., depending on the nature of the app. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterNameContentID;
+
+/** Parameter key used to specify a generic content type/family for the logged event, e.g. "music", "photo", "video".  Options to use will vary based upon what the app is all about. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterNameContentType;
+
+/** Parameter key used to specify currency used with logged event.  E.g. "USD", "EUR", "GBP".  See ISO-4217 for specific values.  One reference for these is <http://en.wikipedia.org/wiki/ISO_4217>. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterNameCurrency;
+
+/** Parameter key used to specify a description appropriate to the event being logged.  E.g., the name of the achievement unlocked in the `FBAppEventNameAchievementUnlocked` event. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterNameDescription;
+
+/** Parameter key used to specify the level achieved in a `FBAppEventNameAchieved` event. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterNameLevel;
+
+/** Parameter key used to specify the maximum rating available for the `FBAppEventNameRate` event.  E.g., "5" or "10". */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterNameMaxRatingValue;
+
+/** Parameter key used to specify how many items are being processed for an `FBAppEventNameInitiatedCheckout` or `FBAppEventNamePurchased` event. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterNameNumItems;
+
+/** Parameter key used to specify whether payment info is available for the `FBAppEventNameInitiatedCheckout` event.  `FBSDKAppEventParameterValueYes` and `FBSDKAppEventParameterValueNo` are good canonical values to use for this parameter. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterNamePaymentInfoAvailable;
+
+/** Parameter key used to specify method user has used to register for the app, e.g., "Facebook", "email", "Twitter", etc */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterNameRegistrationMethod;
+
+/** Parameter key used to specify the string provided by the user for a search operation. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterNameSearchString;
+
+/** Parameter key used to specify whether the activity being logged about was successful or not.  `FBSDKAppEventParameterValueYes` and `FBSDKAppEventParameterValueNo` are good canonical values to use for this parameter. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterNameSuccess;
+
+/**
+ @methodgroup Predefined event name parameters for common additional information to accompany events logged through the `logProductItem` method on `FBSDKAppEvents`.
+ */
+
+/** Parameter key used to specify the product item's custom label 0. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterProductCustomLabel0;
+
+/** Parameter key used to specify the product item's custom label 1. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterProductCustomLabel1;
+
+/** Parameter key used to specify the product item's custom label 2. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterProductCustomLabel2;
+
+/** Parameter key used to specify the product item's custom label 3. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterProductCustomLabel3;
+
+/** Parameter key used to specify the product item's custom label 4. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterProductCustomLabel4;
+
+/** Parameter key used to specify the product item's AppLink app URL for iOS. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterProductAppLinkIOSUrl;
+
+/** Parameter key used to specify the product item's AppLink app ID for iOS App Store. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterProductAppLinkIOSAppStoreID;
+
+/** Parameter key used to specify the product item's AppLink app name for iOS. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterProductAppLinkIOSAppName;
+
+/** Parameter key used to specify the product item's AppLink app URL for iPhone. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterProductAppLinkIPhoneUrl;
+
+/** Parameter key used to specify the product item's AppLink app ID for iPhone App Store. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterProductAppLinkIPhoneAppStoreID;
+
+/** Parameter key used to specify the product item's AppLink app name for iPhone. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterProductAppLinkIPhoneAppName;
+
+/** Parameter key used to specify the product item's AppLink app URL for iPad. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterProductAppLinkIPadUrl;
+
+/** Parameter key used to specify the product item's AppLink app ID for iPad App Store. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterProductAppLinkIPadAppStoreID;
+
+/** Parameter key used to specify the product item's AppLink app name for iPad. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterProductAppLinkIPadAppName;
+
+/** Parameter key used to specify the product item's AppLink app URL for Android. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterProductAppLinkAndroidUrl;
+
+/** Parameter key used to specify the product item's AppLink fully-qualified package name for intent generation. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterProductAppLinkAndroidPackage;
+
+/** Parameter key used to specify the product item's AppLink app name for Android. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterProductAppLinkAndroidAppName;
+
+/** Parameter key used to specify the product item's AppLink app URL for Windows Phone. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterProductAppLinkWindowsPhoneUrl;
+
+/** Parameter key used to specify the product item's AppLink app ID, as a GUID, for App Store. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterProductAppLinkWindowsPhoneAppID;
+
+/** Parameter key used to specify the product item's AppLink app name for Windows Phone. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterProductAppLinkWindowsPhoneAppName;
+
+/*
+ @methodgroup Predefined values to assign to event parameters that accompany events logged through the `logEvent` family
+ of methods on `FBSDKAppEvents`.  Common event parameters are provided in the `FBSDKAppEventParameterName*` constants.
+ */
+
+/** Yes-valued parameter value to be used with parameter keys that need a Yes/No value */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterValueYes;
+
+/** No-valued parameter value to be used with parameter keys that need a Yes/No value */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterValueNo;
+
+/** Parameter key used to specify the type of ad in an FBSDKAppEventNameAdImpression
+ * or FBSDKAppEventNameAdClick event.
+ * E.g. "banner", "interstitial", "rewarded_video", "native" */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterNameAdType;
+
+/** Parameter key used to specify the unique ID for all events within a subscription
+ * in an FBSDKAppEventNameSubscribe or FBSDKAppEventNameStartTrial event. */
+FOUNDATION_EXPORT NSString *const FBSDKAppEventParameterNameOrderID;
+
+/**
+
+
+  Client-side event logging for specialized application analytics available through Facebook App Insights
+ and for use with Facebook Ads conversion tracking and optimization.
+
+
+
+ The `FBSDKAppEvents` static class has a few related roles:
+
+ + Logging predefined and application-defined events to Facebook App Insights with a
+ numeric value to sum across a large number of events, and an optional set of key/value
+ parameters that define "segments" for this event (e.g., 'purchaserStatus' : 'frequent', or
+ 'gamerLevel' : 'intermediate')
+
+ + Logging events to later be used for ads optimization around lifetime value.
+
+ + Methods that control the way in which events are flushed out to the Facebook servers.
+
+ Here are some important characteristics of the logging mechanism provided by `FBSDKAppEvents`:
+
+ + Events are not sent immediately when logged.  They're cached and flushed out to the Facebook servers
+ in a number of situations:
+ - when an event count threshold is passed (currently 100 logged events).
+ - when a time threshold is passed (currently 15 seconds).
+ - when an app has gone to background and is then brought back to the foreground.
+
+ + Events will be accumulated when the app is in a disconnected state, and sent when the connection is
+ restored and one of the above 'flush' conditions are met.
+
+ + The `FBSDKAppEvents` class is thread-safe in that events may be logged from any of the app's threads.
+
+ + The developer can set the `flushBehavior` on `FBSDKAppEvents` to force the flushing of events to only
+ occur on an explicit call to the `flush` method.
+
+ + The developer can turn on console debug output for event logging and flushing to the server by using
+ the `FBSDKLoggingBehaviorAppEvents` value in `[FBSettings setLoggingBehavior:]`.
+
+ Some things to note when logging events:
+
+ + There is a limit on the number of unique event names an app can use, on the order of 1000.
+ + There is a limit to the number of unique parameter names in the provided parameters that can
+ be used per event, on the order of 25.  This is not just for an individual call, but for all
+ invocations for that eventName.
+ + Event names and parameter names (the keys in the NSDictionary) must be between 2 and 40 characters, and
+ must consist of alphanumeric characters, _, -, or spaces.
+ + The length of each parameter value can be no more than on the order of 100 characters.
+
+ */
+@interface FBSDKAppEvents : NSObject
+
+/*
+ * Basic event logging
+ */
+
+/**
+
+  Log an event with just an eventName.
+
+ @param eventName   The name of the event to record.  Limitations on number of events and name length
+ are given in the `FBSDKAppEvents` documentation.
+
+ */
++ (void)logEvent:(NSString *)eventName;
+
+/**
+
+  Log an event with an eventName and a numeric value to be aggregated with other events of this name.
+
+ @param eventName   The name of the event to record.  Limitations on number of events and name length
+ are given in the `FBSDKAppEvents` documentation.  Common event names are provided in `FBAppEventName*` constants.
+
+ @param valueToSum  Amount to be aggregated into all events of this eventName, and App Insights will report
+ the cumulative and average value of this amount.
+ */
++ (void)logEvent:(NSString *)eventName
+      valueToSum:(double)valueToSum;
+
+
+/**
+
+  Log an event with an eventName and a set of key/value pairs in the parameters dictionary.
+ Parameter limitations are described above.
+
+ @param eventName   The name of the event to record.  Limitations on number of events and name construction
+ are given in the `FBSDKAppEvents` documentation.  Common event names are provided in `FBAppEventName*` constants.
+
+ @param parameters  Arbitrary parameter dictionary of characteristics. The keys to this dictionary must
+ be NSString's, and the values are expected to be NSString or NSNumber.  Limitations on the number of
+ parameters and name construction are given in the `FBSDKAppEvents` documentation.  Commonly used parameter names
+ are provided in `FBSDKAppEventParameterName*` constants.
+ */
++ (void)logEvent:(NSString *)eventName
+      parameters:(NSDictionary *)parameters;
+
+/**
+
+  Log an event with an eventName, a numeric value to be aggregated with other events of this name,
+ and a set of key/value pairs in the parameters dictionary.
+
+ @param eventName   The name of the event to record.  Limitations on number of events and name construction
+ are given in the `FBSDKAppEvents` documentation.  Common event names are provided in `FBAppEventName*` constants.
+
+ @param valueToSum  Amount to be aggregated into all events of this eventName, and App Insights will report
+ the cumulative and average value of this amount.
+
+ @param parameters  Arbitrary parameter dictionary of characteristics. The keys to this dictionary must
+ be NSString's, and the values are expected to be NSString or NSNumber.  Limitations on the number of
+ parameters and name construction are given in the `FBSDKAppEvents` documentation.  Commonly used parameter names
+ are provided in `FBSDKAppEventParameterName*` constants.
+
+ */
++ (void)logEvent:(NSString *)eventName
+      valueToSum:(double)valueToSum
+      parameters:(NSDictionary *)parameters;
+
+
+/**
+
+  Log an event with an eventName, a numeric value to be aggregated with other events of this name,
+ and a set of key/value pairs in the parameters dictionary.  Providing session lets the developer
+ target a particular <FBSession>.  If nil is provided, then `[FBSession activeSession]` will be used.
+
+ @param eventName   The name of the event to record.  Limitations on number of events and name construction
+ are given in the `FBSDKAppEvents` documentation.  Common event names are provided in `FBAppEventName*` constants.
+
+ @param valueToSum  Amount to be aggregated into all events of this eventName, and App Insights will report
+ the cumulative and average value of this amount.  Note that this is an NSNumber, and a value of `nil` denotes
+ that this event doesn't have a value associated with it for summation.
+
+ @param parameters  Arbitrary parameter dictionary of characteristics. The keys to this dictionary must
+ be NSString's, and the values are expected to be NSString or NSNumber.  Limitations on the number of
+ parameters and name construction are given in the `FBSDKAppEvents` documentation.  Commonly used parameter names
+ are provided in `FBSDKAppEventParameterName*` constants.
+
+ @param accessToken  The optional access token to log the event as.
+ */
++ (void)logEvent:(NSString *)eventName
+      valueToSum:(NSNumber *)valueToSum
+      parameters:(NSDictionary *)parameters
+     accessToken:(FBSDKAccessToken *)accessToken;
+
+/*
+ * Purchase logging
+ */
+
+/**
+
+  Log a purchase of the specified amount, in the specified currency.
+
+ @param purchaseAmount    Purchase amount to be logged, as expressed in the specified currency.  This value
+ will be rounded to the thousandths place (e.g., 12.34567 becomes 12.346).
+
+ @param currency          Currency, is denoted as, e.g. "USD", "EUR", "GBP".  See ISO-4217 for
+ specific values.  One reference for these is <http://en.wikipedia.org/wiki/ISO_4217>.
+
+
+              This event immediately triggers a flush of the `FBSDKAppEvents` event queue, unless the `flushBehavior` is set
+ to `FBSDKAppEventsFlushBehaviorExplicitOnly`.
+
+ */
++ (void)logPurchase:(double)purchaseAmount
+           currency:(NSString *)currency;
+
+/**
+
+  Log a purchase of the specified amount, in the specified currency, also providing a set of
+ additional characteristics describing the purchase.
+
+ @param purchaseAmount  Purchase amount to be logged, as expressed in the specified currency.This value
+ will be rounded to the thousandths place (e.g., 12.34567 becomes 12.346).
+
+ @param currency        Currency, is denoted as, e.g. "USD", "EUR", "GBP".  See ISO-4217 for
+ specific values.  One reference for these is <http://en.wikipedia.org/wiki/ISO_4217>.
+
+ @param parameters      Arbitrary parameter dictionary of characteristics. The keys to this dictionary must
+ be NSString's, and the values are expected to be NSString or NSNumber.  Limitations on the number of
+ parameters and name construction are given in the `FBSDKAppEvents` documentation.  Commonly used parameter names
+ are provided in `FBSDKAppEventParameterName*` constants.
+
+
+              This event immediately triggers a flush of the `FBSDKAppEvents` event queue, unless the `flushBehavior` is set
+ to `FBSDKAppEventsFlushBehaviorExplicitOnly`.
+
+ */
++ (void)logPurchase:(double)purchaseAmount
+           currency:(NSString *)currency
+         parameters:(NSDictionary *)parameters;
+
+/**
+
+  Log a purchase of the specified amount, in the specified currency, also providing a set of
+ additional characteristics describing the purchase, as well as an <FBSession> to log to.
+
+ @param purchaseAmount  Purchase amount to be logged, as expressed in the specified currency.This value
+ will be rounded to the thousandths place (e.g., 12.34567 becomes 12.346).
+
+ @param currency        Currency, is denoted as, e.g. "USD", "EUR", "GBP".  See ISO-4217 for
+ specific values.  One reference for these is <http://en.wikipedia.org/wiki/ISO_4217>.
+
+ @param parameters      Arbitrary parameter dictionary of characteristics. The keys to this dictionary must
+ be NSString's, and the values are expected to be NSString or NSNumber.  Limitations on the number of
+ parameters and name construction are given in the `FBSDKAppEvents` documentation.  Commonly used parameter names
+ are provided in `FBSDKAppEventParameterName*` constants.
+
+ @param accessToken  The optional access token to log the event as.
+
+
+            This event immediately triggers a flush of the `FBSDKAppEvents` event queue, unless the `flushBehavior` is set
+ to `FBSDKAppEventsFlushBehaviorExplicitOnly`.
+
+ */
++ (void)logPurchase:(double)purchaseAmount
+           currency:(NSString *)currency
+         parameters:(NSDictionary *)parameters
+        accessToken:(FBSDKAccessToken *)accessToken;
+
+
+/*
+ * Push Notifications Logging
+ */
+
+/**
+  Log an app event that tracks that the application was open via Push Notification.
+
+ @param payload Notification payload received via `UIApplicationDelegate`.
+ */
++ (void)logPushNotificationOpen:(NSDictionary *)payload;
+
+/**
+  Log an app event that tracks that a custom action was taken from a push notification.
+
+ @param payload Notification payload received via `UIApplicationDelegate`.
+ @param action  Name of the action that was taken.
+ */
++ (void)logPushNotificationOpen:(NSDictionary *)payload action:(NSString *)action;
+
+/**
+  Uploads product catalog product item as an app event
+  @param itemID            Unique ID for the item. Can be a variant for a product.
+                           Max size is 100.
+  @param availability      If item is in stock. Accepted values are:
+                              in stock - Item ships immediately
+                              out of stock - No plan to restock
+                              preorder - Available in future
+                              available for order - Ships in 1-2 weeks
+                              discontinued - Discontinued
+  @param condition         Product condition: new, refurbished or used.
+  @param description       Short text describing product. Max size is 5000.
+  @param imageLink         Link to item image used in ad.
+  @param link              Link to merchant's site where someone can buy the item.
+  @param title             Title of item.
+  @param priceAmount       Amount of purchase, in the currency specified by the 'currency'
+                           parameter. This value will be rounded to the thousandths place
+                           (e.g., 12.34567 becomes 12.346).
+  @param currency          Currency used to specify the amount.
+                           E.g. "USD", "EUR", "GBP".  See ISO-4217 for specific values. One reference for these is <http://en.wikipedia.org/wiki/ISO_4217>
+  @param gtin              Global Trade Item Number including UPC, EAN, JAN and ISBN
+  @param mpn               Unique manufacture ID for product
+  @param brand             Name of the brand
+                           Note: Either gtin, mpn or brand is required.
+  @param parameters        Optional fields for deep link specification.
+ */
++ (void)logProductItem:(NSString *)itemID
+          availability:(FBSDKProductAvailability)availability
+             condition:(FBSDKProductCondition)condition
+           description:(NSString *)description
+             imageLink:(NSString *)imageLink
+                  link:(NSString *)link
+                 title:(NSString *)title
+           priceAmount:(double)priceAmount
+              currency:(NSString *)currency
+                  gtin:(NSString *)gtin
+                   mpn:(NSString *)mpn
+                 brand:(NSString *)brand
+            parameters:(NSDictionary *)parameters;
+
+/**
+
+  Notifies the events system that the app has launched and, when appropriate, logs an "activated app" event.
+ This function is called automatically from FBSDKApplicationDelegate applicationDidBecomeActive, unless
+ one overrides 'FacebookAutoLogAppEventsEnabled' key to false in the project info plist file.
+ In case 'FacebookAutoLogAppEventsEnabled' is set to false, then it should typically be placed in the
+ app delegates' `applicationDidBecomeActive:` method.
+
+ This method also takes care of logging the event indicating the first time this app has been launched, which, among other things, is used to
+ track user acquisition and app install ads conversions.
+
+
+
+ `activateApp` will not log an event on every app launch, since launches happen every time the app is backgrounded and then foregrounded.
+ "activated app" events will be logged when the app has not been active for more than 60 seconds.  This method also causes a "deactivated app"
+ event to be logged when sessions are "completed", and these events are logged with the session length, with an indication of how much
+ time has elapsed between sessions, and with the number of background/foreground interruptions that session had.  This data
+ is all visible in your app's App Events Insights.
+ */
++ (void)activateApp;
+
+/*
+ * Push Notifications Registration and Uninstall Tracking
+ */
+
+/**
+  Sets and sends device token to register the current application for push notifications.
+
+
+
+ Sets and sends a device token from `NSData` representation that you get from `UIApplicationDelegate.-application:didRegisterForRemoteNotificationsWithDeviceToken:`.
+
+ @param deviceToken Device token data.
+ */
++ (void)setPushNotificationsDeviceToken:(NSData *)deviceToken;
+
+/**
+ Sets and sends device token string to register the current application for push notifications.
+
+
+
+ Sets and sends a device token string
+
+ @param deviceTokenString Device token string.
+ */
++ (void)setPushNotificationsDeviceTokenString:(NSString *)deviceTokenString;
+
+/*
+ * Control over event batching/flushing
+ */
+
+/**
+
+  Get the current event flushing behavior specifying when events are sent back to Facebook servers.
+ */
++ (FBSDKAppEventsFlushBehavior)flushBehavior;
+
+/**
+
+  Set the current event flushing behavior specifying when events are sent back to Facebook servers.
+
+ @param flushBehavior   The desired `FBSDKAppEventsFlushBehavior` to be used.
+ */
++ (void)setFlushBehavior:(FBSDKAppEventsFlushBehavior)flushBehavior;
+
+/**
+  Set the 'override' App ID for App Event logging.
+
+
+
+ In some cases, apps want to use one Facebook App ID for login and social presence and another
+ for App Event logging.  (An example is if multiple apps from the same company share an app ID for login, but
+ want distinct logging.)  By default, this value is `nil`, and defers to the `FBSDKAppEventsOverrideAppIDBundleKey`
+ plist value.  If that's not set, it defaults to `[FBSDKSettings appID]`.
+
+ This should be set before any other calls are made to `FBSDKAppEvents`.  Thus, you should set it in your application
+ delegate's `application:didFinishLaunchingWithOptions:` delegate.
+
+ @param appID The Facebook App ID to be used for App Event logging.
+ */
++ (void)setLoggingOverrideAppID:(NSString *)appID;
+
+/**
+  Get the 'override' App ID for App Event logging.
+
+
+@see setLoggingOverrideAppID:
+
+ */
++ (NSString *)loggingOverrideAppID;
+
+
+/**
+  Explicitly kick off flushing of events to Facebook.  This is an asynchronous method, but it does initiate an immediate
+ kick off.  Server failures will be reported through the NotificationCenter with notification ID `FBSDKAppEventsLoggingResultNotification`.
+ */
++ (void)flush;
+
+/**
+  Creates a request representing the Graph API call to retrieve a Custom Audience "third party ID" for the app's Facebook user.
+ Callers will send this ID back to their own servers, collect up a set to create a Facebook Custom Audience with,
+ and then use the resultant Custom Audience to target ads.
+
+ @param accessToken The access token to use to establish the user's identity for users logged into Facebook through this app.
+ If `nil`, then the `[FBSDKAccessToken currentAccessToken]` is used.
+
+
+
+ The JSON in the request's response will include an "custom_audience_third_party_id" key/value pair, with the value being the ID retrieved.
+ This ID is an encrypted encoding of the Facebook user's ID and the invoking Facebook app ID.
+ Multiple calls with the same user will return different IDs, thus these IDs cannot be used to correlate behavior
+ across devices or applications, and are only meaningful when sent back to Facebook for creating Custom Audiences.
+
+ The ID retrieved represents the Facebook user identified in the following way: if the specified access token is valid,
+ the ID will represent the user associated with that token; otherwise the ID will represent the user logged into the
+ native Facebook app on the device.  If there is no native Facebook app, no one is logged into it, or the user has opted out
+ at the iOS level from ad tracking, then a `nil` ID will be returned.
+
+ This method returns `nil` if either the user has opted-out (via iOS) from Ad Tracking, the app itself has limited event usage
+ via the `[FBSDKSettings limitEventAndDataUsage]` flag, or a specific Facebook user cannot be identified.
+ */
++ (FBSDKGraphRequest *)requestForCustomAudienceThirdPartyIDWithAccessToken:(FBSDKAccessToken *)accessToken;
+
+/*
+  Sets a custom user ID to associate with all app events.
+
+ The userID is persisted until it is cleared by passing nil.
+ */
++ (void)setUserID:(NSString *)userID;
+
+/*
+ Clears the custom user ID to associate with all app events.
+ */
++ (void)clearUserID;
+
+/*
+  Returns the set custom user ID.
+ */
++ (NSString *)userID;
+
+/*
+  Sets custom user data to associate with all app events. All user data are hashed
+  and used to match Facebook user from this instance of an application.
+
+  The user data will be persisted between application instances.
+
+  @param userData user data to identify the user. User data should be formated as
+  a NSDictionary of data type name and value.
+  Supported data types and names are:
+                   Email: em
+                   First Name: fn
+                   Last Name: ln
+                   Phone: ph
+                   Date of Birth: db
+                   Gender: ge
+                   City: ct
+                   State: st
+                   Zip: zp
+                   Country: country
+ */
++ (void)setUserData:(NSDictionary *)userData
+  DEPRECATED_MSG_ATTRIBUTE("Renamed `setUserEmail:firstName: ...`");
+
+/*
+  Sets custom user data to associate with all app events. All user data are hashed
+  and used to match Facebook user from this instance of an application.
+
+  The user data will be persisted between application instances.
+
+ @param email user's email
+ @param firstName user's first name
+ @param lastName user's last name
+ @param phone user's phone
+ @param dateOfBirth user's date of birth
+ @param gender user's gender
+ @param city user's city
+ @param state user's state
+ @param zip user's zip
+ @param country user's country
+ */
++ (void)setUserEmail:(NSString *)email
+           firstName:(NSString *)firstName
+            lastName:(NSString *)lastName
+               phone:(NSString *)phone
+         dateOfBirth:(NSString *)dateOfBirth
+              gender:(NSString *)gender
+                city:(NSString *)city
+               state:(NSString *)state
+                 zip:(NSString *)zip
+             country:(NSString *)country;
+/*
+  Returns the set user data else nil
+*/
++ (NSString *)getUserData;
+
+/*
+  Clears the current user data
+*/
++ (void)clearUserData;
+
+/*
+  Sends a request to update the properties for the current user, set by `setUserID:`
+
+ You must call `FBSDKAppEvents setUserID:` before making this call.
+ @param properties the custom user properties
+ @param handler the optional completion handler
+ */
++ (void)updateUserProperties:(NSDictionary *)properties handler:(FBSDKGraphRequestHandler)handler;
+
+#if !TARGET_OS_TV
+/*
+  Intended to be used as part of a hybrid webapp.
+ If you call this method, the FB SDK will inject a new JavaScript object into your webview.
+ If the FB Pixel is used within the webview, and references the app ID of this app,
+ then it will detect the presence of this injected JavaScript object
+ and pass Pixel events back to the FB SDK for logging using the AppEvents framework.
+
+ @param webView The webview to augment with the additional JavaScript behaviour
+ */
++ (void)augmentHybridWKWebView:(WKWebView *)webView;
+#endif
+
+/*
+ * Unity helper functions
+ */
+
+/**
+
+ Set if the Unity is already initialized
+
+ @param isUnityInit   whether Unity is initialized.
+
+ */
++ (void)setIsUnityInit:(BOOL)isUnityInit;
+
+/*
+ Send event binding to Unity
+ */
++ (void)sendEventBindingsToUnity;
+
+@end
diff --git a/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKAppLink.h b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKAppLink.h
new file mode 100644
index 0000000..4bd2d01
--- /dev/null
+++ b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKAppLink.h
@@ -0,0 +1,63 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import "FBSDKAppLinkTarget.h"
+
+NS_ASSUME_NONNULL_BEGIN
+
+/*! The version of the App Link protocol that this library supports */
+FOUNDATION_EXPORT NSString *const FBSDKAppLinkVersion;
+
+/*!
+ Contains App Link metadata relevant for navigation on this device
+ derived from the HTML at a given URL.
+ */
+@interface FBSDKAppLink : NSObject
+
+/*!
+ Creates a FBSDKAppLink with the given list of FBSDKAppLinkTargets and target URL.
+
+ Generally, this will only be used by implementers of the FBSDKAppLinkResolving protocol,
+ as these implementers will produce App Link metadata for a given URL.
+
+ @param sourceURL the URL from which this App Link is derived
+ @param targets an ordered list of FBSDKAppLinkTargets for this platform derived
+ from App Link metadata.
+ @param webURL the fallback web URL, if any, for the app link.
+ */
++ (instancetype)appLinkWithSourceURL:(NSURL *)sourceURL
+                             targets:(NSArray<FBSDKAppLinkTarget *> *)targets
+                              webURL:(nullable NSURL *)webURL;
+
+/*! The URL from which this FBSDKAppLink was derived */
+@property (nonatomic, strong, readonly) NSURL *sourceURL;
+
+/*!
+ The ordered list of targets applicable to this platform that will be used
+ for navigation.
+ */
+@property (nonatomic, copy, readonly) NSArray<FBSDKAppLinkTarget *> *targets;
+
+/*! The fallback web URL to use if no targets are installed on this device. */
+@property (nonatomic, strong, readonly, nullable) NSURL *webURL;
+
+@end
+
+NS_ASSUME_NONNULL_END
diff --git a/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKAppLinkNavigation.h b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKAppLinkNavigation.h
new file mode 100644
index 0000000..daf124f
--- /dev/null
+++ b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKAppLinkNavigation.h
@@ -0,0 +1,137 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import "FBSDKAppLink.h"
+#import "FBSDKAppLinkResolving.h"
+
+NS_ASSUME_NONNULL_BEGIN
+
+/*!
+ The result of calling navigate on a FBSDKAppLinkNavigation
+ */
+typedef NS_ENUM(NSInteger, FBSDKAppLinkNavigationType) {
+    /*! Indicates that the navigation failed and no app was opened */
+    FBSDKAppLinkNavigationTypeFailure,
+    /*! Indicates that the navigation succeeded by opening the URL in the browser */
+    FBSDKAppLinkNavigationTypeBrowser,
+    /*! Indicates that the navigation succeeded by opening the URL in an app on the device */
+    FBSDKAppLinkNavigationTypeApp
+};
+
+/**
+ Describes the callback for appLinkFromURLInBackground.
+ @param navType the FBSDKAppLink representing the deferred App Link
+ @param error the error during the request, if any
+
+ */
+typedef void (^FBSDKAppLinkNavigationHandler)(FBSDKAppLinkNavigationType navType, NSError * _Nullable error);
+
+/*!
+ Represents a pending request to navigate to an App Link. Most developers will
+ simply use navigateToURLInBackground: to open a URL, but developers can build
+ custom requests with additional navigation and app data attached to them by
+ creating FBSDKAppLinkNavigations themselves.
+ */
+NS_EXTENSION_UNAVAILABLE_IOS("Not available in app extension")
+@interface FBSDKAppLinkNavigation : NSObject
+
+/*!
+ The extras for the AppLinkNavigation. This will generally contain application-specific
+ data that should be passed along with the request, such as advertiser or affiliate IDs or
+ other such metadata relevant on this device.
+ */
+@property (nonatomic, copy, readonly) NSDictionary<NSString *, id> *extras;
+
+/*!
+ The al_applink_data for the AppLinkNavigation. This will generally contain data common to
+ navigation attempts such as back-links, user agents, and other information that may be used
+ in routing and handling an App Link request.
+ */
+@property (nonatomic, copy, readonly) NSDictionary<NSString *, id> *appLinkData;
+
+/*! The AppLink to navigate to */
+@property (nonatomic, strong, readonly) FBSDKAppLink *appLink;
+
+/*!
+ Return navigation type for current instance.
+ No-side-effect version of navigate:
+ */
+@property (nonatomic, readonly) FBSDKAppLinkNavigationType navigationType;
+
+/*! Creates an AppLinkNavigation with the given link, extras, and App Link data */
++ (instancetype)navigationWithAppLink:(FBSDKAppLink *)appLink
+                               extras:(NSDictionary<NSString *, id> *)extras
+                          appLinkData:(NSDictionary<NSString *, id> *)appLinkData;
+
+/*!
+ Creates an NSDictionary with the correct format for iOS callback URLs,
+ to be used as 'appLinkData' argument in the call to navigationWithAppLink:extras:appLinkData:
+ */
++ (NSDictionary<NSString *, NSDictionary<NSString *, NSString *> *> *)callbackAppLinkDataForAppWithName:(NSString *)appName
+                                                                                                    url:(NSString *)url;
+
+/*! Performs the navigation */
+- (FBSDKAppLinkNavigationType)navigate:(NSError *__autoreleasing *)error;
+
+/*! Returns a FBSDKAppLink for the given URL */
++ (void)resolveAppLink:(NSURL *)destination handler:(FBSDKAppLinkFromURLHandler)handler;
+
+/*! Returns a FBSDKAppLink for the given URL using the given App Link resolution strategy */
++ (void)resolveAppLink:(NSURL *)destination
+              resolver:(id<FBSDKAppLinkResolving>)resolver
+               handler:(FBSDKAppLinkFromURLHandler)handler;
+
+/*! Navigates to a FBSDKAppLink and returns whether it opened in-app or in-browser */
++ (FBSDKAppLinkNavigationType)navigateToAppLink:(FBSDKAppLink *)link error:(NSError *__autoreleasing *)error;
+
+/*!
+ Returns a FBSDKAppLinkNavigationType based on a FBSDKAppLink.
+ It's essentially a no-side-effect version of navigateToAppLink:error:,
+ allowing apps to determine flow based on the link type (e.g. open an
+ internal web view instead of going straight to the browser for regular links.)
+ */
++ (FBSDKAppLinkNavigationType)navigationTypeForLink:(FBSDKAppLink *)link;
+
+/*! Navigates to a URL (an asynchronous action) and returns a FBSDKNavigationType */
++ (void)navigateToURL:(NSURL *)destination handler:(FBSDKAppLinkNavigationHandler)handler;
+
+/*!
+ Navigates to a URL (an asynchronous action) using the given App Link resolution
+ strategy and returns a FBSDKNavigationType
+ */
++ (void)navigateToURL:(NSURL *)destination
+             resolver:(id<FBSDKAppLinkResolving>)resolver
+              handler:(FBSDKAppLinkNavigationHandler)handler;
+
+/*!
+ Gets the default resolver to be used for App Link resolution. If the developer has not set one explicitly,
+ a basic, built-in resolver will be used.
+ */
++ (id<FBSDKAppLinkResolving>)defaultResolver;
+
+/*!
+ Sets the default resolver to be used for App Link resolution. Setting this to nil will revert the
+ default resolver to the basic, built-in resolver provided by FBSDK.
+ */
++ (void)setDefaultResolver:(id<FBSDKAppLinkResolving>)resolver;
+
+@end
+
+NS_ASSUME_NONNULL_END
diff --git a/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKAppLinkResolver.h b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKAppLinkResolver.h
new file mode 100644
index 0000000..39b5dc0
--- /dev/null
+++ b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKAppLinkResolver.h
@@ -0,0 +1,107 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import "FBSDKAppLinkResolving.h"
+
+@class BFTask;
+
+
+// Check if Bolts.framework is available for import
+#if __has_include(<Bolts/BFAppLinkResolving.h>)
+// Import it if it's available
+#import <Bolts/BFAppLinkResolving.h>
+#else
+// Otherwise - redeclare BFAppLinkResolving protocol to resolve the problem of missing symbols
+// Please note: Bolts.framework is still required for AppLink resolving to work,
+// but this allows FBSDKCoreKit to weakly link Bolts.framework as well as this enables clang modulemaps to work.
+
+/**
+ Implement this protocol to provide an alternate strategy for resolving
+ App Links that may include pre-fetching, caching, or querying for App Link
+ data from an index provided by a service provider.
+ */
+DEPRECATED_MSG_ATTRIBUTE("Use `FBSDKAppLinkResolving`")
+@protocol BFAppLinkResolving <NSObject>
+
+/**
+ Asynchronously resolves App Link data for a given URL.
+
+ @param url The URL to resolve into an App Link.
+ @return A BFTask that will return a BFAppLink for the given URL.
+ */
+- (BFTask *)appLinkFromURLInBackground:(NSURL *)url
+DEPRECATED_MSG_ATTRIBUTE("Use `appLinkFromURL:handler:`");
+
+@end
+
+#endif
+
+/**
+
+  Provides an implementation of the BFAppLinkResolving protocol that uses the Facebook App Link
+ Index API to resolve App Links given a URL. It also provides an additional helper method that can resolve
+ multiple App Links in a single call.
+
+
+
+ Usage of this type requires a client token. See `[FBSDKSettings setClientToken:]` and linking
+ Bolts.framework
+ */
+#pragma clang diagnostic push
+#pragma clang diagnostic ignored "-Wdeprecated-declarations"
+@interface FBSDKAppLinkResolver : NSObject<FBSDKAppLinkResolving, BFAppLinkResolving>
+#pragma clang diagnostic pop
+
+/**
+  Asynchronously resolves App Link data for multiple URLs.
+
+ @param urls An array of NSURLs to resolve into App Links.
+ @return A BFTask that will return dictionary mapping input NSURLs to their
+  corresponding BFAppLink.
+
+ You should set the client token before making this call. See `[FBSDKSettings setClientToken:]`
+ */
+- (BFTask *)appLinksFromURLsInBackground:(NSArray<NSURL *> *)urls
+DEPRECATED_MSG_ATTRIBUTE("Use `appLinkFromURLs:handler:`");
+
+/**
+ Asynchronously resolves App Link data for a given URL.
+
+ @param url The URL to resolve into an App Link.
+ @return A BFTask that will return a BFAppLink for the given URL.
+ */
+- (BFTask *)appLinkFromURLInBackground:(NSURL *)url
+DEPRECATED_MSG_ATTRIBUTE("Use `appLinkFromURL:handler:`");
+
+/**
+ Asynchronously resolves App Link data for a given array of URLs.
+
+ @param urls The URLs to resolve into an App Link.
+ @param handler The completion block that will return an App Link for the given URL.
+ */
+- (void)appLinksFromURLs:(NSArray<NSURL *> *)urls handler:(FBSDKAppLinksFromURLArrayHandler)handler
+NS_EXTENSION_UNAVAILABLE_IOS("Not available in app extension");
+
+/**
+  Allocates and initializes a new instance of FBSDKAppLinkResolver.
+ */
++ (instancetype)resolver;
+
+@end
diff --git a/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKAppLinkResolving.h b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKAppLinkResolving.h
new file mode 100644
index 0000000..fac2425
--- /dev/null
+++ b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKAppLinkResolving.h
@@ -0,0 +1,60 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+NS_ASSUME_NONNULL_BEGIN
+
+@class FBSDKAppLink;
+
+/**
+ Describes the callback for appLinkFromURLInBackground.
+ @param appLink the FBSDKAppLink representing the deferred App Link
+ @param error the error during the request, if any
+
+ */
+typedef void (^FBSDKAppLinkFromURLHandler)(FBSDKAppLink * _Nullable appLink, NSError * _Nullable error);
+
+
+/**
+ Describes the callback for appLinkFromURLInBackground.
+ @param appLinks the FBSDKAppLinks representing the deferred App Links
+ @param error the error during the request, if any
+ */
+typedef void (^FBSDKAppLinksFromURLArrayHandler)(NSDictionary<NSURL *, FBSDKAppLink *> * appLinks,
+                                                 NSError * _Nullable error);
+
+/*!
+ Implement this protocol to provide an alternate strategy for resolving
+ App Links that may include pre-fetching, caching, or querying for App Link
+ data from an index provided by a service provider.
+ */
+@protocol FBSDKAppLinkResolving <NSObject>
+
+/**
+ Asynchronously resolves App Link data for a given URL.
+
+ @param url The URL to resolve into an App Link.
+ @param handler The completion block that will return an App Link for the given URL.
+ */
+- (void)appLinkFromURL:(NSURL *)url handler:(FBSDKAppLinkFromURLHandler)handler
+NS_EXTENSION_UNAVAILABLE_IOS("Not available in app extension");
+
+@end
+
+NS_ASSUME_NONNULL_END
diff --git a/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKAppLinkReturnToRefererController.h b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKAppLinkReturnToRefererController.h
new file mode 100644
index 0000000..3f587a6
--- /dev/null
+++ b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKAppLinkReturnToRefererController.h
@@ -0,0 +1,100 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+#import <UIKit/UIKit.h>
+
+#import "FBSDKAppLinkReturnToRefererView.h"
+
+NS_ASSUME_NONNULL_BEGIN
+
+@class FBSDKAppLink;
+@class FBSDKAppLinkReturnToRefererController;
+
+/*!
+ Protocol that a class can implement in order to be notified when the user has navigated back
+ to the referer of an App Link.
+ */
+@protocol FBSDKAppLinkReturnToRefererControllerDelegate <NSObject>
+
+@optional
+
+/*! Called when the user has tapped to navigate, but before the navigation has been performed. */
+- (void)returnToRefererController:(FBSDKAppLinkReturnToRefererController *)controller
+            willNavigateToAppLink:(FBSDKAppLink *)appLink;
+
+/*! Called after the navigation has been attempted, with an indication of whether the referer
+ app link was successfully opened. */
+- (void)returnToRefererController:(FBSDKAppLinkReturnToRefererController *)controller
+             didNavigateToAppLink:(FBSDKAppLink *)url
+                             type:(FBSDKAppLinkNavigationType)type;
+
+@end
+
+/*!
+ A controller class that implements default behavior for a FBSDKAppLinkReturnToRefererView, including
+ the ability to display the view above the navigation bar for navigation-based apps.
+ */
+NS_EXTENSION_UNAVAILABLE_IOS("Not available in app extension")
+@interface FBSDKAppLinkReturnToRefererController : NSObject <FBSDKAppLinkReturnToRefererViewDelegate>
+
+/*!
+ The delegate that will be notified when the user navigates back to the referer.
+ */
+@property (nonatomic, weak, nullable) id<FBSDKAppLinkReturnToRefererControllerDelegate> delegate;
+
+/*!
+ The FBSDKAppLinkReturnToRefererView this controller is controlling.
+ */
+@property (nonatomic, strong) FBSDKAppLinkReturnToRefererView *view;
+
+/*!
+ Initializes a controller suitable for controlling a FBSDKAppLinkReturnToRefererView that is to be displayed
+ contained within another UIView (i.e., not displayed above the navigation bar).
+ */
+- (instancetype)init NS_DESIGNATED_INITIALIZER;
+
+/*!
+ Initializes a controller suitable for controlling a FBSDKAppLinkReturnToRefererView that is to be displayed
+ displayed above the navigation bar.
+ */
+- (instancetype)initForDisplayAboveNavController:(UINavigationController *)navController;
+
+/*!
+ Removes the view entirely from the navigation controller it is currently displayed in.
+ */
+- (void)removeFromNavController;
+
+/*!
+ Shows the FBSDKAppLinkReturnToRefererView with the specified referer information. If nil or missing data,
+ the view will not be displayed. */
+- (void)showViewForRefererAppLink:(FBSDKAppLink *)refererAppLink;
+
+/*!
+ Shows the FBSDKAppLinkReturnToRefererView with referer information extracted from the specified URL.
+ If nil or missing referer App Link data, the view will not be displayed. */
+- (void)showViewForRefererURL:(NSURL *)url;
+
+/*!
+ Closes the view, possibly animating it.
+ */
+- (void)closeViewAnimated:(BOOL)animated;
+
+@end
+
+NS_ASSUME_NONNULL_END
diff --git a/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKAppLinkReturnToRefererView.h b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKAppLinkReturnToRefererView.h
new file mode 100644
index 0000000..c5378b7
--- /dev/null
+++ b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKAppLinkReturnToRefererView.h
@@ -0,0 +1,90 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+#import <UIKit/UIKit.h>
+
+#import "FBSDKAppLinkNavigation.h"
+
+NS_ASSUME_NONNULL_BEGIN
+
+typedef NS_ENUM(NSUInteger, FBSDKIncludeStatusBarInSize) {
+    FBSDKIncludeStatusBarInSizeNever,
+    FBSDKIncludeStatusBarInSizeIOS7AndLater,
+    FBSDKIncludeStatusBarInSizeAlways,
+};
+
+@class FBSDKAppLinkReturnToRefererView;
+@class FBSDKURL;
+
+/*!
+ Protocol that a class can implement in order to be notified when the user has navigated back
+ to the referer of an App Link.
+ */
+@protocol FBSDKAppLinkReturnToRefererViewDelegate <NSObject>
+
+/*!
+ Called when the user has tapped inside the close button.
+ */
+- (void)returnToRefererViewDidTapInsideCloseButton:(FBSDKAppLinkReturnToRefererView *)view;
+
+/*!
+ Called when the user has tapped inside the App Link portion of the view.
+ */
+- (void)returnToRefererViewDidTapInsideLink:(FBSDKAppLinkReturnToRefererView *)view
+                                       link:(FBSDKAppLink *)link;
+
+@end
+
+/*!
+ Provides a UIView that displays a button allowing users to navigate back to the
+ application that launched the App Link currently being handled, if the App Link
+ contained referer data. The user can also close the view by clicking a close button
+ rather than navigating away. If the view is provided an App Link that does not contain
+ referer data, it will have zero size and no UI will be displayed.
+ */
+NS_EXTENSION_UNAVAILABLE_IOS("Not available in app extension")
+@interface FBSDKAppLinkReturnToRefererView : UIView
+
+/*!
+ The delegate that will be notified when the user navigates back to the referer.
+ */
+@property (nonatomic, weak, nullable) id<FBSDKAppLinkReturnToRefererViewDelegate> delegate;
+
+/*!
+ The color of the text label and close button.
+ */
+@property (nonatomic, strong) UIColor *textColor;
+
+@property (nonatomic, strong) FBSDKAppLink *refererAppLink;
+
+/*!
+ Indicates whether to extend the size of the view to include the current status bar
+ size, for use in scenarios where the view might extend under the status bar on iOS 7 and
+ above; this property has no effect on earlier versions of iOS.
+ */
+@property (nonatomic, assign) FBSDKIncludeStatusBarInSize includeStatusBarInSize;
+
+/*!
+ Indicates whether the user has closed the view by clicking the close button.
+ */
+@property (nonatomic, assign) BOOL closed;
+
+@end
+
+NS_ASSUME_NONNULL_END
diff --git a/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKAppLinkTarget.h b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKAppLinkTarget.h
new file mode 100644
index 0000000..091d66a
--- /dev/null
+++ b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKAppLinkTarget.h
@@ -0,0 +1,45 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+NS_ASSUME_NONNULL_BEGIN
+
+/*!
+ Represents a target defined in App Link metadata, consisting of at least
+ a URL, and optionally an App Store ID and name.
+ */
+@interface FBSDKAppLinkTarget : NSObject
+
+/*! Creates a FBSDKAppLinkTarget with the given app site and target URL. */
++ (instancetype)appLinkTargetWithURL:(NSURL *)url
+                          appStoreId:(nullable NSString *)appStoreId
+                             appName:(NSString *)appName;
+
+/*! The URL prefix for this app link target */
+@property (nonatomic, strong, readonly) NSURL *URL;
+
+/*! The app ID for the app store */
+@property (nonatomic, copy, readonly, nullable) NSString *appStoreId;
+
+/*! The name of the app */
+@property (nonatomic, copy, readonly) NSString *appName;
+
+@end
+
+NS_ASSUME_NONNULL_END
diff --git a/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKAppLinkUtility.h b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKAppLinkUtility.h
new file mode 100644
index 0000000..8a971b2
--- /dev/null
+++ b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKAppLinkUtility.h
@@ -0,0 +1,89 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+/**
+  Describes the callback for fetchDeferredAppLink.
+ @param url the url representing the deferred App Link
+ @param error the error during the request, if any
+
+
+ The url may also have a fb_click_time_utc query parameter that
+ represents when the click occurred that caused the deferred App Link to be created.
+ */
+typedef void (^FBSDKDeferredAppLinkHandler)(NSURL *url, NSError *error);
+
+
+/**
+  Describes the callback for fetchOrganicDeferredAppLink.
+ @param url the url representing the deferred App Link
+ */
+typedef void (^FBSDKDeferredAppInviteHandler)(NSURL *url);
+
+
+/**
+  Class containing App Links related utility methods.
+ */
+@interface FBSDKAppLinkUtility : NSObject
+
+/**
+  Call this method from the main thread to fetch deferred applink data if you use Mobile App
+ Engagement Ads (https://developers.facebook.com/docs/ads-for-apps/mobile-app-ads-engagement).
+ This may require a network round trip. If successful, the handler is invoked  with the link
+ data (this will only return a valid URL once, and future calls will result in a nil URL
+ value in the callback).
+
+ @param handler the handler to be invoked if there is deferred App Link data
+
+
+ The handler may contain an NSError instance to capture any errors. In the
+ common case where there simply was no app link data, the NSError instance will be nil.
+
+ This method should only be called from a location that occurs after any launching URL has
+ been processed (e.g., you should call this method from your application delegate's
+ applicationDidBecomeActive:).
+ */
++ (void)fetchDeferredAppLink:(FBSDKDeferredAppLinkHandler)handler;
+
+/**
+
+@warning This method is no longer available and will always return NO.
+ */
++ (BOOL)fetchDeferredAppInvite:(FBSDKDeferredAppInviteHandler)handler
+DEPRECATED_MSG_ATTRIBUTE("This method is no longer available.");
+
+/*
+  Call this method to fetch promotion code from the url, if it's present. This function
+ requires Bolts framework.
+
+ Note: This throws an exception if Bolts.framework is not linked. Add '[BFURL class]' in intialize method
+ of your AppDelegate.
+
+ @param url App Link url that was passed to the app.
+
+ @return Promotion code string.
+
+
+ Call this method to fetch App Invite Promotion Code from applink if present.
+ This can be used to fetch the promotion code that was associated with the invite when it
+ was created. This method should be called with the url from the openURL method.
+*/
++ (NSString*)appInvitePromotionCodeFromURL:(NSURL*)url;
+
+@end
diff --git a/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKApplicationDelegate.h b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKApplicationDelegate.h
new file mode 100644
index 0000000..c1eca10
--- /dev/null
+++ b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKApplicationDelegate.h
@@ -0,0 +1,92 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <UIKit/UIKit.h>
+
+/**
+
+  The FBSDKApplicationDelegate is designed to post process the results from Facebook Login
+ or Facebook Dialogs (or any action that requires switching over to the native Facebook
+ app or Safari).
+
+
+
+ The methods in this class are designed to mirror those in UIApplicationDelegate, and you
+ should call them in the respective methods in your AppDelegate implementation.
+ */
+@interface FBSDKApplicationDelegate : NSObject
+
+/**
+  Gets the singleton instance.
+ */
++ (instancetype)sharedInstance;
+
+/**
+  Call this method from the [UIApplicationDelegate application:openURL:sourceApplication:annotation:] method
+ of the AppDelegate for your app. It should be invoked for the proper processing of responses during interaction
+ with the native Facebook app or Safari as part of SSO authorization flow or Facebook dialogs.
+
+ @param application The application as passed to [UIApplicationDelegate application:openURL:sourceApplication:annotation:].
+
+ @param url The URL as passed to [UIApplicationDelegate application:openURL:sourceApplication:annotation:].
+
+ @param sourceApplication The sourceApplication as passed to [UIApplicationDelegate application:openURL:sourceApplication:annotation:].
+
+ @param annotation The annotation as passed to [UIApplicationDelegate application:openURL:sourceApplication:annotation:].
+
+ @return YES if the url was intended for the Facebook SDK, NO if not.
+ */
+- (BOOL)application:(UIApplication *)application
+            openURL:(NSURL *)url
+  sourceApplication:(NSString *)sourceApplication
+         annotation:(id)annotation;
+
+#if __IPHONE_OS_VERSION_MAX_ALLOWED > __IPHONE_9_0
+/**
+  Call this method from the [UIApplicationDelegate application:openURL:options:] method
+ of the AppDelegate for your app. It should be invoked for the proper processing of responses during interaction
+ with the native Facebook app or Safari as part of SSO authorization flow or Facebook dialogs.
+
+ @param application The application as passed to [UIApplicationDelegate application:openURL:options:].
+
+ @param url The URL as passed to [UIApplicationDelegate application:openURL:options:].
+
+ @param options The options dictionary as passed to [UIApplicationDelegate application:openURL:options:].
+
+ @return YES if the url was intended for the Facebook SDK, NO if not.
+ */
+- (BOOL)application:(UIApplication *)application
+            openURL:(NSURL *)url
+            options:(NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options;
+#endif
+
+/**
+  Call this method from the [UIApplicationDelegate application:didFinishLaunchingWithOptions:] method
+ of the AppDelegate for your app. It should be invoked for the proper use of the Facebook SDK.
+ As part of SDK initialization basic auto logging of app events will occur, this can be
+controlled via 'FacebookAutoLogAppEventsEnabled' key in the project info plist file.
+
+ @param application The application as passed to [UIApplicationDelegate application:didFinishLaunchingWithOptions:].
+
+ @param launchOptions The launchOptions as passed to [UIApplicationDelegate application:didFinishLaunchingWithOptions:].
+
+ @return YES if the url was intended for the Facebook SDK, NO if not.
+ */
+- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions;
+
+@end
diff --git a/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKButton.h b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKButton.h
new file mode 100644
index 0000000..ca53966
--- /dev/null
+++ b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKButton.h
@@ -0,0 +1,26 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <UIKit/UIKit.h>
+
+/**
+  A base class for common SDK buttons.
+ */
+@interface FBSDKButton : UIButton
+
+@end
diff --git a/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKConstants.h b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKConstants.h
new file mode 100644
index 0000000..55003d0
--- /dev/null
+++ b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKConstants.h
@@ -0,0 +1,361 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#if __IPHONE_OS_VERSION_MAX_ALLOWED >= __IPHONE_10_0
+
+/**
+ The error domain for all errors from FBSDKCoreKit.
+
+ Error codes from the SDK in the range 0-99 are reserved for this domain.
+ */
+FOUNDATION_EXPORT NSErrorDomain const FBSDKErrorDomain;
+
+#else
+
+/**
+ The error domain for all errors from FBSDKCoreKit.
+
+ Error codes from the SDK in the range 0-99 are reserved for this domain.
+ */
+FOUNDATION_EXPORT NSString *const FBSDKErrorDomain;
+
+#endif
+
+#if __IPHONE_OS_VERSION_MAX_ALLOWED >= __IPHONE_11_0
+
+/*
+ @methodgroup error userInfo keys
+ */
+
+/**
+ The userInfo key for the invalid collection for errors with FBSDKErrorInvalidArgument.
+
+ If the invalid argument is a collection, the collection can be found with this key and the individual
+ invalid item can be found with FBSDKErrorArgumentValueKey.
+ */
+FOUNDATION_EXPORT NSErrorUserInfoKey const FBSDKErrorArgumentCollectionKey;
+
+/**
+ The userInfo key for the invalid argument name for errors with FBSDKErrorInvalidArgument.
+ */
+FOUNDATION_EXPORT NSErrorUserInfoKey const FBSDKErrorArgumentNameKey;
+
+/**
+ The userInfo key for the invalid argument value for errors with FBSDKErrorInvalidArgument.
+ */
+FOUNDATION_EXPORT NSErrorUserInfoKey const FBSDKErrorArgumentValueKey;
+
+/**
+ The userInfo key for the message for developers in NSErrors that originate from the SDK.
+
+ The developer message will not be localized and is not intended to be presented within the app.
+ */
+FOUNDATION_EXPORT NSErrorUserInfoKey const FBSDKErrorDeveloperMessageKey;
+
+/**
+ The userInfo key describing a localized description that can be presented to the user.
+ */
+FOUNDATION_EXPORT NSErrorUserInfoKey const FBSDKErrorLocalizedDescriptionKey;
+
+/**
+ The userInfo key describing a localized title that can be presented to the user, used with `FBSDKLocalizedErrorDescriptionKey`.
+ */
+FOUNDATION_EXPORT NSErrorUserInfoKey const FBSDKErrorLocalizedTitleKey;
+
+/*
+ @methodgroup FBSDKGraphRequest error userInfo keys
+ */
+
+/**
+ The userInfo key describing the error category, for error recovery purposes.
+
+ See `FBSDKGraphErrorRecoveryProcessor` and `[FBSDKGraphRequest disableErrorRecovery]`.
+ */
+FOUNDATION_EXPORT NSErrorUserInfoKey const FBSDKGraphRequestErrorKey;
+
+FOUNDATION_EXPORT NSErrorUserInfoKey const FBSDKGraphRequestErrorCategoryKey
+DEPRECATED_MSG_ATTRIBUTE("use FBSDKGraphRequestErrorKey instead");
+
+/*
+ The userInfo key for the Graph API error code.
+ */
+FOUNDATION_EXPORT NSErrorUserInfoKey const FBSDKGraphRequestErrorGraphErrorCodeKey;
+
+FOUNDATION_EXPORT NSErrorUserInfoKey const FBSDKGraphRequestErrorGraphErrorCode
+DEPRECATED_MSG_ATTRIBUTE("use FBSDKGraphRequestErrorGraphErrorCodeKey instead");
+
+/*
+ The userInfo key for the Graph API error subcode.
+ */
+FOUNDATION_EXPORT NSErrorUserInfoKey const FBSDKGraphRequestErrorGraphErrorSubcodeKey;
+
+FOUNDATION_EXPORT NSErrorUserInfoKey const FBSDKGraphRequestErrorGraphErrorSubcode
+DEPRECATED_MSG_ATTRIBUTE("use FBSDKGraphRequestErrorGraphErrorSubcodeKey instead");
+
+/*
+ The userInfo key for the HTTP status code.
+ */
+FOUNDATION_EXPORT NSErrorUserInfoKey const FBSDKGraphRequestErrorHTTPStatusCodeKey;
+
+/*
+ The userInfo key for the raw JSON response.
+ */
+FOUNDATION_EXPORT NSErrorUserInfoKey const FBSDKGraphRequestErrorParsedJSONResponseKey;
+
+#else
+
+/*
+ @methodgroup error userInfo keys
+ */
+
+/**
+ The userInfo key for the invalid collection for errors with FBSDKErrorInvalidArgument.
+
+ If the invalid argument is a collection, the collection can be found with this key and the individual
+ invalid item can be found with FBSDKErrorArgumentValueKey.
+ */
+FOUNDATION_EXPORT NSString *const FBSDKErrorArgumentCollectionKey;
+
+/**
+ The userInfo key for the invalid argument name for errors with FBSDKErrorInvalidArgument.
+ */
+FOUNDATION_EXPORT NSString *const FBSDKErrorArgumentNameKey;
+
+/**
+ The userInfo key for the invalid argument value for errors with FBSDKErrorInvalidArgument.
+ */
+FOUNDATION_EXPORT NSString *const FBSDKErrorArgumentValueKey;
+
+/**
+ The userInfo key for the message for developers in NSErrors that originate from the SDK.
+
+ The developer message will not be localized and is not intended to be presented within the app.
+ */
+FOUNDATION_EXPORT NSString *const FBSDKErrorDeveloperMessageKey;
+
+/**
+ The userInfo key describing a localized description that can be presented to the user.
+ */
+FOUNDATION_EXPORT NSString *const FBSDKErrorLocalizedDescriptionKey;
+
+/**
+ The userInfo key describing a localized title that can be presented to the user, used with `FBSDKLocalizedErrorDescriptionKey`.
+ */
+FOUNDATION_EXPORT NSString *const FBSDKErrorLocalizedTitleKey;
+
+/*
+ @methodgroup FBSDKGraphRequest error userInfo keys
+ */
+
+/**
+ The userInfo key describing the error category, for error recovery purposes.
+
+ See `FBSDKGraphErrorRecoveryProcessor` and `[FBSDKGraphRequest disableErrorRecovery]`.
+ */
+FOUNDATION_EXPORT NSString *const FBSDKGraphRequestErrorKey;
+
+FOUNDATION_EXPORT NSString *const FBSDKGraphRequestErrorCategoryKey
+DEPRECATED_MSG_ATTRIBUTE("use FBSDKGraphRequestErrorKey instead");
+
+/*
+ The userInfo key for the Graph API error code.
+ */
+FOUNDATION_EXPORT NSString *const FBSDKGraphRequestErrorGraphErrorCodeKey;
+
+FOUNDATION_EXPORT NSString *const FBSDKGraphRequestErrorGraphErrorCode
+DEPRECATED_MSG_ATTRIBUTE("use FBSDKGraphRequestErrorGraphErrorCodeKey instead");
+
+/*
+ The userInfo key for the Graph API error subcode.
+ */
+FOUNDATION_EXPORT NSString *const FBSDKGraphRequestErrorGraphErrorSubcodeKey;
+
+FOUNDATION_EXPORT NSString *const FBSDKGraphRequestErrorGraphErrorSubcode
+DEPRECATED_MSG_ATTRIBUTE("use FBSDKGraphRequestErrorGraphErrorSubcodeKey instead");
+
+/*
+ The userInfo key for the HTTP status code.
+ */
+FOUNDATION_EXPORT NSString *const FBSDKGraphRequestErrorHTTPStatusCodeKey;
+
+/*
+ The userInfo key for the raw JSON response.
+ */
+FOUNDATION_EXPORT NSString *const FBSDKGraphRequestErrorParsedJSONResponseKey;
+
+#endif
+
+#ifndef NS_ERROR_ENUM
+#define NS_ERROR_ENUM(_domain, _name) \
+enum _name: NSInteger _name; \
+enum __attribute__((ns_error_domain(_domain))) _name: NSInteger
+#endif
+
+/**
+ FBSDKError
+ Error codes for FBSDKErrorDomain.
+ */
+typedef NS_ERROR_ENUM(FBSDKErrorDomain, FBSDKError)
+{
+  /**
+   Reserved.
+   */
+  FBSDKErrorReserved = 0,
+
+  /**
+   The error code for errors from invalid encryption on incoming encryption URLs.
+   */
+  FBSDKErrorEncryption,
+
+  /**
+   The error code for errors from invalid arguments to SDK methods.
+   */
+  FBSDKErrorInvalidArgument,
+
+  /**
+   The error code for unknown errors.
+   */
+  FBSDKErrorUnknown,
+
+  /**
+   A request failed due to a network error. Use NSUnderlyingErrorKey to retrieve
+   the error object from the NSURLSession for more information.
+   */
+  FBSDKErrorNetwork,
+
+  /**
+   The error code for errors encountered during an App Events flush.
+   */
+  FBSDKErrorAppEventsFlush,
+
+  /**
+   An endpoint that returns a binary response was used with FBSDKGraphRequestConnection.
+
+   Endpoints that return image/jpg, etc. should be accessed using NSURLRequest
+   */
+  FBSDKErrorGraphRequestNonTextMimeTypeReturned,
+
+  /**
+   The operation failed because the server returned an unexpected response.
+
+   You can get this error if you are not using the most recent SDK, or you are accessing a version of the
+   Graph API incompatible with the current SDK.
+   */
+  FBSDKErrorGraphRequestProtocolMismatch,
+
+  /**
+   The Graph API returned an error.
+
+   See below for useful userInfo keys (beginning with FBSDKGraphRequestError*)
+   */
+  FBSDKErrorGraphRequestGraphAPI,
+
+  /**
+   The specified dialog configuration is not available.
+
+   This error may signify that the configuration for the dialogs has not yet been downloaded from the server
+   or that the dialog is unavailable.  Subsequent attempts to use the dialog may succeed as the configuration is loaded.
+   */
+  FBSDKErrorDialogUnavailable,
+
+  /**
+   Indicates an operation failed because a required access token was not found.
+   */
+  FBSDKErrorAccessTokenRequired,
+
+  /**
+   Indicates an app switch (typically for a dialog) failed because the destination app is out of date.
+   */
+  FBSDKErrorAppVersionUnsupported,
+
+  /**
+   Indicates an app switch to the browser (typically for a dialog) failed.
+   */
+  FBSDKErrorBrowserUnavailable,
+};
+
+/**
+ FBSDKGraphRequestError
+ Describes the category of Facebook error. See `FBSDKGraphRequestErrorKey`.
+ */
+typedef NS_ENUM(NSUInteger, FBSDKGraphRequestError)
+{
+  /** The default error category that is not known to be recoverable. Check `FBSDKLocalizedErrorDescriptionKey` for a user facing message. */
+  FBSDKGraphRequestErrorOther = 0,
+  /** Indicates the error is temporary (such as server throttling). While a recoveryAttempter will be provided with the error instance, the attempt is guaranteed to succeed so you can simply retry the operation if you do not want to present an alert.  */
+  FBSDKGraphRequestErrorTransient = 1,
+  /** Indicates the error can be recovered (such as requiring a login). A recoveryAttempter will be provided with the error instance that can take UI action. */
+  FBSDKGraphRequestErrorRecoverable = 2
+};
+
+/**
+ a formal protocol very similar to the informal protocol NSErrorRecoveryAttempting
+ */
+@protocol FBSDKErrorRecoveryAttempting<NSObject>
+
+/**
+ attempt the recovery
+ @param error the error
+ @param recoveryOptionIndex the selected option index
+ @param delegate the delegate
+ @param didRecoverSelector the callback selector, see discussion.
+ @param contextInfo context info to pass back to callback selector, see discussion.
+
+
+ Given that an error alert has been presented document-modally to the user, and the user has chosen one of the error's recovery options, attempt recovery from the error, and send the selected message to the specified delegate. The option index is an index into the error's array of localized recovery options. The method selected by didRecoverSelector must have the same signature as:
+
+ - (void)didPresentErrorWithRecovery:(BOOL)didRecover contextInfo:(void *)contextInfo;
+
+ The value passed for didRecover must be YES if error recovery was completely successful, NO otherwise.
+ */
+- (void)attemptRecoveryFromError:(NSError *)error optionIndex:(NSUInteger)recoveryOptionIndex delegate:(id)delegate didRecoverSelector:(SEL)didRecoverSelector contextInfo:(void *)contextInfo;
+
+@end
+
+/**
+ Deprecated
+ */
+typedef NS_ENUM(NSInteger, FBSDKErrorCode)
+{
+  FBSDKReservedErrorCode DEPRECATED_MSG_ATTRIBUTE("use FBSDKErrorReserved instead") = 0,
+  FBSDKEncryptionErrorCode DEPRECATED_MSG_ATTRIBUTE("use FBSDKErrorEncryption instead"),
+  FBSDKInvalidArgumentErrorCode DEPRECATED_MSG_ATTRIBUTE("use FBSDKErrorInvalidArgument instead"),
+  FBSDKUnknownErrorCode DEPRECATED_MSG_ATTRIBUTE("use FBSDKErrorUnknown instead"),
+  FBSDKNetworkErrorCode DEPRECATED_MSG_ATTRIBUTE("use FBSDKErrorNetwork instead"),
+  FBSDKAppEventsFlushErrorCode DEPRECATED_MSG_ATTRIBUTE("use FBSDKErrorAppEventsFlush instead"),
+  FBSDKGraphRequestNonTextMimeTypeReturnedErrorCode DEPRECATED_MSG_ATTRIBUTE("use FBSDKErrorGraphRequestNonTextMimeTypeReturned instead"),
+  FBSDKGraphRequestProtocolMismatchErrorCode DEPRECATED_MSG_ATTRIBUTE("use FBSDKErrorGraphRequestProtocolMismatch instead"),
+  FBSDKGraphRequestGraphAPIErrorCode DEPRECATED_MSG_ATTRIBUTE("use FBSDKErrorGraphRequestGraphAPI instead"),
+  FBSDKDialogUnavailableErrorCode DEPRECATED_MSG_ATTRIBUTE("use FBSDKErrorDialogUnavailable instead"),
+  FBSDKAccessTokenRequiredErrorCode DEPRECATED_MSG_ATTRIBUTE("use FBSDKErrorAccessTokenRequired instead"),
+  FBSDKAppVersionUnsupportedErrorCode DEPRECATED_MSG_ATTRIBUTE("use FBSDKErrorAppVersionUnsupported instead"),
+  FBSDKBrowserUnavailableErrorCode DEPRECATED_MSG_ATTRIBUTE("use FBSDKErrorBrowserUnavailable instead"),
+  FBSDKBrowswerUnavailableErrorCode DEPRECATED_MSG_ATTRIBUTE("use FBSDKErrorBrowserUnavailable instead") = FBSDKBrowserUnavailableErrorCode,
+} DEPRECATED_MSG_ATTRIBUTE("use FBSDKError instead");
+
+/**
+ Deprecated
+ */
+typedef NS_ENUM(NSUInteger, FBSDKGraphRequestErrorCategory)
+{
+  FBSDKGraphRequestErrorCategoryOther DEPRECATED_MSG_ATTRIBUTE("use FBSDKGraphRequestErrorOther instead") = 0,
+  FBSDKGraphRequestErrorCategoryTransient DEPRECATED_MSG_ATTRIBUTE("use FBSDKGraphRequestErrorTransient instead") = 1,
+  FBSDKGraphRequestErrorCategoryRecoverable DEPRECATED_MSG_ATTRIBUTE("use FBSDKGraphRequestErrorRecoverable instead") = 2
+} DEPRECATED_MSG_ATTRIBUTE("use FBSDKGraphRequestError instead");
diff --git a/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKCopying.h b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKCopying.h
new file mode 100644
index 0000000..039302b
--- /dev/null
+++ b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKCopying.h
@@ -0,0 +1,34 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+/**
+  Extension protocol for NSCopying that adds the copy method, which is implemented on NSObject.
+
+ NSObject<NSCopying> implicitly conforms to this protocol.
+ */
+@protocol FBSDKCopying <NSCopying, NSObject>
+
+/**
+  Implemented by NSObject as a convenience to copyWithZone:.
+ @return A copy of the receiver.
+ */
+- (id)copy;
+
+@end
diff --git a/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKCoreKit.h b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKCoreKit.h
new file mode 100644
index 0000000..46ce163
--- /dev/null
+++ b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKCoreKit.h
@@ -0,0 +1,57 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <UIKit/UIKit.h>
+
+#import <FBSDKCoreKit/FBSDKAccessToken.h>
+#import <FBSDKCoreKit/FBSDKAppEvents.h>
+#import <FBSDKCoreKit/FBSDKApplicationDelegate.h>
+#import <FBSDKCoreKit/FBSDKButton.h>
+#import <FBSDKCoreKit/FBSDKConstants.h>
+#import <FBSDKCoreKit/FBSDKCopying.h>
+#import <FBSDKCoreKit/FBSDKGraphRequest.h>
+#import <FBSDKCoreKit/FBSDKGraphRequestConnection.h>
+#import <FBSDKCoreKit/FBSDKGraphRequestDataAttachment.h>
+#import <FBSDKCoreKit/FBSDKMacros.h>
+#import <FBSDKCoreKit/FBSDKSettings.h>
+#import <FBSDKCoreKit/FBSDKTestUsersManager.h>
+#import <FBSDKCoreKit/FBSDKUtility.h>
+
+#if !TARGET_OS_TV
+#import <FBSDKCoreKit/FBSDKAppLink.h>
+#import <FBSDKCoreKit/FBSDKAppLinkNavigation.h>
+#import <FBSDKCoreKit/FBSDKAppLinkResolver.h>
+#import <FBSDKCoreKit/FBSDKAppLinkResolving.h>
+#import <FBSDKCoreKit/FBSDKAppLinkReturnToRefererController.h>
+#import <FBSDKCoreKit/FBSDKAppLinkReturnToRefererView.h>
+#import <FBSDKCoreKit/FBSDKAppLinkTarget.h>
+#import <FBSDKCoreKit/FBSDKAppLinkUtility.h>
+#import <FBSDKCoreKit/FBSDKGraphErrorRecoveryProcessor.h>
+#import <FBSDKCoreKit/FBSDKMeasurementEvent.h>
+#import <FBSDKCoreKit/FBSDKMutableCopying.h>
+#import <FBSDKCoreKit/FBSDKProfile.h>
+#import <FBSDKCoreKit/FBSDKProfilePictureView.h>
+#import <FBSDKCoreKit/FBSDKURL.h>
+#import <FBSDKCoreKit/FBSDKWebViewAppLinkResolver.h>
+#else
+#import <FBSDKCoreKit/FBSDKDeviceButton.h>
+#import <FBSDKCoreKit/FBSDKDeviceViewControllerBase.h>
+#endif
+
+#define FBSDK_VERSION_STRING @"4.39.1"
+#define FBSDK_TARGET_PLATFORM_VERSION @"v3.2"
diff --git a/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKGraphErrorRecoveryProcessor.h b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKGraphErrorRecoveryProcessor.h
new file mode 100644
index 0000000..820be4b
--- /dev/null
+++ b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKGraphErrorRecoveryProcessor.h
@@ -0,0 +1,99 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import "FBSDKConstants.h"
+
+@class FBSDKGraphErrorRecoveryProcessor;
+@class FBSDKGraphRequest;
+
+/**
+  Defines a delegate for `FBSDKGraphErrorRecoveryProcessor`.
+ */
+@protocol FBSDKGraphErrorRecoveryProcessorDelegate<NSObject>
+
+/**
+  Indicates the error recovery has been attempted.
+ @param processor the processor instance.
+ @param didRecover YES if the recovery was successful.
+ @param error the error that that was attempted to be recovered from.
+ */
+- (void)processorDidAttemptRecovery:(FBSDKGraphErrorRecoveryProcessor *)processor didRecover:(BOOL)didRecover error:(NSError *)error;
+
+@optional
+/**
+  Indicates the processor is about to process the error.
+ @param processor the processor instance.
+ @param error the error is about to be processed.
+
+ return NO if the processor should not process the error. For example,
+ if you want to prevent alerts of localized messages but otherwise perform retries and recoveries,
+ you could return NO for errors where userInfo[FBSDKGraphRequestErrorKey] equal to FBSDKGraphRequestErrorOther
+ */
+- (BOOL)processorWillProcessError:(FBSDKGraphErrorRecoveryProcessor *)processor error:(NSError *)error;
+
+@end
+
+/**
+  Defines a type that can process Facebook NSErrors with best practices.
+
+ Facebook NSErrors can contain FBSDKErrorRecoveryAttempting instances to recover from errors, or
+ localized messages to present to the user. This class will process the instances as follows:
+
+ 1. If the error is temporary as indicated by FBSDKGraphRequestErrorKey, assume the recovery succeeded and
+ notify the delegate.
+ 2. If a FBSDKErrorRecoveryAttempting instance is available, display an alert (dispatched to main thread)
+ with the recovery options and call the instance's [ attemptRecoveryFromError:optionIndex:...].
+ 3. If a FBSDKErrorRecoveryAttempting is not available, check the userInfo for FBSDKLocalizedErrorDescriptionKey
+ and present that in an alert (dispatched to main thread).
+
+ By default, FBSDKGraphRequests use this type to process errors and retry the request upon a successful
+ recovery.
+
+ Note that Facebook recovery attempters can present UI or even cause app switches (such as to login). Any such
+ work is dispatched to the main thread (therefore your request handlers may then run on the main thread).
+
+ Login recovery requires FBSDKLoginKit. Login will use FBSDKLoginBehaviorNative and will prompt the user
+ for all permissions last granted. If any are declined on the new request, the recovery is not successful but
+ the `[FBSDKAccessToken currentAccessToken]` might still have been updated.
+ .
+ */
+@interface FBSDKGraphErrorRecoveryProcessor : NSObject
+
+/**
+  Gets the delegate. Note this is a strong reference, and is nil'ed out after recovery is complete.
+ */
+@property (nonatomic, strong, readonly) id<FBSDKGraphErrorRecoveryProcessorDelegate>delegate;
+
+/**
+  Attempts to process the error, return YES if the error can be processed.
+ @param error the error to process.
+ @param request the related request that may be reissued.
+ @param delegate the delegate that will be retained until recovery is complete.
+ */
+- (BOOL)processError:(NSError *)error request:(FBSDKGraphRequest *)request delegate:(id<FBSDKGraphErrorRecoveryProcessorDelegate>) delegate;
+
+/**
+  The callback for FBSDKErrorRecoveryAttempting
+ @param didRecover if the recovery succeeded
+ @param contextInfo unused
+ */
+- (void)didPresentErrorWithRecovery:(BOOL)didRecover contextInfo:(void *)contextInfo;
+
+@end
diff --git a/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKGraphRequest.h b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKGraphRequest.h
new file mode 100644
index 0000000..bcb5149
--- /dev/null
+++ b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKGraphRequest.h
@@ -0,0 +1,126 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import <FBSDKCoreKit/FBSDKGraphRequestConnection.h>
+
+@class FBSDKAccessToken;
+
+/**
+  Represents a request to the Facebook Graph API.
+
+
+ `FBSDKGraphRequest` encapsulates the components of a request (the
+ Graph API path, the parameters, error recovery behavior) and should be
+ used in conjunction with `FBSDKGraphRequestConnection` to issue the request.
+
+ Nearly all Graph APIs require an access token. Unless specified, the
+ `[FBSDKAccessToken currentAccessToken]` is used. Therefore, most requests
+ will require login first (see `FBSDKLoginManager` in FBSDKLoginKit.framework).
+
+ A `- start` method is provided for convenience for single requests.
+
+ By default, FBSDKGraphRequest will attempt to recover any errors returned from
+ Facebook. You can disable this via `disableErrorRecovery:`.
+
+ @see FBSDKGraphErrorRecoveryProcessor
+ */
+@interface FBSDKGraphRequest : NSObject
+
+- (instancetype)init NS_UNAVAILABLE;
++ (instancetype)new NS_UNAVAILABLE;
+
+/**
+  Initializes a new instance that use use `[FBSDKAccessToken currentAccessToken]`.
+ @param graphPath the graph path (e.g., @"me").
+ @param parameters the optional parameters dictionary.
+ */
+- (instancetype)initWithGraphPath:(NSString *)graphPath
+                       parameters:(NSDictionary *)parameters;
+
+/**
+  Initializes a new instance that use use `[FBSDKAccessToken currentAccessToken]`.
+ @param graphPath the graph path (e.g., @"me").
+ @param parameters the optional parameters dictionary.
+ @param HTTPMethod the optional HTTP method. nil defaults to @"GET".
+ */
+- (instancetype)initWithGraphPath:(NSString *)graphPath
+                       parameters:(NSDictionary *)parameters
+                       HTTPMethod:(NSString *)HTTPMethod;
+
+/**
+  Initializes a new instance.
+ @param graphPath the graph path (e.g., @"me").
+ @param parameters the optional parameters dictionary.
+ @param tokenString the token string to use. Specifying nil will cause no token to be used.
+ @param version the optional Graph API version (e.g., @"v2.0"). nil defaults to `[FBSDKSettings graphAPIVersion]`.
+ @param HTTPMethod the optional HTTP method (e.g., @"POST"). nil defaults to @"GET".
+ */
+- (instancetype)initWithGraphPath:(NSString *)graphPath
+                       parameters:(NSDictionary *)parameters
+                      tokenString:(NSString *)tokenString
+                          version:(NSString *)version
+                       HTTPMethod:(NSString *)HTTPMethod
+NS_DESIGNATED_INITIALIZER;
+
+/**
+  The request parameters.
+ */
+@property (nonatomic, strong, readonly) NSMutableDictionary *parameters;
+
+/**
+  The access token string used by the request.
+ */
+@property (nonatomic, copy, readonly) NSString *tokenString;
+
+/**
+  The Graph API endpoint to use for the request, for example "me".
+ */
+@property (nonatomic, copy, readonly) NSString *graphPath;
+
+/**
+  The HTTPMethod to use for the request, for example "GET" or "POST".
+ */
+@property (nonatomic, copy, readonly) NSString *HTTPMethod;
+
+/**
+  The Graph API version to use (e.g., "v2.0")
+ */
+@property (nonatomic, copy, readonly) NSString *version;
+
+/**
+  If set, disables the automatic error recovery mechanism.
+ @param disable whether to disable the automatic error recovery mechanism
+
+ By default, non-batched FBSDKGraphRequest instances will automatically try to recover
+ from errors by constructing a `FBSDKGraphErrorRecoveryProcessor` instance that
+ re-issues the request on successful recoveries. The re-issued request will call the same
+ handler as the receiver but may occur with a different `FBSDKGraphRequestConnection` instance.
+
+ This will override [FBSDKSettings setGraphErrorRecoveryDisabled:].
+ */
+- (void)setGraphErrorRecoveryDisabled:(BOOL)disable;
+
+/**
+  Starts a connection to the Graph API.
+ @param handler The handler block to call when the request completes.
+ */
+- (FBSDKGraphRequestConnection *)startWithCompletionHandler:(FBSDKGraphRequestHandler)handler;
+
+@end
diff --git a/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKGraphRequestConnection.h b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKGraphRequestConnection.h
new file mode 100644
index 0000000..af10a85
--- /dev/null
+++ b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKGraphRequestConnection.h
@@ -0,0 +1,332 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+@class FBSDKGraphRequest;
+@class FBSDKGraphRequestConnection;
+
+/**
+ FBSDKGraphRequestHandler
+
+  A block that is passed to addRequest to register for a callback with the results of that
+ request once the connection completes.
+
+
+
+ Pass a block of this type when calling addRequest.  This will be called once
+ the request completes.  The call occurs on the UI thread.
+
+ @param connection      The `FBSDKGraphRequestConnection` that sent the request.
+
+ @param result          The result of the request.  This is a translation of
+ JSON data to `NSDictionary` and `NSArray` objects.  This
+ is nil if there was an error.
+
+ @param error           The `NSError` representing any error that occurred.
+
+ */
+typedef void (^FBSDKGraphRequestHandler)(FBSDKGraphRequestConnection *connection,
+                                         id result,
+                                         NSError *error);
+
+/**
+ @protocol
+
+  The `FBSDKGraphRequestConnectionDelegate` protocol defines the methods used to receive network
+ activity progress information from a <FBSDKGraphRequestConnection>.
+ */
+@protocol FBSDKGraphRequestConnectionDelegate <NSObject>
+
+@optional
+
+/**
+ @method
+
+  Tells the delegate the request connection will begin loading
+
+
+
+ If the <FBSDKGraphRequestConnection> is created using one of the convenience factory methods prefixed with
+ start, the object returned from the convenience method has already begun loading and this method
+ will not be called when the delegate is set.
+
+ @param connection    The request connection that is starting a network request
+ */
+- (void)requestConnectionWillBeginLoading:(FBSDKGraphRequestConnection *)connection;
+
+/**
+ @method
+
+  Tells the delegate the request connection finished loading
+
+
+
+ If the request connection completes without a network error occurring then this method is called.
+ Invocation of this method does not indicate success of every <FBSDKGraphRequest> made, only that the
+ request connection has no further activity. Use the error argument passed to the FBSDKGraphRequestHandler
+ block to determine success or failure of each <FBSDKGraphRequest>.
+
+ This method is invoked after the completion handler for each <FBSDKGraphRequest>.
+
+ @param connection    The request connection that successfully completed a network request
+ */
+- (void)requestConnectionDidFinishLoading:(FBSDKGraphRequestConnection *)connection;
+
+/**
+ @method
+
+  Tells the delegate the request connection failed with an error
+
+
+
+ If the request connection fails with a network error then this method is called. The `error`
+ argument specifies why the network connection failed. The `NSError` object passed to the
+ FBSDKGraphRequestHandler block may contain additional information.
+
+ @param connection    The request connection that successfully completed a network request
+ @param error         The `NSError` representing the network error that occurred, if any. May be nil
+ in some circumstances. Consult the `NSError` for the <FBSDKGraphRequest> for reliable
+ failure information.
+ */
+- (void)requestConnection:(FBSDKGraphRequestConnection *)connection
+         didFailWithError:(NSError *)error;
+
+/**
+ @method
+
+  Tells the delegate how much data has been sent and is planned to send to the remote host
+
+
+
+ The byte count arguments refer to the aggregated <FBSDKGraphRequest> objects, not a particular <FBSDKGraphRequest>.
+
+ Like `NSURLSession`, the values may change in unexpected ways if data needs to be resent.
+
+ @param connection                The request connection transmitting data to a remote host
+ @param bytesWritten              The number of bytes sent in the last transmission
+ @param totalBytesWritten         The total number of bytes sent to the remote host
+ @param totalBytesExpectedToWrite The total number of bytes expected to send to the remote host
+ */
+- (void)requestConnection:(FBSDKGraphRequestConnection *)connection
+          didSendBodyData:(NSInteger)bytesWritten
+        totalBytesWritten:(NSInteger)totalBytesWritten
+totalBytesExpectedToWrite:(NSInteger)totalBytesExpectedToWrite;
+
+@end
+
+/**
+
+  The `FBSDKGraphRequestConnection` represents a single connection to Facebook to service a request.
+
+
+
+ The request settings are encapsulated in a reusable <FBSDKGraphRequest> object. The
+ `FBSDKGraphRequestConnection` object encapsulates the concerns of a single communication
+ e.g. starting a connection, canceling a connection, or batching requests.
+
+ */
+@interface FBSDKGraphRequestConnection : NSObject
+
+/**
+  The delegate object that receives updates.
+ */
+@property (nonatomic, weak) id<FBSDKGraphRequestConnectionDelegate> delegate;
+
+/**
+  Gets or sets the timeout interval to wait for a response before giving up.
+ */
+@property (nonatomic, assign) NSTimeInterval timeout;
+
+/**
+  The raw response that was returned from the server.  (readonly)
+
+
+
+ This property can be used to inspect HTTP headers that were returned from
+ the server.
+
+ The property is nil until the request completes.  If there was a response
+ then this property will be non-nil during the FBSDKGraphRequestHandler callback.
+ */
+@property (nonatomic, retain, readonly) NSHTTPURLResponse *URLResponse;
+
+/**
+ @methodgroup Class methods
+ */
+
+/**
+ @method
+
+  This method sets the default timeout on all FBSDKGraphRequestConnection instances. Defaults to 60 seconds.
+
+ @param defaultConnectionTimeout     The timeout interval.
+ */
++ (void)setDefaultConnectionTimeout:(NSTimeInterval)defaultConnectionTimeout;
+
+/**
+ @methodgroup Adding requests
+ */
+
+/**
+ @method
+
+  This method adds an <FBSDKGraphRequest> object to this connection.
+
+ @param request       A request to be included in the round-trip when start is called.
+ @param handler       A handler to call back when the round-trip completes or times out.
+
+
+
+ The completion handler is retained until the block is called upon the
+ completion or cancellation of the connection.
+ */
+- (void)addRequest:(FBSDKGraphRequest *)request
+ completionHandler:(FBSDKGraphRequestHandler)handler;
+
+/**
+ @method
+
+  This method adds an <FBSDKGraphRequest> object to this connection.
+
+ @param request         A request to be included in the round-trip when start is called.
+
+ @param handler         A handler to call back when the round-trip completes or times out.
+ The handler will be invoked on the main thread.
+
+ @param name            An optional name for this request.  This can be used to feed
+ the results of one request to the input of another <FBSDKGraphRequest> in the same
+ `FBSDKGraphRequestConnection` as described in
+ [Graph API Batch Requests]( https://developers.facebook.com/docs/reference/api/batch/ ).
+
+
+
+ The completion handler is retained until the block is called upon the
+ completion or cancellation of the connection. This request can be named
+ to allow for using the request's response in a subsequent request.
+ */
+- (void)addRequest:(FBSDKGraphRequest *)request
+    batchEntryName:(NSString *)name
+ completionHandler:(FBSDKGraphRequestHandler)handler;
+
+- (void)addRequest:(FBSDKGraphRequest *)request
+ completionHandler:(FBSDKGraphRequestHandler)handler
+    batchEntryName:(NSString *)name
+DEPRECATED_MSG_ATTRIBUTE("Renamed `addRequest:batchEntryName:completionHandler:`");
+
+/**
+ @method
+
+  This method adds an <FBSDKGraphRequest> object to this connection.
+
+ @param request         A request to be included in the round-trip when start is called.
+
+ @param handler         A handler to call back when the round-trip completes or times out.
+
+ @param batchParameters The optional dictionary of parameters to include for this request
+ as described in [Graph API Batch Requests]( https://developers.facebook.com/docs/reference/api/batch/ ).
+ Examples include "depends_on", "name", or "omit_response_on_success".
+
+
+
+ The completion handler is retained until the block is called upon the
+ completion or cancellation of the connection. This request can be named
+ to allow for using the request's response in a subsequent request.
+ */
+- (void)addRequest:(FBSDKGraphRequest *)request
+   batchParameters:(NSDictionary<NSString *, id> *)batchParameters
+ completionHandler:(FBSDKGraphRequestHandler)handler;
+
+- (void)addRequest:(FBSDKGraphRequest *)request
+ completionHandler:(FBSDKGraphRequestHandler)handler
+   batchParameters:(NSDictionary *)batchParameters
+DEPRECATED_MSG_ATTRIBUTE("Renamed `addRequest:batchParameters:completionHandler:`");
+
+/**
+ @methodgroup Instance methods
+ */
+
+/**
+ @method
+
+  Signals that a connection should be logically terminated as the
+ application is no longer interested in a response.
+
+
+
+ Synchronously calls any handlers indicating the request was cancelled. Cancel
+ does not guarantee that the request-related processing will cease. It
+ does promise that  all handlers will complete before the cancel returns. A call to
+ cancel prior to a start implies a cancellation of all requests associated
+ with the connection.
+ */
+- (void)cancel;
+
+/**
+ @method
+
+  This method starts a connection with the server and is capable of handling all of the
+ requests that were added to the connection.
+
+
+ By default, a connection is scheduled on the current thread in the default mode when it is created.
+ See `setDelegateQueue:` for other options.
+
+ This method cannot be called twice for an `FBSDKGraphRequestConnection` instance.
+ */
+- (void)start;
+
+/**
+  Determines the operation queue that is used to call methods on the connection's delegate.
+ @param queue The operation queue to use when calling delegate methods.
+
+ By default, a connection is scheduled on the current thread in the default mode when it is created.
+ You cannot reschedule a connection after it has started.
+ */
+- (void)setDelegateQueue:(NSOperationQueue *)queue;
+
+/**
+ @method
+
+  Overrides the default version for a batch request
+
+
+
+ The SDK automatically prepends a version part, such as "v2.0" to API paths in order to simplify API versioning
+ for applications. If you want to override the version part while using batch requests on the connection, call
+ this method to set the version for the batch request.
+
+ @param version   This is a string in the form @"v2.0" which will be used for the version part of an API path
+ */
+- (void)overrideGraphAPIVersion:(NSString *)version;
+
+- (void)overrideVersionPartWith:(NSString *)version
+DEPRECATED_MSG_ATTRIBUTE("Renamed `overrideGraphAPIVersion`");
+
+@end
+
+/**
+  The key in the result dictionary for requests to old versions of the Graph API
+ whose response is not a JSON object.
+
+
+ When a request returns a non-JSON response (such as a "true" literal), that response
+ will be wrapped into a dictionary using this const as the key. This only applies for very few Graph API
+ prior to v2.1.
+ */
+FOUNDATION_EXPORT NSString *const FBSDKNonJSONResponseProperty;
diff --git a/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKGraphRequestDataAttachment.h b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKGraphRequestDataAttachment.h
new file mode 100644
index 0000000..7ad50dc
--- /dev/null
+++ b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKGraphRequestDataAttachment.h
@@ -0,0 +1,55 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+/**
+  A container class for data attachments so that additional metadata can be provided about the attachment.
+ */
+@interface FBSDKGraphRequestDataAttachment : NSObject
+
+- (instancetype)init NS_UNAVAILABLE;
++ (instancetype)new NS_UNAVAILABLE;
+
+/**
+  Initializes the receiver with the attachment data and metadata.
+ @param data The attachment data (retained, not copied)
+ @param filename The filename for the attachment
+ @param contentType The content type for the attachment
+ */
+- (instancetype)initWithData:(NSData *)data
+                    filename:(NSString *)filename
+                 contentType:(NSString *)contentType
+NS_DESIGNATED_INITIALIZER;
+
+/**
+  The content type for the attachment.
+ */
+@property (nonatomic, copy, readonly) NSString *contentType;
+
+/**
+  The attachment data.
+ */
+@property (nonatomic, strong, readonly) NSData *data;
+
+/**
+  The filename for the attachment.
+ */
+@property (nonatomic, copy, readonly) NSString *filename;
+
+@end
diff --git a/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKMacros.h b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKMacros.h
new file mode 100644
index 0000000..d749579
--- /dev/null
+++ b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKMacros.h
@@ -0,0 +1,19 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
diff --git a/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKMeasurementEvent.h b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKMeasurementEvent.h
new file mode 100644
index 0000000..3798330
--- /dev/null
+++ b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKMeasurementEvent.h
@@ -0,0 +1,69 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+NS_ASSUME_NONNULL_BEGIN
+
+#if __IPHONE_OS_VERSION_MAX_ALLOWED >= __IPHONE_10_0
+
+/*! The name of the notification posted by FBSDKMeasurementEvent */
+FOUNDATION_EXPORT NSNotificationName const FBSDKMeasurementEventNotification;
+
+#else
+
+/*! The name of the notification posted by FBSDKMeasurementEvent */
+FOUNDATION_EXPORT NSString *const FBSDKMeasurementEventNotification;
+
+#endif
+
+FOUNDATION_EXPORT NSString *const FBSDKMeasurementEventNotificationName
+DEPRECATED_MSG_ATTRIBUTE("Use `FBSDKMeasurementEventNotification` instead");
+
+/*! Defines keys in the userInfo object for the notification named FBSDKMeasurementEventNotificationName */
+/*! The string field for the name of the event */
+FOUNDATION_EXPORT NSString *const FBSDKMeasurementEventNameKey;
+/*! The dictionary field for the arguments of the event */
+FOUNDATION_EXPORT NSString *const FBSDKMeasurementEventArgsKey;
+
+/*! Events raised by FBSDKMeasurementEvent for Applink */
+/*!
+ The name of the event posted when [FBSDKURL URLWithURL:] is called successfully. This represents the successful parsing of an app link URL.
+ */
+FOUNDATION_EXPORT NSString *const FBSDKAppLinkParseEventName;
+
+/*!
+ The name of the event posted when [FBSDKURL URLWithInboundURL:] is called successfully.
+ This represents parsing an inbound app link URL from a different application
+ */
+FOUNDATION_EXPORT NSString *const FBSDKAppLinkNavigateInEventName;
+
+/*! The event raised when the user navigates from your app to other apps */
+FOUNDATION_EXPORT NSString *const FBSDKAppLinkNavigateOutEventName;
+
+/*!
+ The event raised when the user navigates out from your app and back to the referrer app.
+ e.g when the user leaves your app after tapping the back-to-referrer navigation bar
+ */
+FOUNDATION_EXPORT NSString *const FBSDKAppLinkNavigateBackToReferrerEventName;
+
+@interface FBSDKMeasurementEvent : NSObject
+
+@end
+
+NS_ASSUME_NONNULL_END
diff --git a/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKMutableCopying.h b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKMutableCopying.h
new file mode 100644
index 0000000..3fada94
--- /dev/null
+++ b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKMutableCopying.h
@@ -0,0 +1,36 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import <FBSDKCoreKit/FBSDKCopying.h>
+
+/**
+  Extension protocol for NSMutableCopying that adds the mutableCopy method, which is implemented on NSObject.
+
+ NSObject<NSCopying, NSMutableCopying> implicitly conforms to this protocol.
+ */
+@protocol FBSDKMutableCopying <FBSDKCopying, NSMutableCopying>
+
+/**
+  Implemented by NSObject as a convenience to mutableCopyWithZone:.
+ @return A mutable copy of the receiver.
+ */
+- (id)mutableCopy;
+
+@end
diff --git a/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKProfile.h b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKProfile.h
new file mode 100644
index 0000000..d0e245b
--- /dev/null
+++ b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKProfile.h
@@ -0,0 +1,183 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
+
+#import "FBSDKProfilePictureView.h"
+
+#if __IPHONE_OS_VERSION_MAX_ALLOWED >= __IPHONE_10_0
+
+/**
+  Notification indicating that the `currentProfile` has changed.
+
+ the userInfo dictionary of the notification will contain keys
+ `FBSDKProfileChangeOldKey` and
+ `FBSDKProfileChangeNewKey`.
+ */
+FOUNDATION_EXPORT NSNotificationName const FBSDKProfileDidChangeNotification;
+
+#else
+
+/**
+  Notification indicating that the `currentProfile` has changed.
+
+ the userInfo dictionary of the notification will contain keys
+ `FBSDKProfileChangeOldKey` and
+ `FBSDKProfileChangeNewKey`.
+ */
+FOUNDATION_EXPORT NSString *const FBSDKProfileDidChangeNotification;
+
+#endif
+
+/*   key in notification's userInfo object for getting the old profile.
+
+ If there was no old profile, the key will not be present.
+ */
+FOUNDATION_EXPORT NSString *const FBSDKProfileChangeOldKey;
+
+/*   key in notification's userInfo object for getting the new profile.
+
+ If there is no new profile, the key will not be present.
+ */
+FOUNDATION_EXPORT NSString *const FBSDKProfileChangeNewKey;
+
+/**
+  Represents an immutable Facebook profile
+
+ This class provides a global "currentProfile" instance to more easily
+ add social context to your application. When the profile changes, a notification is
+ posted so that you can update relevant parts of your UI and is persisted to NSUserDefaults.
+
+ Typically, you will want to call `enableUpdatesOnAccessTokenChange:YES` so that
+ it automatically observes changes to the `[FBSDKAccessToken currentAccessToken]`.
+
+ You can use this class to build your own `FBSDKProfilePictureView` or in place of typical requests to "/me".
+ */
+@interface FBSDKProfile : NSObject<NSCopying, NSSecureCoding>
+
+- (instancetype)init NS_UNAVAILABLE;
++ (instancetype)new NS_UNAVAILABLE;
+
+/**
+  initializes a new instance.
+ @param userID the user ID
+ @param firstName the user's first name
+ @param middleName the user's middle name
+ @param lastName the user's last name
+ @param name the user's complete name
+ @param linkURL the link for this profile
+ @param refreshDate the optional date this profile was fetched. Defaults to [NSDate date].
+ */
+- (instancetype)initWithUserID:(NSString *)userID
+                     firstName:(NSString *)firstName
+                    middleName:(NSString *)middleName
+                      lastName:(NSString *)lastName
+                          name:(NSString *)name
+                       linkURL:(NSURL *)linkURL
+                   refreshDate:(NSDate *)refreshDate NS_DESIGNATED_INITIALIZER;
+/**
+  The user id
+ */
+@property (nonatomic, copy, readonly) NSString *userID;
+/**
+  The user's first name
+ */
+@property (nonatomic, copy, readonly) NSString *firstName;
+/**
+  The user's middle name
+ */
+@property (nonatomic, copy, readonly) NSString *middleName;
+/**
+  The user's last name
+ */
+@property (nonatomic, copy, readonly) NSString *lastName;
+/**
+  The user's complete name
+ */
+@property (nonatomic, copy, readonly) NSString *name;
+/**
+  A URL to the user's profile.
+
+ Consider using Bolts and `FBSDKAppLinkResolver` to resolve this
+ to an app link to link directly to the user's profile in the Facebook app.
+ */
+@property (nonatomic, readonly) NSURL *linkURL;
+
+/**
+  The last time the profile data was fetched.
+ */
+@property (nonatomic, readonly) NSDate *refreshDate;
+
+/**
+  Gets the current FBSDKProfile instance.
+ */
++ (FBSDKProfile *)currentProfile;
+
+/**
+  Sets the current instance and posts the appropriate notification if the profile parameter is different
+ than the receiver.
+ @param profile the profile to set
+
+ This persists the profile to NSUserDefaults.
+ */
++ (void)setCurrentProfile:(FBSDKProfile *)profile;
+
+/**
+  Indicates if `currentProfile` will automatically observe `FBSDKAccessTokenDidChangeNotification` notifications
+ @param enable YES is observing
+
+ If observing, this class will issue a graph request for public profile data when the current token's userID
+ differs from the current profile. You can observe `FBSDKProfileDidChangeNotification` for when the profile is updated.
+
+ Note that if `[FBSDKAccessToken currentAccessToken]` is unset, the `currentProfile` instance remains. It's also possible
+ for `currentProfile` to return nil until the data is fetched.
+ */
++ (void)enableUpdatesOnAccessTokenChange:(BOOL)enable;
+
+/**
+  Loads the current profile and passes it to the completion block.
+ @param completion The block to be executed once the profile is loaded
+
+ If the profile is already loaded, this method will call the completion block synchronously, otherwise it
+ will begin a graph request to update `currentProfile` and then call the completion block when finished.
+ */
++ (void)loadCurrentProfileWithCompletion:(void(^)(FBSDKProfile *profile, NSError *error))completion;
+
+/**
+  A convenience method for returning a complete `NSURL` for retrieving the user's profile image.
+ @param mode The picture mode
+ @param size The height and width. This will be rounded to integer precision.
+ */
+- (NSURL *)imageURLForPictureMode:(FBSDKProfilePictureMode)mode size:(CGSize)size;
+
+/**
+  A convenience method for returning a Graph API path for retrieving the user's profile image.
+
+@warning use `imageURLForPictureMode:size:` instead
+
+ You can pass this to a `FBSDKGraphRequest` instance to download the image.
+ @param mode The picture mode
+ @param size The height and width. This will be rounded to integer precision.
+ */
+- (NSString *)imagePathForPictureMode:(FBSDKProfilePictureMode)mode size:(CGSize)size
+DEPRECATED_MSG_ATTRIBUTE("use imageURLForPictureMode:size: instead");
+
+/**
+  Returns YES if the profile is equivalent to the receiver.
+ @param profile the profile to compare to.
+ */
+- (BOOL)isEqualToProfile:(FBSDKProfile *)profile;
+@end
diff --git a/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKProfilePictureView.h b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKProfilePictureView.h
new file mode 100644
index 0000000..aaf9bca
--- /dev/null
+++ b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKProfilePictureView.h
@@ -0,0 +1,60 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <UIKit/UIKit.h>
+
+/**
+ FBSDKProfilePictureMode enum
+  Defines the aspect ratio mode for the source image of the profile picture.
+ */
+typedef NS_ENUM(NSUInteger, FBSDKProfilePictureMode)
+{
+  /**
+    A square cropped version of the image will be included in the view.
+   */
+  FBSDKProfilePictureModeSquare,
+  /**
+    The original picture's aspect ratio will be used for the source image in the view.
+   */
+  FBSDKProfilePictureModeNormal,
+};
+
+/**
+  A view to display a profile picture.
+ */
+@interface FBSDKProfilePictureView : UIView
+
+/**
+  The mode for the receiver to determine the aspect ratio of the source image.
+ */
+@property (nonatomic, assign) FBSDKProfilePictureMode pictureMode;
+
+/**
+  The profile ID to show the picture for.
+ */
+@property (nonatomic, copy) NSString *profileID;
+
+/**
+  Explicitly marks the receiver as needing to update the image.
+
+ This method is called whenever any properties that affect the source image are modified, but this can also
+ be used to trigger a manual update of the image if it needs to be re-downloaded.
+ */
+- (void)setNeedsImageUpdate;
+
+@end
diff --git a/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKSettings.h b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKSettings.h
new file mode 100644
index 0000000..4f79de5
--- /dev/null
+++ b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKSettings.h
@@ -0,0 +1,272 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <UIKit/UIKit.h>
+
+/*
+ * Constants defining logging behavior.  Use with <[FBSDKSettings setLoggingBehavior]>.
+ */
+
+/** Include access token in logging. */
+FOUNDATION_EXPORT NSString *const FBSDKLoggingBehaviorAccessTokens;
+
+/** Log performance characteristics */
+FOUNDATION_EXPORT NSString *const FBSDKLoggingBehaviorPerformanceCharacteristics;
+
+/** Log FBSDKAppEvents interactions */
+FOUNDATION_EXPORT NSString *const FBSDKLoggingBehaviorAppEvents;
+
+/** Log Informational occurrences */
+FOUNDATION_EXPORT NSString *const FBSDKLoggingBehaviorInformational;
+
+/** Log cache errors. */
+FOUNDATION_EXPORT NSString *const FBSDKLoggingBehaviorCacheErrors;
+
+/** Log errors from SDK UI controls */
+FOUNDATION_EXPORT NSString *const FBSDKLoggingBehaviorUIControlErrors;
+
+/** Log debug warnings from API response, i.e. when friends fields requested, but user_friends permission isn't granted. */
+FOUNDATION_EXPORT NSString *const FBSDKLoggingBehaviorGraphAPIDebugWarning;
+
+/** Log warnings from API response, i.e. when requested feature will be deprecated in next version of API.
+ Info is the lowest level of severity, using it will result in logging all previously mentioned levels.
+ */
+FOUNDATION_EXPORT NSString *const FBSDKLoggingBehaviorGraphAPIDebugInfo;
+
+/** Log errors from SDK network requests */
+FOUNDATION_EXPORT NSString *const FBSDKLoggingBehaviorNetworkRequests;
+
+/** Log errors likely to be preventable by the developer. This is in the default set of enabled logging behaviors. */
+FOUNDATION_EXPORT NSString *const FBSDKLoggingBehaviorDeveloperErrors;
+
+@interface FBSDKSettings : NSObject
+
+- (instancetype)init NS_UNAVAILABLE;
++ (instancetype)new NS_UNAVAILABLE;
+
+/**
+  Get the Facebook App ID used by the SDK.
+
+ If not explicitly set, the default will be read from the application's plist (FacebookAppID).
+ */
++ (NSString *)appID;
+
+/**
+  Set the Facebook App ID to be used by the SDK.
+ @param appID The Facebook App ID to be used by the SDK.
+ */
++ (void)setAppID:(NSString *)appID;
+
+/**
+  Get the default url scheme suffix used for sessions.
+
+ If not explicitly set, the default will be read from the application's plist (FacebookUrlSchemeSuffix).
+ */
++ (NSString *)appURLSchemeSuffix;
+
+/**
+  Set the app url scheme suffix used by the SDK.
+ @param appURLSchemeSuffix The url scheme suffix to be used by the SDK.
+ */
++ (void)setAppURLSchemeSuffix:(NSString *)appURLSchemeSuffix;
+
+/**
+  Retrieve the Client Token that has been set via [FBSDKSettings setClientToken].
+
+ If not explicitly set, the default will be read from the application's plist (FacebookClientToken).
+ */
++ (NSString *)clientToken;
+
+/**
+  Sets the Client Token for the Facebook App.
+
+ This is needed for certain API calls when made anonymously, without a user-based access token.
+ @param clientToken The Facebook App's "client token", which, for a given appid can be found in the Security
+ section of the Advanced tab of the Facebook App settings found at <https://developers.facebook.com/apps/[your-app-id]>
+ */
++ (void)setClientToken:(NSString *)clientToken;
+
+/**
+  A convenient way to toggle error recovery for all FBSDKGraphRequest instances created after this is set.
+ @param disableGraphErrorRecovery YES or NO.
+ */
++ (void)setGraphErrorRecoveryDisabled:(BOOL)disableGraphErrorRecovery;
+
+/**
+  Get the Facebook Display Name used by the SDK.
+
+ If not explicitly set, the default will be read from the application's plist (FacebookDisplayName).
+ */
++ (NSString *)displayName;
+
+/**
+  Set the default Facebook Display Name to be used by the SDK.
+
+  This should match the Display Name that has been set for the app with the corresponding Facebook App ID,
+ in the Facebook App Dashboard.
+ @param displayName The Facebook Display Name to be used by the SDK.
+ */
++ (void)setDisplayName:(NSString *)displayName;
+
+/**
+  Get the Facebook domain part.
+
+ If not explicitly set, the default will be read from the application's plist (FacebookDomainPart).
+ */
++ (NSString *)facebookDomainPart;
+
+/**
+  Set the subpart of the Facebook domain.
+
+ This can be used to change the Facebook domain (e.g. @"beta") so that requests will be sent to
+ graph.beta.facebook.com
+ @param facebookDomainPart The domain part to be inserted into facebook.com.
+ */
++ (void)setFacebookDomainPart:(NSString *)facebookDomainPart;
+
+/**
+  The quality of JPEG images sent to Facebook from the SDK.
+
+ If not explicitly set, the default is 0.9.
+
+ @see [UIImageJPEGRepresentation](https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIKitFunctionReference/#//apple_ref/c/func/UIImageJPEGRepresentation) */
++ (CGFloat)JPEGCompressionQuality;
+
+/**
+  Set the quality of JPEG images sent to Facebook from the SDK.
+ @param JPEGCompressionQuality The quality for JPEG images, expressed as a value from 0.0 to 1.0.
+
+ @see [UIImageJPEGRepresentation](https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIKitFunctionReference/#//apple_ref/c/func/UIImageJPEGRepresentation) */
++ (void)setJPEGCompressionQuality:(CGFloat)JPEGCompressionQuality;
+
+/**
+  Flag which controls the auto logging of basic app events, such as activateApp and deactivateApp.
+ If not explicitly set, the default is 1 - true
+ */
++ (NSNumber *)autoLogAppEventsEnabled;
+
+/**
+ Set the flag which controls the auto logging of basic app events, such as activateApp and deactivateApp.
+ @param AutoLogAppEventsEnabled Flag value, expressed as a value from 0 - false or 1 - true.
+ */
++ (void)setAutoLogAppEventsEnabled:(NSNumber *)AutoLogAppEventsEnabled;
+
+/**
+ Flag which controls the fb_codeless_debug logging event
+ If not explicitly set, the default is 1 - true
+ */
++ (NSNumber *)codelessDebugLogEnabled;
+
+/**
+ Set the flag which controls the fb_codeless_debug logging event
+ @param CodelessDebugLogEnabled Flag value, expressed as a value from 0 - false or 1 - true.
+ */
++ (void)setCodelessDebugLogEnabled:(NSNumber *)CodelessDebugLogEnabled;
+
+/**
+ Flag which controls whether advertiserID could be collected.
+ If not explicitly set, the default is 1 - true
+ */
++ (NSNumber *)advertiserIDCollectionEnabled;
+
+/**
+ Set the flag which controls ontrols whether advertiserID could be collected.
+ @param AdvertiserIDCollectionEnabled Flag value, expressed as a value from 0 - false or 1 - true.
+ */
++ (void)setAdvertiserIDCollectionEnabled:(NSNumber *)AdvertiserIDCollectionEnabled;
+
+/**
+  Gets whether data such as that generated through FBSDKAppEvents and sent to Facebook should be restricted from being used for other than analytics and conversions.  Defaults to NO.  This value is stored on the device and persists across app launches.
+ */
++ (BOOL)limitEventAndDataUsage;
+
+/**
+  Sets whether data such as that generated through FBSDKAppEvents and sent to Facebook should be restricted from being used for other than analytics and conversions.  Defaults to NO.  This value is stored on the device and persists across app launches.
+
+ @param limitEventAndDataUsage   The desired value.
+ */
++ (void)setLimitEventAndDataUsage:(BOOL)limitEventAndDataUsage;
+
+/**
+  Retrieve the current iOS SDK version.
+ */
++ (NSString *)sdkVersion;
+
+/**
+  The current Facebook SDK logging behavior.
+ */
+@property (class, nonatomic, copy) NSSet<NSString *> *loggingBehaviors;
+
++ (NSSet *)loggingBehavior
+DEPRECATED_MSG_ATTRIBUTE("Renamed `loggingBehaviors`");
+
+/**
+  Set the current Facebook SDK logging behavior.  This should consist of strings defined as
+ constants with FBSDKLoggingBehavior*.
+
+ @param loggingBehavior A set of strings indicating what information should be logged.  If nil is provided, the logging
+ behavior is reset to the default set of enabled behaviors.  Set to an empty set in order to disable all logging.
+
+
+ You can also define this via an array in your app plist with key "FacebookLoggingBehavior" or add and remove individual values via enableLoggingBehavior: or disableLogginBehavior:
+ */
++ (void)setLoggingBehavior:(NSSet *)loggingBehavior;
+
+/**
+  Enable a particular Facebook SDK logging behavior.
+
+ @param loggingBehavior The LoggingBehavior to enable. This should be a string defined as a constant with FBSDKLoggingBehavior*.
+ */
++ (void)enableLoggingBehavior:(NSString *)loggingBehavior;
+
+/**
+  Disable a particular Facebook SDK logging behavior.
+
+ @param loggingBehavior The LoggingBehavior to disable. This should be a string defined as a constant with FBSDKLoggingBehavior*.
+ */
++ (void)disableLoggingBehavior:(NSString *)loggingBehavior;
+
+/**
+  Set the user defaults key used by legacy token caches.
+
+ @param tokenInformationKeyName the key used by legacy token caches.
+
+
+ Use this only if you customized FBSessionTokenCachingStrategy in v3.x of
+  the Facebook SDK for iOS.
+*/
++ (void)setLegacyUserDefaultTokenInformationKeyName:(NSString *)tokenInformationKeyName;
+
+/**
+  Get the user defaults key used by legacy token caches.
+*/
++ (NSString *)legacyUserDefaultTokenInformationKeyName;
+
+/**
+  Overrides the default Graph API version to use with `FBSDKGraphRequests`. This overrides `FBSDK_TARGET_PLATFORM_VERSION`.
+
+ The string should be of the form `@"v2.7"`.
+*/
++ (void)setGraphAPIVersion:(NSString *)version;
+
+/**
+  Returns the default Graph API version. Defaults to `FBSDK_TARGET_PLATFORM_VERSION`
+*/
++ (NSString *)graphAPIVersion;
+
+@end
diff --git a/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKTestUsersManager.h b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKTestUsersManager.h
new file mode 100644
index 0000000..7373639
--- /dev/null
+++ b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKTestUsersManager.h
@@ -0,0 +1,104 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+@class FBSDKAccessToken;
+
+/**
+
+  Callback block for returning an array of FBSDKAccessToken instances (and possibly `NSNull` instances); or an error.
+ */
+typedef void (^FBSDKTestUsersManagerRetrieveTestAccountTokensHandler)(NSArray *tokens, NSError *error) ;
+
+/**
+
+  Callback block for removing a test user.
+ */
+typedef void (^FBSDKTestUsersManagerRemoveTestAccountHandler)(NSError *error) ;
+
+
+/**
+  Provides methods for managing test accounts for testing Facebook integration.
+
+
+ Facebook allows developers to create test accounts for testing their applications'
+ Facebook integration (see https://developers.facebook.com/docs/test_users/). This class
+ simplifies use of these accounts for writing tests. It is not designed for use in
+ production application code.
+
+ This class will make Graph API calls on behalf of your app to manage test accounts and requires
+ an app id and app secret. You will typically use this class to write unit or integration tests.
+ Make sure you NEVER include your app secret in your production app.
+ */
+@interface FBSDKTestUsersManager : NSObject
+
+- (instancetype)init NS_UNAVAILABLE;
++ (instancetype)new NS_UNAVAILABLE;
+
+/**
+  construct or return the shared instance
+ @param appID the Facebook app id
+ @param appSecret the Facebook app secret
+ */
++ (instancetype)sharedInstanceForAppID:(NSString *)appID appSecret:(NSString *)appSecret;
+
+/**
+  retrieve FBSDKAccessToken instances for test accounts with the specific permissions.
+ @param arraysOfPermissions an array of permissions sets, such as @[ [NSSet setWithObject:@"email"], [NSSet setWithObject:@"user_birthday"]]
+ if you needed two test accounts with email and birthday permissions, respectively. You can pass in empty nested sets
+ if you need two arbitrary test accounts. For convenience, passing nil is treated as @[ [NSSet set] ]
+ for fetching a single test user.
+ @param createIfNotFound if YES, new test accounts are created if no test accounts existed that fit the permissions
+ requirement
+ @param handler the callback to invoke which will return an array of `FBAccessTokenData` instances or an `NSError`.
+ If param `createIfNotFound` is NO, the array may contain `[NSNull null]` instances.
+
+
+ If you are requesting test accounts with differing number of permissions, try to order
+ `arrayOfPermissionsArrays` so that the most number of permissions come first to minimize creation of new
+ test accounts.
+ */
+- (void)requestTestAccountTokensWithArraysOfPermissions:(NSArray *)arraysOfPermissions
+                                       createIfNotFound:(BOOL)createIfNotFound
+                                      completionHandler:(FBSDKTestUsersManagerRetrieveTestAccountTokensHandler)handler;
+
+/**
+  add a test account with the specified permissions
+ @param permissions the set of permissions, e.g., [NSSet setWithObjects:@"email", @"user_friends"]
+ @param handler the callback handler
+ */
+- (void)addTestAccountWithPermissions:(NSSet *)permissions
+                    completionHandler:(FBSDKTestUsersManagerRetrieveTestAccountTokensHandler)handler;
+
+/**
+  remove a test account for the given user id
+ @param userId the user id
+ @param handler the callback handler
+ */
+- (void)removeTestAccount:(NSString *)userId completionHandler:(FBSDKTestUsersManagerRemoveTestAccountHandler)handler;
+
+/**
+  Make two test users friends with each other.
+ @param first the token of the first user
+ @param second the token of the second user
+ @param callback the callback handler
+ */
+- (void)makeFriendsWithFirst:(FBSDKAccessToken *)first second:(FBSDKAccessToken *)second callback:(void (^)(NSError *))callback;
+
+@end
diff --git a/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKURL.h b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKURL.h
new file mode 100644
index 0000000..e0e3d4c
--- /dev/null
+++ b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKURL.h
@@ -0,0 +1,87 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+NS_ASSUME_NONNULL_BEGIN
+
+@class FBSDKAppLink;
+
+/*!
+ Provides a set of utilities for working with NSURLs, such as parsing of query parameters
+ and handling for App Link requests.
+ */
+@interface FBSDKURL : NSObject
+
+/*!
+ Creates a link target from a raw URL.
+ On success, this posts the FBSDKAppLinkParseEventName measurement event. If you are constructing the FBSDKURL within your application delegate's
+ application:openURL:sourceApplication:annotation:, you should instead use URLWithInboundURL:sourceApplication:
+ to support better FBSDKMeasurementEvent notifications
+ @param url The instance of `NSURL` to create FBSDKURL from.
+ */
++ (FBSDKURL *)URLWithURL:(NSURL *)url;
+
+/*!
+ Creates a link target from a raw URL received from an external application. This is typically called from the app delegate's
+ application:openURL:sourceApplication:annotation: and will post the FBSDKAppLinkNavigateInEventName measurement event.
+ @param url The instance of `NSURL` to create FBSDKURL from.
+ @param sourceApplication the bundle ID of the app that is requesting your app to open the URL. The same sourceApplication in application:openURL:sourceApplication:annotation:
+ */
++ (FBSDKURL *)URLWithInboundURL:(NSURL *)url sourceApplication:(NSString *)sourceApplication;
+
+/*!
+ Gets the target URL.  If the link is an App Link, this is the target of the App Link.
+ Otherwise, it is the url that created the target.
+ */
+@property (nonatomic, strong, readonly) NSURL *targetURL;
+
+/*!
+ Gets the query parameters for the target, parsed into an NSDictionary.
+ */
+@property (nonatomic, strong, readonly) NSDictionary<NSString *, id> *targetQueryParameters;
+
+/*!
+ If this link target is an App Link, this is the data found in al_applink_data.
+ Otherwise, it is nil.
+ */
+@property (nonatomic, strong, readonly) NSDictionary<NSString *, id> *appLinkData;
+
+/*!
+ If this link target is an App Link, this is the data found in extras.
+ */
+@property (nonatomic, strong, readonly) NSDictionary<NSString *, id> *appLinkExtras;
+
+/*!
+ The App Link indicating how to navigate back to the referer app, if any.
+ */
+@property (nonatomic, strong, readonly) FBSDKAppLink *appLinkReferer;
+
+/*!
+ The URL that was used to create this FBSDKURL.
+ */
+@property (nonatomic, strong, readonly) NSURL *inputURL;
+
+/*!
+ The query parameters of the inputURL, parsed into an NSDictionary.
+ */
+@property (nonatomic, strong, readonly) NSDictionary<NSString *, id> *inputQueryParameters;
+
+@end
+
+NS_ASSUME_NONNULL_END
diff --git a/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKUtility.h b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKUtility.h
new file mode 100644
index 0000000..560b6b0
--- /dev/null
+++ b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKUtility.h
@@ -0,0 +1,79 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+/**
+  Class to contain common utility methods.
+ */
+@interface FBSDKUtility : NSObject
+
+- (instancetype)init NS_UNAVAILABLE;
++ (instancetype)new NS_UNAVAILABLE;
+
+/**
+  Parses a query string into a dictionary.
+ @param queryString The query string value.
+ @return A dictionary with the key/value pairs.
+ */
++ (NSDictionary *)dictionaryWithQueryString:(NSString *)queryString;
+
+/**
+  Constructs a query string from a dictionary.
+ @param dictionary The dictionary with key/value pairs for the query string.
+ @param errorRef If an error occurs, upon return contains an NSError object that describes the problem.
+ @return Query string representation of the parameters.
+ */
++ (NSString *)queryStringWithDictionary:(NSDictionary *)dictionary error:(NSError *__autoreleasing *)errorRef;
+
+/**
+  Decodes a value from an URL.
+ @param value The value to decode.
+ @return The decoded value.
+ */
++ (NSString *)URLDecode:(NSString *)value;
+
+/**
+  Encodes a value for an URL.
+ @param value The value to encode.
+ @return The encoded value.
+ */
++ (NSString *)URLEncode:(NSString *)value;
+
+/**
+  Creates a timer using Grand Central Dispatch.
+ @param interval The interval to fire the timer, in seconds.
+ @param block The code block to execute when timer is fired.
+ @return The dispatch handle.
+ */
++ (dispatch_source_t)startGCDTimerWithInterval:(double)interval block:(dispatch_block_t)block;
+
+/**
+ Stop a timer that was started by startGCDTimerWithInterval.
+ @param timer The dispatch handle received from startGCDTimerWithInterval.
+ */
++ (void)stopGCDTimer:(dispatch_source_t)timer;
+
+/**
+ Get SHA256 hased string of NSString/NSData
+
+ @param input The data that needs to be hashed, it could be NSString or NSData.
+ */
++ (NSString *)SHA256Hash:(NSObject *)input;
+
+@end
diff --git a/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKWebViewAppLinkResolver.h b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKWebViewAppLinkResolver.h
new file mode 100644
index 0000000..33eba98
--- /dev/null
+++ b/ios/Frameworks/FBSDKCoreKit.framework/Headers/FBSDKWebViewAppLinkResolver.h
@@ -0,0 +1,38 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import "FBSDKAppLinkResolving.h"
+
+NS_ASSUME_NONNULL_BEGIN
+
+/*!
+ A reference implementation for an App Link resolver that uses a hidden UIWebView
+ to parse the HTML containing App Link metadata.
+ */
+@interface FBSDKWebViewAppLinkResolver : NSObject <FBSDKAppLinkResolving>
+
+/*!
+ Gets the instance of a FBSDKWebViewAppLinkResolver.
+ */
++ (instancetype)sharedInstance;
+
+@end
+
+NS_ASSUME_NONNULL_END
diff --git a/ios/Frameworks/FBSDKCoreKit.framework/Info.plist b/ios/Frameworks/FBSDKCoreKit.framework/Info.plist
new file mode 100644
index 0000000..c4871f0
Binary files /dev/null and b/ios/Frameworks/FBSDKCoreKit.framework/Info.plist differ
diff --git a/ios/Frameworks/FBSDKCoreKit.framework/Modules/module.modulemap b/ios/Frameworks/FBSDKCoreKit.framework/Modules/module.modulemap
new file mode 100644
index 0000000..bc59c1a
--- /dev/null
+++ b/ios/Frameworks/FBSDKCoreKit.framework/Modules/module.modulemap
@@ -0,0 +1,6 @@
+framework module FBSDKCoreKit {
+    umbrella header "FBSDKCoreKit.h"
+
+    export *
+    module * { export * }
+}
diff --git a/ios/Frameworks/FBSDKLoginKit.framework/FBSDKLoginKit b/ios/Frameworks/FBSDKLoginKit.framework/FBSDKLoginKit
new file mode 100644
index 0000000..4b469bb
Binary files /dev/null and b/ios/Frameworks/FBSDKLoginKit.framework/FBSDKLoginKit differ
diff --git a/ios/Frameworks/FBSDKLoginKit.framework/Headers/FBSDKDeviceLoginCodeInfo.h b/ios/Frameworks/FBSDKLoginKit.framework/Headers/FBSDKDeviceLoginCodeInfo.h
new file mode 100644
index 0000000..52c1de7
--- /dev/null
+++ b/ios/Frameworks/FBSDKLoginKit.framework/Headers/FBSDKDeviceLoginCodeInfo.h
@@ -0,0 +1,62 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+NS_ASSUME_NONNULL_BEGIN
+
+/*!
+ @abstract Describes the initial response when starting the device login flow.
+ @discussion This is used by `FBSDKDeviceLoginManager`.
+ */
+@interface FBSDKDeviceLoginCodeInfo : NSObject
+
+/*!
+ @abstract There is no public initializer.
+ */
+- (instancetype)init NS_UNAVAILABLE;
++ (instancetype)new NS_UNAVAILABLE;
+
+/*!
+ @abstract the unique id for this login flow.
+*/
+@property (nonatomic, copy, readonly) NSString *identifier;
+
+/*!
+ @abstract the short "user_code" that should be presented to the user.
+*/
+@property (nonatomic, copy, readonly) NSString *loginCode;
+
+/*!
+ @abstract the verification URL.
+*/
+@property (nonatomic, copy, readonly) NSURL *verificationURL;
+
+/*!
+ @abstract the expiration date.
+*/
+@property (nonatomic, copy, readonly) NSDate *expirationDate;
+
+/*!
+ @abstract the polling interval
+*/
+@property (nonatomic, assign, readonly) NSUInteger pollingInterval;
+
+@end
+
+NS_ASSUME_NONNULL_END
diff --git a/ios/Frameworks/FBSDKLoginKit.framework/Headers/FBSDKDeviceLoginManager.h b/ios/Frameworks/FBSDKLoginKit.framework/Headers/FBSDKDeviceLoginManager.h
new file mode 100644
index 0000000..3f6f036
--- /dev/null
+++ b/ios/Frameworks/FBSDKLoginKit.framework/Headers/FBSDKDeviceLoginManager.h
@@ -0,0 +1,105 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import <FBSDKLoginKit/FBSDKDeviceLoginCodeInfo.h>
+#import <FBSDKLoginKit/FBSDKDeviceLoginManagerResult.h>
+
+NS_ASSUME_NONNULL_BEGIN
+
+@class FBSDKDeviceLoginManager;
+
+/*!
+ @abstract A delegate for `FBSDKDeviceLoginManager`.
+ */
+@protocol FBSDKDeviceLoginManagerDelegate <NSObject>
+
+/*!
+ @abstract Indicates the device login flow has started. You should parse `codeInfo` to
+  present the code to the user to enter.
+ @param loginManager the login manager instance.
+ @param codeInfo the code info data.
+ */
+- (void)deviceLoginManager:(FBSDKDeviceLoginManager *)loginManager startedWithCodeInfo:(FBSDKDeviceLoginCodeInfo *)codeInfo;
+
+/*!
+ @abstract Indicates the device login flow has finished.
+ @param loginManager the login manager instance.
+ @param result the results of the login flow.
+ @param error the error, if available.
+ @discussion The flow can be finished if the user completed the flow, cancelled, or if the code has expired.
+ */
+- (void)deviceLoginManager:(FBSDKDeviceLoginManager *)loginManager
+       completedWithResult:(nullable FBSDKDeviceLoginManagerResult *)result
+                     error:(nullable NSError *)error;
+
+@end
+
+/*!
+ @abstract Use this class to perform a device login flow.
+ @discussion The device login flow starts by requesting a code from the device login API.
+   This class informs the delegate when this code is received. You should then present the
+   code to the user to enter. In the meantime, this class polls the device login API
+   periodically and informs the delegate of the results.
+
+ See [Facebook Device Login](https://developers.facebook.com/docs/facebook-login/for-devices).
+ */
+@interface FBSDKDeviceLoginManager : NSObject <NSNetServiceDelegate>
+
+/*!
+ @abstract Initializes a new instance.
+ @param permissions permissions to request.
+ */
+- (instancetype)initWithPermissions:(nullable NSArray<NSString *> *)permissions
+                   enableSmartLogin:(BOOL)enableSmartLogin
+NS_DESIGNATED_INITIALIZER;
+
+- (instancetype)init NS_UNAVAILABLE;
++ (instancetype)new NS_UNAVAILABLE;
+
+/*!
+ @abstract the delegate.
+ */
+@property (nonatomic, weak) id<FBSDKDeviceLoginManagerDelegate> delegate;
+
+/*!
+ @abstract the requested permissions.
+ */
+@property (nullable, nonatomic, copy, readonly) NSArray<NSString *> *permissions;
+
+/*!
+ @abstract the optional URL to redirect the user to after they complete the login.
+ @discussion the URL must be configured in your App Settings -> Advanced -> OAuth Redirect URIs
+ */
+@property (nullable, nonatomic, copy) NSURL *redirectURL;
+
+/*!
+ @abstract Starts the device login flow
+ @discussion This instance will retain self until the flow is finished or cancelled.
+ */
+- (void)start;
+
+/*!
+ @abstract Attempts to cancel the device login flow.
+ */
+- (void)cancel;
+
+@end
+
+NS_ASSUME_NONNULL_END
diff --git a/ios/Frameworks/FBSDKLoginKit.framework/Headers/FBSDKDeviceLoginManagerResult.h b/ios/Frameworks/FBSDKLoginKit.framework/Headers/FBSDKDeviceLoginManagerResult.h
new file mode 100644
index 0000000..ccce552
--- /dev/null
+++ b/ios/Frameworks/FBSDKLoginKit.framework/Headers/FBSDKDeviceLoginManagerResult.h
@@ -0,0 +1,50 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import <FBSDKCoreKit/FBSDKAccessToken.h>
+
+NS_ASSUME_NONNULL_BEGIN
+
+/*!
+ @abstract Represents the results of the a device login flow.
+ @discussion This is used by `FBSDKDeviceLoginManager`.
+ */
+@interface FBSDKDeviceLoginManagerResult : NSObject
+
+/*!
+ @abstract There is no public initializer.
+ */
+- (instancetype)init NS_UNAVAILABLE;
++ (instancetype)new NS_UNAVAILABLE;
+
+/*!
+ @abstract The token.
+ */
+@property (nullable, nonatomic, strong, readonly) FBSDKAccessToken *accessToken;
+
+/*!
+ @abstract Indicates if the login was cancelled by the user, or if the device
+  login code has expired.
+ */
+@property (nonatomic, assign, readonly, getter=isCancelled) BOOL cancelled;
+
+@end
+
+NS_ASSUME_NONNULL_END
diff --git a/ios/Frameworks/FBSDKLoginKit.framework/Headers/FBSDKLoginButton.h b/ios/Frameworks/FBSDKLoginKit.framework/Headers/FBSDKLoginButton.h
new file mode 100644
index 0000000..1b8ed29
--- /dev/null
+++ b/ios/Frameworks/FBSDKLoginKit.framework/Headers/FBSDKLoginButton.h
@@ -0,0 +1,131 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <UIKit/UIKit.h>
+
+#import <FBSDKCoreKit/FBSDKButton.h>
+
+#import <FBSDKLoginKit/FBSDKLoginManager.h>
+
+#import "FBSDKTooltipView.h"
+
+@protocol FBSDKLoginButtonDelegate;
+
+/**
+ NS_ENUM(NSUInteger, FBSDKLoginButtonTooltipBehavior)
+  Indicates the desired login tooltip behavior.
+ */
+typedef NS_ENUM(NSUInteger, FBSDKLoginButtonTooltipBehavior)
+{
+  /** The default behavior. The tooltip will only be displayed if
+   the app is eligible (determined by possible server round trip) */
+  FBSDKLoginButtonTooltipBehaviorAutomatic = 0,
+  /** Force display of the tooltip (typically for UI testing) */
+  FBSDKLoginButtonTooltipBehaviorForceDisplay = 1,
+  /** Force disable. In this case you can still exert more refined
+   control by manually constructing a `FBSDKLoginTooltipView` instance. */
+  FBSDKLoginButtonTooltipBehaviorDisable = 2
+};
+
+/**
+  A button that initiates a log in or log out flow upon tapping.
+
+ `FBSDKLoginButton` works with `[FBSDKAccessToken currentAccessToken]` to
+  determine what to display, and automatically starts authentication when tapped (i.e.,
+  you do not need to manually subscribe action targets).
+
+  Like `FBSDKLoginManager`, you should make sure your app delegate is connected to
+  `FBSDKApplicationDelegate` in order for the button's delegate to receive messages.
+
+ `FBSDKLoginButton` has a fixed height of @c 30 pixels, but you may change the width. `initWithFrame:CGRectZero`
+ will size the button to its minimum frame.
+*/
+@interface FBSDKLoginButton : FBSDKButton
+
+/**
+  The default audience to use, if publish permissions are requested at login time.
+ */
+@property (assign, nonatomic) FBSDKDefaultAudience defaultAudience;
+/**
+  Gets or sets the delegate.
+ */
+@property (weak, nonatomic) IBOutlet id<FBSDKLoginButtonDelegate> delegate;
+/**
+  Gets or sets the login behavior to use
+ */
+@property (assign, nonatomic) FBSDKLoginBehavior loginBehavior;
+/**
+  The publish permissions to request.
+
+
+ Use `defaultAudience` to specify the default audience to publish to.
+ Note this is converted to NSSet and is only
+ an NSArray for the convenience of literal syntax.
+ */
+@property (copy, nonatomic) NSArray *publishPermissions;
+/**
+  The read permissions to request.
+
+
+ Note, that if read permissions are specified, then publish permissions should not be specified. This is converted to NSSet and is only
+ an NSArray for the convenience of literal syntax.
+ */
+@property (copy, nonatomic) NSArray *readPermissions;
+/**
+  Gets or sets the desired tooltip behavior.
+ */
+@property (assign, nonatomic) FBSDKLoginButtonTooltipBehavior tooltipBehavior;
+/**
+  Gets or sets the desired tooltip color style.
+ */
+@property (assign, nonatomic) FBSDKTooltipColorStyle tooltipColorStyle;
+
+@end
+
+/**
+ @protocol
+  A delegate for `FBSDKLoginButton`
+ */
+@protocol FBSDKLoginButtonDelegate <NSObject>
+
+@required
+/**
+  Sent to the delegate when the button was used to login.
+ @param loginButton the sender
+ @param result The results of the login
+ @param error The error (if any) from the login
+ */
+- (void)loginButton:(FBSDKLoginButton *)loginButton
+didCompleteWithResult:(FBSDKLoginManagerLoginResult *)result
+                error:(NSError *)error;
+
+/**
+  Sent to the delegate when the button was used to logout.
+ @param loginButton The button that was clicked.
+*/
+- (void)loginButtonDidLogOut:(FBSDKLoginButton *)loginButton;
+
+@optional
+/**
+  Sent to the delegate when the button is about to login.
+ @param loginButton the sender
+ @return YES if the login should be allowed to proceed, NO otherwise
+ */
+- (BOOL) loginButtonWillLogin:(FBSDKLoginButton *)loginButton;
+
+@end
diff --git a/ios/Frameworks/FBSDKLoginKit.framework/Headers/FBSDKLoginConstants.h b/ios/Frameworks/FBSDKLoginKit.framework/Headers/FBSDKLoginConstants.h
new file mode 100644
index 0000000..bcbf9d6
--- /dev/null
+++ b/ios/Frameworks/FBSDKLoginKit.framework/Headers/FBSDKLoginConstants.h
@@ -0,0 +1,142 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#if __IPHONE_OS_VERSION_MAX_ALLOWED >= __IPHONE_10_0
+
+/**
+ The error domain for all errors from FBSDKLoginKit
+
+ Error codes from the SDK in the range 300-399 are reserved for this domain.
+ */
+FOUNDATION_EXPORT NSErrorDomain const FBSDKLoginErrorDomain;
+
+#else
+
+/**
+ The error domain for all errors from FBSDKLoginKit
+
+ Error codes from the SDK in the range 300-399 are reserved for this domain.
+ */
+FOUNDATION_EXPORT NSString *const FBSDKLoginErrorDomain;
+
+#endif
+
+#ifndef NS_ERROR_ENUM
+#define NS_ERROR_ENUM(_domain, _name) \
+enum _name: NSInteger _name; \
+enum __attribute__((ns_error_domain(_domain))) _name: NSInteger
+#endif
+
+/**
+ FBSDKLoginError
+  Error codes for FBSDKLoginErrorDomain.
+ */
+typedef NS_ERROR_ENUM(FBSDKLoginErrorDomain, FBSDKLoginError)
+{
+  /**
+    Reserved.
+   */
+  FBSDKLoginErrorReserved = 300,
+  /**
+    The error code for unknown errors.
+   */
+  FBSDKLoginErrorUnknown,
+
+  /**
+    The user's password has changed and must log in again
+  */
+  FBSDKLoginErrorPasswordChanged,
+  /**
+    The user must log in to their account on www.facebook.com to restore access
+  */
+  FBSDKLoginErrorUserCheckpointed,
+  /**
+    Indicates a failure to request new permissions because the user has changed.
+   */
+  FBSDKLoginErrorUserMismatch,
+  /**
+    The user must confirm their account with Facebook before logging in
+  */
+  FBSDKLoginErrorUnconfirmedUser,
+
+  /**
+    The Accounts framework failed without returning an error, indicating the
+   app's slider in the iOS Facebook Settings (device Settings -> Facebook -> App Name) has
+   been disabled.
+   */
+  FBSDKLoginErrorSystemAccountAppDisabled,
+  /**
+    An error occurred related to Facebook system Account store
+  */
+  FBSDKLoginErrorSystemAccountUnavailable,
+  /**
+    The login response was missing a valid challenge string.
+  */
+  FBSDKLoginErrorBadChallengeString,
+};
+
+/**
+ FBSDKDeviceLoginError
+ Error codes for FBSDKDeviceLoginErrorDomain.
+ */
+typedef NS_ERROR_ENUM(FBSDKLoginErrorDomain, FBSDKDeviceLoginError) {
+  /**
+   Your device is polling too frequently.
+   */
+  FBSDKDeviceLoginErrorExcessivePolling = 1349172,
+  /**
+   User has declined to authorize your application.
+   */
+  FBSDKDeviceLoginErrorAuthorizationDeclined = 1349173,
+  /**
+   User has not yet authorized your application. Continue polling.
+   */
+  FBSDKDeviceLoginErrorAuthorizationPending = 1349174,
+  /**
+   The code you entered has expired.
+   */
+  FBSDKDeviceLoginErrorCodeExpired = 1349152
+};
+
+/**
+ Deprecated
+ */
+typedef NS_ENUM(NSInteger, FBSDKLoginErrorCode)
+{
+  FBSDKLoginReservedErrorCode DEPRECATED_MSG_ATTRIBUTE("use FBSDKLoginErrorReserved instead") = FBSDKLoginErrorReserved,
+  FBSDKLoginUnknownErrorCode DEPRECATED_MSG_ATTRIBUTE("use FBSDKLoginErrorUnknown instead"),
+  FBSDKLoginPasswordChangedErrorCode DEPRECATED_MSG_ATTRIBUTE("use FBSDKLoginErrorPasswordChanged instead"),
+  FBSDKLoginUserCheckpointedErrorCode DEPRECATED_MSG_ATTRIBUTE("use FBSDKLoginErrorUserCheckpointed instead"),
+  FBSDKLoginUserMismatchErrorCode DEPRECATED_MSG_ATTRIBUTE("use FBSDKLoginErrorUserMismatch instead"),
+  FBSDKLoginUnconfirmedUserErrorCode DEPRECATED_MSG_ATTRIBUTE("use FBSDKLoginErrorUnconfirmedUser instead"),
+  FBSDKLoginSystemAccountAppDisabledErrorCode DEPRECATED_MSG_ATTRIBUTE("use FBSDKLoginErrorSystemAccountAppDisabled instead"),
+  FBSDKLoginSystemAccountUnavailableErrorCode DEPRECATED_MSG_ATTRIBUTE("use FBSDKLoginErrorSystemAccountUnavailable instead"),
+  FBSDKLoginBadChallengeString DEPRECATED_MSG_ATTRIBUTE("use FBSDKLoginErrorBadChallengeString instead"),
+} DEPRECATED_MSG_ATTRIBUTE("use FBSDKLoginError instead");
+
+/**
+ Deprecated
+ */
+typedef NS_ENUM(NSUInteger, FBSDKDeviceLoginErrorSubcode) {
+  FBSDKDeviceLoginExcessivePollingErrorSubcode DEPRECATED_MSG_ATTRIBUTE("use FBSDKDeviceLoginErrorExcessivePolling instead") = FBSDKDeviceLoginErrorExcessivePolling,
+  FBSDKDeviceLoginAuthorizationDeclinedErrorSubcode DEPRECATED_MSG_ATTRIBUTE("use FBSDKDeviceLoginErrorAuthorizationDeclined instead") = FBSDKDeviceLoginErrorAuthorizationDeclined,
+  FBSDKDeviceLoginAuthorizationPendingErrorSubcode DEPRECATED_MSG_ATTRIBUTE("use FBSDKDeviceLoginErrorAuthorizationPending instead") = FBSDKDeviceLoginErrorAuthorizationPending,
+  FBSDKDeviceLoginCodeExpiredErrorSubcode DEPRECATED_MSG_ATTRIBUTE("use FBSDKDeviceLoginErrorCodeExpired instead") = FBSDKDeviceLoginErrorCodeExpired
+} DEPRECATED_MSG_ATTRIBUTE("use FBSDKDeviceLoginError instead");
diff --git a/ios/Frameworks/FBSDKLoginKit.framework/Headers/FBSDKLoginKit.h b/ios/Frameworks/FBSDKLoginKit.framework/Headers/FBSDKLoginKit.h
new file mode 100644
index 0000000..aafc577
--- /dev/null
+++ b/ios/Frameworks/FBSDKLoginKit.framework/Headers/FBSDKLoginKit.h
@@ -0,0 +1,31 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <UIKit/UIKit.h>
+
+#import <FBSDKLoginKit/FBSDKDeviceLoginCodeInfo.h>
+#import <FBSDKLoginKit/FBSDKDeviceLoginManager.h>
+#import <FBSDKLoginKit/FBSDKDeviceLoginManagerResult.h>
+#import <FBSDKLoginKit/FBSDKLoginConstants.h>
+
+#if !TARGET_TV_OS
+#import <FBSDKLoginKit/FBSDKLoginButton.h>
+#import <FBSDKLoginKit/FBSDKLoginManager.h>
+#import <FBSDKLoginKit/FBSDKLoginManagerLoginResult.h>
+#import <FBSDKLoginKit/FBSDKLoginTooltipView.h>
+#endif
diff --git a/ios/Frameworks/FBSDKLoginKit.framework/Headers/FBSDKLoginManager.h b/ios/Frameworks/FBSDKLoginKit.framework/Headers/FBSDKLoginManager.h
new file mode 100644
index 0000000..7b579d0
--- /dev/null
+++ b/ios/Frameworks/FBSDKLoginKit.framework/Headers/FBSDKLoginManager.h
@@ -0,0 +1,227 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Accounts/Accounts.h>
+#import <Foundation/Foundation.h>
+#import <UIKit/UIKit.h>
+
+@class FBSDKLoginManagerLoginResult;
+
+/**
+  Describes the call back to the FBSDKLoginManager
+ @param result the result of the authorization
+ @param error the authorization error, if any.
+ */
+typedef void (^FBSDKLoginManagerRequestTokenHandler)(FBSDKLoginManagerLoginResult *result, NSError *error);
+
+
+/**
+ FBSDKDefaultAudience enum
+
+  Passed to open to indicate which default audience to use for sessions that post data to Facebook.
+
+
+
+ Certain operations such as publishing a status or publishing a photo require an audience. When the user
+ grants an application permission to perform a publish operation, a default audience is selected as the
+ publication ceiling for the application. This enumerated value allows the application to select which
+ audience to ask the user to grant publish permission for.
+ */
+typedef NS_ENUM(NSUInteger, FBSDKDefaultAudience)
+{
+  /** Indicates that the user's friends are able to see posts made by the application */
+  FBSDKDefaultAudienceFriends = 0,
+  /** Indicates that only the user is able to see posts made by the application */
+  FBSDKDefaultAudienceOnlyMe,
+  /** Indicates that all Facebook users are able to see posts made by the application */
+  FBSDKDefaultAudienceEveryone,
+};
+
+/**
+ FBSDKLoginBehavior enum
+
+  Passed to the \c FBSDKLoginManager to indicate how Facebook Login should be attempted.
+
+
+
+ Facebook Login authorizes the application to act on behalf of the user, using the user's
+ Facebook account. Usually a Facebook Login will rely on an account maintained outside of
+ the application, by the native Facebook application, the browser, or perhaps the device
+ itself. This avoids the need for a user to enter their username and password directly, and
+ provides the most secure and lowest friction way for a user to authorize the application to
+ interact with Facebook.
+
+ The \c FBSDKLoginBehavior enum specifies which log-in methods may be used. The SDK
+  will determine the best behavior based on the current device (such as iOS version).
+ */
+typedef NS_ENUM(NSUInteger, FBSDKLoginBehavior)
+{
+  /**
+    This is the default behavior, and indicates logging in through the native
+   Facebook app may be used. The SDK may still use Safari instead.
+   */
+  FBSDKLoginBehaviorNative = 0,
+  /**
+    Attempts log in through the Safari or SFSafariViewController, if available.
+   */
+  FBSDKLoginBehaviorBrowser,
+  /**
+    Attempts log in through the Facebook account currently signed in through
+   the device Settings.
+   @note If the account is not available to the app (either not configured by user or
+   as determined by the SDK) this behavior falls back to \c FBSDKLoginBehaviorNative.
+   */
+  FBSDKLoginBehaviorSystemAccount,
+  /**
+    Attempts log in through a modal \c UIWebView pop up
+
+   @note This behavior is only available to certain types of apps. Please check the Facebook
+   Platform Policy to verify your app meets the restrictions.
+   */
+  FBSDKLoginBehaviorWeb,
+};
+
+/**
+  `FBSDKLoginManager` provides methods for logging the user in and out.
+
+ `FBSDKLoginManager` works directly with `[FBSDKAccessToken currentAccessToken]` and
+  sets the "currentAccessToken" upon successful authorizations (or sets `nil` in case of `logOut`).
+
+ You should check `[FBSDKAccessToken currentAccessToken]` before calling logIn* to see if there is
+ a cached token available (typically in your viewDidLoad).
+
+ If you are managing your own token instances outside of "currentAccessToken", you will need to set
+ "currentAccessToken" before calling logIn* to authorize further permissions on your tokens.
+ */
+@interface FBSDKLoginManager : NSObject
+
+/**
+ Auth type
+ */
+@property (strong, nonatomic) NSString *authType;
+/**
+  the default audience.
+
+ you should set this if you intend to ask for publish permissions.
+ */
+@property (assign, nonatomic) FBSDKDefaultAudience defaultAudience;
+
+/**
+  the login behavior
+ */
+@property (assign, nonatomic) FBSDKLoginBehavior loginBehavior;
+
+/**
+
+@warning use logInWithReadPermissions:fromViewController:handler: instead
+ */
+- (void)logInWithReadPermissions:(NSArray *)permissions handler:(FBSDKLoginManagerRequestTokenHandler)handler
+DEPRECATED_MSG_ATTRIBUTE("use logInWithReadPermissions:fromViewController:handler: instead");
+
+/**
+
+@warning use logInWithPublishPermissions:fromViewController:handler: instead
+ */
+- (void)logInWithPublishPermissions:(NSArray *)permissions handler:(FBSDKLoginManagerRequestTokenHandler)handler
+DEPRECATED_MSG_ATTRIBUTE("use logInWithPublishPermissions:fromViewController:handler: instead");
+
+/**
+  Logs the user in or authorizes additional permissions.
+ @param permissions the optional array of permissions. Note this is converted to NSSet and is only
+  an NSArray for the convenience of literal syntax.
+ @param fromViewController the view controller to present from. If nil, the topmost view controller will be
+  automatically determined as best as possible.
+ @param handler the callback.
+
+ Use this method when asking for read permissions. You should only ask for permissions when they
+  are needed and explain the value to the user. You can inspect the result.declinedPermissions to also
+  provide more information to the user if they decline permissions.
+
+ This method will present UI the user. You typically should check if `[FBSDKAccessToken currentAccessToken]`
+ already contains the permissions you need before asking to reduce unnecessary app switching. For example,
+ you could make that check at viewDidLoad.
+ You can only do one login call at a time. Calling a login method before the completion handler is called
+ on a previous login will return an error.
+ */
+- (void)logInWithReadPermissions:(NSArray *)permissions
+              fromViewController:(UIViewController *)fromViewController
+                         handler:(FBSDKLoginManagerRequestTokenHandler)handler;
+
+/**
+  Logs the user in or authorizes additional permissions.
+ @param permissions the optional array of permissions. Note this is converted to NSSet and is only
+ an NSArray for the convenience of literal syntax.
+ @param fromViewController the view controller to present from. If nil, the topmost view controller will be
+ automatically determined as best as possible.
+ @param handler the callback.
+
+ Use this method when asking for publish permissions. You should only ask for permissions when they
+ are needed and explain the value to the user. You can inspect the result.declinedPermissions to also
+ provide more information to the user if they decline permissions.
+
+ This method will present UI the user. You typically should check if `[FBSDKAccessToken currentAccessToken]`
+ already contains the permissions you need before asking to reduce unnecessary app switching. For example,
+ you could make that check at viewDidLoad.
+ You can only do one login call at a time. Calling a login method before the completion handler is called
+ on a previous login will return an error.
+ */
+- (void)logInWithPublishPermissions:(NSArray *)permissions
+                 fromViewController:(UIViewController *)fromViewController
+                            handler:(FBSDKLoginManagerRequestTokenHandler)handler;
+
+
+/**
+  Requests user's permission to reathorize application's data access, after it has expired due to inactivity.
+ @param fromViewController the view controller to present from. If nil, the topmost view controller will be
+ automatically determined as best as possible.
+ @param handler the callback.
+ Use this method when you need to reathorize your app's access to user data via Graph API, after such an access has expired.
+ You should provide as much context to the user as possible as to why you need to reauthorize the access, the scope of
+ access being reathorized, and what added value your app provides when the access is reathorized.
+ You can inspect the result.declinedPermissions to also provide more information to the user if they decline permissions.
+ This method will present UI the user. You typically should call this if `[FBSDKAccessToken isDataAccessExpired]` returns true.
+ */
+- (void)reauthorizeDataAccess:(UIViewController *)fromViewController
+                            handler:(FBSDKLoginManagerRequestTokenHandler)handler;
+
+/**
+  Logs the user out
+
+ This calls [FBSDKAccessToken setCurrentAccessToken:nil] and [FBSDKProfile setCurrentProfile:nil].
+ */
+- (void)logOut;
+
+/**
+ @method
+
+  Issues an asynchronous renewCredentialsForAccount call to the device's Facebook account store.
+
+ @param handler The completion handler to call when the renewal is completed. This can be invoked on an arbitrary thread.
+
+
+ This can be used to explicitly renew account credentials and is provided as a convenience wrapper around
+ `[ACAccountStore renewCredentialsForAccount:completion]`. Note the method will not issue the renewal call if the the
+ Facebook account has not been set on the device, or if access had not been granted to the account (though the handler
+ wil receive an error).
+
+ If the `[FBSDKAccessToken currentAccessToken]` was from the account store, a succesful renewal will also set
+ a new "currentAccessToken".
+ */
++ (void)renewSystemCredentials:(void (^)(ACAccountCredentialRenewResult result, NSError *error))handler;
+
+@end
diff --git a/ios/Frameworks/FBSDKLoginKit.framework/Headers/FBSDKLoginManagerLoginResult.h b/ios/Frameworks/FBSDKLoginKit.framework/Headers/FBSDKLoginManagerLoginResult.h
new file mode 100644
index 0000000..6601011
--- /dev/null
+++ b/ios/Frameworks/FBSDKLoginKit.framework/Headers/FBSDKLoginManagerLoginResult.h
@@ -0,0 +1,67 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+@class FBSDKAccessToken;
+
+/**
+  Describes the result of a login attempt.
+ */
+@interface FBSDKLoginManagerLoginResult : NSObject
+
+- (instancetype)init NS_UNAVAILABLE;
++ (instancetype)new NS_UNAVAILABLE;
+
+/**
+  the access token.
+ */
+@property (copy, nonatomic) FBSDKAccessToken *token;
+
+/**
+  whether the login was cancelled by the user.
+ */
+@property (readonly, nonatomic) BOOL isCancelled;
+
+/**
+  the set of permissions granted by the user in the associated request.
+
+ inspect the token's permissions set for a complete list.
+ */
+@property (copy, nonatomic) NSSet *grantedPermissions;
+
+/**
+  the set of permissions declined by the user in the associated request.
+
+ inspect the token's permissions set for a complete list.
+ */
+@property (copy, nonatomic) NSSet *declinedPermissions;
+
+/**
+  Initializes a new instance.
+ @param token the access token
+ @param isCancelled whether the login was cancelled by the user
+ @param grantedPermissions the set of granted permissions
+ @param declinedPermissions the set of declined permissions
+ */
+- (instancetype)initWithToken:(FBSDKAccessToken *)token
+                  isCancelled:(BOOL)isCancelled
+           grantedPermissions:(NSSet *)grantedPermissions
+          declinedPermissions:(NSSet *)declinedPermissions
+NS_DESIGNATED_INITIALIZER;
+@end
diff --git a/ios/Frameworks/FBSDKLoginKit.framework/Headers/FBSDKLoginTooltipView.h b/ios/Frameworks/FBSDKLoginKit.framework/Headers/FBSDKLoginTooltipView.h
new file mode 100644
index 0000000..1792197
--- /dev/null
+++ b/ios/Frameworks/FBSDKLoginKit.framework/Headers/FBSDKLoginTooltipView.h
@@ -0,0 +1,90 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <UIKit/UIKit.h>
+
+#import <FBSDKLoginKit/FBSDKTooltipView.h>
+
+@protocol FBSDKLoginTooltipViewDelegate;
+
+/**
+
+  Represents a tooltip to be displayed next to a Facebook login button
+  to highlight features for new users.
+
+
+ The `FBSDKLoginButton` may display this view automatically. If you do
+  not use the `FBSDKLoginButton`, you can manually call one of the `present*` methods
+  as appropriate and customize behavior via `FBSDKLoginTooltipViewDelegate` delegate.
+
+  By default, the `FBSDKLoginTooltipView` is not added to the superview until it is
+  determined the app has migrated to the new login experience. You can override this
+  (e.g., to test the UI layout) by implementing the delegate or setting `forceDisplay` to YES.
+
+ */
+@interface FBSDKLoginTooltipView : FBSDKTooltipView
+
+/**  the delegate */
+@property (nonatomic, weak) id<FBSDKLoginTooltipViewDelegate> delegate;
+
+/**  if set to YES, the view will always be displayed and the delegate's
+  `loginTooltipView:shouldAppear:` will NOT be called. */
+@property (nonatomic, assign) BOOL forceDisplay;
+
+@end
+
+/**
+ @protocol
+
+  The `FBSDKLoginTooltipViewDelegate` protocol defines the methods used to receive event
+ notifications from `FBSDKLoginTooltipView` objects.
+ */
+@protocol FBSDKLoginTooltipViewDelegate <NSObject>
+
+@optional
+
+/**
+  Asks the delegate if the tooltip view should appear
+
+ @param view The tooltip view.
+ @param appIsEligible The value fetched from the server identifying if the app
+ is eligible for the new login experience.
+
+
+ Use this method to customize display behavior.
+ */
+- (BOOL)loginTooltipView:(FBSDKLoginTooltipView *)view shouldAppear:(BOOL)appIsEligible;
+
+/**
+  Tells the delegate the tooltip view will appear, specifically after it's been
+ added to the super view but before the fade in animation.
+
+ @param view The tooltip view.
+ */
+- (void)loginTooltipViewWillAppear:(FBSDKLoginTooltipView *)view;
+
+/**
+  Tells the delegate the tooltip view will not appear (i.e., was not
+ added to the super view).
+
+ @param view The tooltip view.
+ */
+- (void)loginTooltipViewWillNotAppear:(FBSDKLoginTooltipView *)view;
+
+
+@end
diff --git a/ios/Frameworks/FBSDKLoginKit.framework/Headers/FBSDKTooltipView.h b/ios/Frameworks/FBSDKLoginKit.framework/Headers/FBSDKTooltipView.h
new file mode 100644
index 0000000..d77392c
--- /dev/null
+++ b/ios/Frameworks/FBSDKLoginKit.framework/Headers/FBSDKTooltipView.h
@@ -0,0 +1,136 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <UIKit/UIKit.h>
+
+/**
+ FBSDKTooltipViewArrowDirection enum
+
+  Passed on construction to determine arrow orientation.
+ */
+typedef NS_ENUM(NSUInteger, FBSDKTooltipViewArrowDirection)
+{
+  /** View is located above given point, arrow is pointing down. */
+  FBSDKTooltipViewArrowDirectionDown = 0,
+  /** View is located below given point, arrow is pointing up. */
+  FBSDKTooltipViewArrowDirectionUp = 1,
+};
+
+/**
+ FBSDKTooltipColorStyle enum
+
+  Passed on construction to determine color styling.
+ */
+typedef NS_ENUM(NSUInteger, FBSDKTooltipColorStyle)
+{
+  /** Light blue background, white text, faded blue close button. */
+  FBSDKTooltipColorStyleFriendlyBlue = 0,
+  /** Dark gray background, white text, light gray close button. */
+  FBSDKTooltipColorStyleNeutralGray = 1,
+};
+
+/**
+
+  Tooltip bubble with text in it used to display tips for UI elements,
+ with a pointed arrow (to refer to the UI element).
+
+
+
+ The tooltip fades in and will automatically fade out. See `displayDuration`.
+ */
+@interface FBSDKTooltipView : UIView
+
+/**
+  Gets or sets the amount of time in seconds the tooltip should be displayed.
+ Set this to zero to make the display permanent until explicitly dismissed.
+ Defaults to six seconds.
+ */
+@property (nonatomic, assign) CFTimeInterval displayDuration;
+
+/**
+  Gets or sets the color style after initialization.
+ Defaults to value passed to -initWithTagline:message:colorStyle:.
+ */
+@property (nonatomic, assign) FBSDKTooltipColorStyle colorStyle;
+
+/**
+  Gets or sets the message.
+ */
+@property (nonatomic, copy) NSString *message;
+
+/**
+  Gets or sets the optional phrase that comprises the first part of the label (and is highlighted differently).
+ */
+@property (nonatomic, copy) NSString *tagline;
+
+/**
+  Designated initializer.
+
+ @param tagline First part of the label, that will be highlighted with different color. Can be nil.
+
+ @param message Main message to display.
+
+ @param colorStyle Color style to use for tooltip.
+
+
+
+ If you need to show a tooltip for login, consider using the `FBSDKLoginTooltipView` view.
+
+
+ @see FBSDKLoginTooltipView
+ */
+- (instancetype)initWithTagline:(NSString *)tagline message:(NSString *)message colorStyle:(FBSDKTooltipColorStyle)colorStyle;
+
+/**
+  Show tooltip at the top or at the bottom of given view.
+ Tooltip will be added to anchorView.window.rootViewController.view
+
+ @param anchorView view to show at, must be already added to window view hierarchy, in order to decide
+ where tooltip will be shown. (If there's not enough space at the top of the anchorView in window bounds -
+ tooltip will be shown at the bottom of it)
+
+
+
+ Use this method to present the tooltip with automatic positioning or
+ use -presentInView:withArrowPosition:direction: for manual positioning
+ If anchorView is nil or has no window - this method does nothing.
+ */
+- (void)presentFromView:(UIView *)anchorView;
+
+/**
+  Adds tooltip to given view, with given position and arrow direction.
+
+ @param view View to be used as superview.
+
+ @param arrowPosition Point in view's cordinates, where arrow will be pointing
+
+ @param arrowDirection whenever arrow should be pointing up (message bubble is below the arrow) or
+ down (message bubble is above the arrow).
+ */
+- (void)presentInView:(UIView *)view withArrowPosition:(CGPoint)arrowPosition direction:(FBSDKTooltipViewArrowDirection)arrowDirection;
+
+/**
+  Remove tooltip manually.
+
+
+
+ Calling this method isn't necessary - tooltip will dismiss itself automatically after the `displayDuration`.
+ */
+- (void)dismiss;
+
+@end
diff --git a/ios/Frameworks/FBSDKLoginKit.framework/Info.plist b/ios/Frameworks/FBSDKLoginKit.framework/Info.plist
new file mode 100644
index 0000000..3f63b05
Binary files /dev/null and b/ios/Frameworks/FBSDKLoginKit.framework/Info.plist differ
diff --git a/ios/Frameworks/FBSDKLoginKit.framework/Modules/module.modulemap b/ios/Frameworks/FBSDKLoginKit.framework/Modules/module.modulemap
new file mode 100644
index 0000000..4b1d57b
--- /dev/null
+++ b/ios/Frameworks/FBSDKLoginKit.framework/Modules/module.modulemap
@@ -0,0 +1,6 @@
+framework module FBSDKLoginKit {
+    umbrella header "FBSDKLoginKit.h"
+
+    export *
+    module * { export * }
+}
diff --git a/ios/Frameworks/FBSDKShareKit.framework/FBSDKShareKit b/ios/Frameworks/FBSDKShareKit.framework/FBSDKShareKit
new file mode 100755
index 0000000..30f8e07
Binary files /dev/null and b/ios/Frameworks/FBSDKShareKit.framework/FBSDKShareKit differ
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKAppGroupAddDialog.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKAppGroupAddDialog.h
new file mode 100755
index 0000000..f20eb2e
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKAppGroupAddDialog.h
@@ -0,0 +1,100 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import <FBSDKShareKit/FBSDKAppGroupContent.h>
+
+@protocol FBSDKAppGroupAddDialogDelegate;
+
+/**
+
+@warning App and game groups are being deprecated. See https://developers.facebook.com/docs/games/services/game-groups for more information.
+ */
+DEPRECATED_MSG_ATTRIBUTE("App and game groups are being deprecated")
+@interface FBSDKAppGroupAddDialog : NSObject
+
+/**
+
+@warning App and game groups are being deprecated. See https://developers.facebook.com/docs/games/services/game-groups for more information.
+ */
++ (instancetype)showWithContent:(FBSDKAppGroupContent *)content
+                       delegate:(id<FBSDKAppGroupAddDialogDelegate>)delegate
+DEPRECATED_ATTRIBUTE;
+
+/**
+
+@warning App and game groups are being deprecated. See https://developers.facebook.com/docs/games/services/game-groups for more information.
+ */
+@property (nonatomic, weak) id<FBSDKAppGroupAddDialogDelegate> delegate
+DEPRECATED_ATTRIBUTE;
+
+/**
+
+@warning App and game groups are being deprecated. See https://developers.facebook.com/docs/games/services/game-groups for more information.
+ */
+@property (nonatomic, copy) FBSDKAppGroupContent *content
+DEPRECATED_ATTRIBUTE;
+
+/**
+
+@warning App and game groups are being deprecated. See https://developers.facebook.com/docs/games/services/game-groups for more information.
+ */
+- (BOOL)canShow DEPRECATED_ATTRIBUTE;
+
+/**
+
+@warning App and game groups are being deprecated. See https://developers.facebook.com/docs/games/services/game-groups for more information.
+ */
+- (BOOL)show DEPRECATED_ATTRIBUTE;
+
+/**
+
+@warning App and game groups are being deprecated. See https://developers.facebook.com/docs/games/services/game-groups for more information.
+ */
+- (BOOL)validateWithError:(NSError *__autoreleasing *)errorRef
+DEPRECATED_ATTRIBUTE;
+
+@end
+
+/**
+
+@warning App and game groups are being deprecated. See https://developers.facebook.com/docs/games/services/game-groups for more information.
+ */
+DEPRECATED_MSG_ATTRIBUTE("App and game groups are being deprecated")
+@protocol FBSDKAppGroupAddDialogDelegate <NSObject>
+
+/**
+
+@warning App and game groups are being deprecated. See https://developers.facebook.com/docs/games/services/game-groups for more information.
+ */
+- (void)appGroupAddDialog:(FBSDKAppGroupAddDialog *)appGroupAddDialog didCompleteWithResults:(NSDictionary *)results DEPRECATED_ATTRIBUTE;
+
+/**
+
+@warning App and game groups are being deprecated. See https://developers.facebook.com/docs/games/services/game-groups for more information.
+ */
+- (void)appGroupAddDialog:(FBSDKAppGroupAddDialog *)appGroupAddDialog didFailWithError:(NSError *)error DEPRECATED_ATTRIBUTE;
+
+/**
+
+@warning App and game groups are being deprecated. See https://developers.facebook.com/docs/games/services/game-groups for more information.
+ */
+- (void)appGroupAddDialogDidCancel:(FBSDKAppGroupAddDialog *)appGroupAddDialog DEPRECATED_ATTRIBUTE;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKAppGroupContent.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKAppGroupContent.h
new file mode 100755
index 0000000..9b0e0fe
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKAppGroupContent.h
@@ -0,0 +1,67 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import <FBSDKCoreKit/FBSDKCopying.h>
+
+/**
+ NS_ENUM(NSUInteger, FBSDKAppGroupPrivacy)
+  Specifies the privacy of a group.
+ */
+typedef NS_ENUM(NSUInteger, FBSDKAppGroupPrivacy)
+{
+  /** Anyone can see the group, who's in it and what members post. */
+  FBSDKAppGroupPrivacyOpen = 0,
+  /** Anyone can see the group and who's in it, but only members can see posts. */
+  FBSDKAppGroupPrivacyClosed,
+};
+
+/**
+  Converts an FBSDKAppGroupPrivacy to an NSString.
+ */
+FOUNDATION_EXPORT NSString *NSStringFromFBSDKAppGroupPrivacy(FBSDKAppGroupPrivacy privacy);
+
+/**
+  A model for creating an app group.
+ */
+@interface FBSDKAppGroupContent : NSObject <FBSDKCopying, NSSecureCoding>
+
+/**
+  The description of the group.
+ */
+@property (nonatomic, copy) NSString *groupDescription;
+
+/**
+  The name of the group.
+ */
+@property (nonatomic, copy) NSString *name;
+
+/**
+  The privacy for the group.
+ */
+@property (nonatomic, assign) FBSDKAppGroupPrivacy privacy;
+
+/**
+  Compares the receiver to another app group content.
+ @param content The other content
+ @return YES if the receiver's values are equal to the other content's values; otherwise NO
+ */
+- (BOOL)isEqualToAppGroupContent:(FBSDKAppGroupContent *)content;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKAppGroupJoinDialog.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKAppGroupJoinDialog.h
new file mode 100755
index 0000000..60e8d99
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKAppGroupJoinDialog.h
@@ -0,0 +1,92 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+@protocol FBSDKAppGroupJoinDialogDelegate;
+
+/**
+
+@warning App and game groups are being deprecated. See https://developers.facebook.com/docs/games/services/game-groups for more information.
+ */
+DEPRECATED_MSG_ATTRIBUTE("App and game groups are being deprecated")
+@interface FBSDKAppGroupJoinDialog : NSObject
+
+/**
+
+@warning App and game groups are being deprecated. See https://developers.facebook.com/docs/games/services/game-groups for more information.
+ */
++ (instancetype)showWithGroupID:(NSString *)groupID
+                       delegate:(id<FBSDKAppGroupJoinDialogDelegate>)delegate DEPRECATED_ATTRIBUTE;
+
+/**
+
+@warning App and game groups are being deprecated. See https://developers.facebook.com/docs/games/services/game-groups for more information. */
+@property (nonatomic, weak) id<FBSDKAppGroupJoinDialogDelegate> delegate DEPRECATED_ATTRIBUTE;
+
+/**
+
+@warning App and game groups are being deprecated. See https://developers.facebook.com/docs/games/services/game-groups for more information. */
+@property (nonatomic, copy) NSString *groupID DEPRECATED_ATTRIBUTE;
+
+/**
+
+@warning App and game groups are being deprecated. See https://developers.facebook.com/docs/games/services/game-groups for more information.
+ */
+- (BOOL)canShow DEPRECATED_ATTRIBUTE;
+
+/**
+
+@warning App and game groups are being deprecated. See https://developers.facebook.com/docs/games/services/game-groups for more information.
+ */
+- (BOOL)show DEPRECATED_ATTRIBUTE;
+
+/**
+
+@warning App and game groups are being deprecated. See https://developers.facebook.com/docs/games/services/game-groups for more information.
+ */
+- (BOOL)validateWithError:(NSError *__autoreleasing *)errorRef DEPRECATED_ATTRIBUTE;
+
+@end
+
+/**
+
+@warning App and game groups are being deprecated. See https://developers.facebook.com/docs/games/services/game-groups for more information.
+ */
+DEPRECATED_MSG_ATTRIBUTE("App and game groups are being deprecated")
+@protocol FBSDKAppGroupJoinDialogDelegate <NSObject>
+
+/**
+
+@warning App and game groups are being deprecated. See https://developers.facebook.com/docs/games/services/game-groups for more information.
+ */
+- (void)appGroupJoinDialog:(FBSDKAppGroupJoinDialog *)appGroupJoinDialog didCompleteWithResults:(NSDictionary *)results DEPRECATED_ATTRIBUTE;
+
+/**
+
+@warning App and game groups are being deprecated. See https://developers.facebook.com/docs/games/services/game-groups for more information.
+ */
+- (void)appGroupJoinDialog:(FBSDKAppGroupJoinDialog *)appGroupJoinDialog didFailWithError:(NSError *)error DEPRECATED_ATTRIBUTE;
+
+/**
+
+@warning App and game groups are being deprecated. See https://developers.facebook.com/docs/games/services/game-groups for more information.
+ */
+- (void)appGroupJoinDialogDidCancel:(FBSDKAppGroupJoinDialog *)appGroupJoinDialog DEPRECATED_ATTRIBUTE;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKAppInviteContent.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKAppInviteContent.h
new file mode 100755
index 0000000..5655983
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKAppInviteContent.h
@@ -0,0 +1,97 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import <FBSDKCoreKit/FBSDKCopying.h>
+#import <FBSDKShareKit/FBSDKSharingValidation.h>
+
+/**
+ NS_ENUM(NSUInteger, FBSDKAppInviteDestination)
+  Specifies the privacy of a group.
+ */
+typedef NS_ENUM(NSUInteger, FBSDKAppInviteDestination)
+{
+  /** Deliver to Facebook. */
+  FBSDKAppInviteDestinationFacebook = 0,
+  /** Deliver to Messenger. */
+  FBSDKAppInviteDestinationMessenger,
+};
+
+/**
+  A model for app invite.
+ */
+@interface FBSDKAppInviteContent : NSObject <FBSDKCopying, FBSDKSharingValidation, NSSecureCoding>
+
+/**
+  A URL to a preview image that will be displayed with the app invite
+
+
+ This is optional.  If you don't include it a fallback image will be used.
+*/
+@property (nonatomic, copy) NSURL *appInvitePreviewImageURL;
+
+/**
+  An app link target that will be used as a target when the user accept the invite.
+
+
+ This is a requirement.
+ */
+@property (nonatomic, copy) NSURL *appLinkURL;
+
+/**
+
+@warning Use `appInvitePreviewImageURL` instead.
+ */
+@property (nonatomic, copy) NSURL *previewImageURL
+DEPRECATED_MSG_ATTRIBUTE("use appInvitePreviewImageURL instead");
+
+/**
+  Promotional code to be displayed while sending and receiving the invite.
+
+
+ This is optional. This can be between 0 and 10 characters long and can contain
+ alphanumeric characters only. To set a promo code, you need to set promo text.
+ */
+@property (nonatomic, copy) NSString *promotionCode;
+
+/**
+  Promotional text to be displayed while sending and receiving the invite.
+
+
+ This is optional. This can be between 0 and 80 characters long and can contain
+ alphanumeric and spaces only.
+ */
+@property (nonatomic, copy) NSString *promotionText;
+
+/**
+  Destination for the app invite.
+
+
+ This is optional and for declaring destination of the invite.
+ */
+@property FBSDKAppInviteDestination destination;
+
+/**
+  Compares the receiver to another app invite content.
+ @param content The other content
+ @return YES if the receiver's values are equal to the other content's values; otherwise NO
+ */
+- (BOOL)isEqualToAppInviteContent:(FBSDKAppInviteContent *)content;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKAppInviteDialog.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKAppInviteDialog.h
new file mode 100755
index 0000000..0af2790
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKAppInviteDialog.h
@@ -0,0 +1,118 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+#import <UIKit/UIKit.h>
+
+#import <FBSDKShareKit/FBSDKAppInviteContent.h>
+
+@protocol FBSDKAppInviteDialogDelegate;
+
+/**
+ A dialog for sending App Invites.
+ */
+@interface FBSDKAppInviteDialog : NSObject
+
+/**
+ Convenience method to show a FBSDKAppInviteDialog
+ @param viewController A UIViewController to present the dialog from.
+ @param content The content for the app invite.
+ @param delegate The receiver's delegate.
+ @warning This method is deprecated.
+ */
++ (instancetype)showFromViewController:(UIViewController *)viewController
+                           withContent:(FBSDKAppInviteContent *)content
+                              delegate:(id<FBSDKAppInviteDialogDelegate>)delegate
+DEPRECATED_MSG_ATTRIBUTE("App Invites no longer supported");
+
+
+/**
+
+ @warning use showFromViewController:withContent:delegate: instead
+ */
++ (instancetype)showWithContent:(FBSDKAppInviteContent *)content delegate:(id<FBSDKAppInviteDialogDelegate>)delegate
+DEPRECATED_MSG_ATTRIBUTE("use showFromViewController:withContent:delegate: instead");
+
+/**
+ A UIViewController to present the dialog from.
+
+ If not specified, the top most view controller will be automatically determined as best as possible.
+ */
+@property (nonatomic, weak) UIViewController *fromViewController;
+
+/**
+ The receiver's delegate or nil if it doesn't have a delegate.
+ */
+@property (nonatomic, weak) id<FBSDKAppInviteDialogDelegate> delegate;
+
+/**
+ The content for app invite.
+ */
+@property (nonatomic, copy) FBSDKAppInviteContent *content;
+
+/**
+ A Boolean value that indicates whether the receiver can initiate an app invite.
+
+ May return NO if the appropriate Facebook app is not installed and is required or an access token is
+ required but not available.  This method does not validate the content on the receiver, so this can be checked before
+ building up the content.
+
+ @see validateWithError:
+ @return YES if the receiver can show the dialog, otherwise NO.
+ */
+@property (nonatomic, readonly) BOOL canShow;
+
+/**
+ Begins the app invite from the receiver.
+ @return YES if the receiver was able to show the dialog, otherwise NO.
+ */
+- (BOOL)show;
+
+/**
+ Validates the content on the receiver.
+ @param errorRef If an error occurs, upon return contains an NSError object that describes the problem.
+ @return YES if the content is valid, otherwise NO.
+ */
+- (BOOL)validateWithError:(NSError *__autoreleasing *)errorRef;
+
+@end
+
+/**
+ A delegate for FBSDKAppInviteDialog.
+
+ The delegate is notified with the results of the app invite as long as the application has permissions to
+ receive the information.  For example, if the person is not signed into the containing app, the shower may not be able
+ to distinguish between completion of an app invite and cancellation.
+ */
+@protocol FBSDKAppInviteDialogDelegate <NSObject>
+
+/**
+ Sent to the delegate when the app invite completes without error.
+ @param appInviteDialog The FBSDKAppInviteDialog that completed.
+ @param results The results from the dialog.  This may be nil or empty.
+ */
+- (void)appInviteDialog:(FBSDKAppInviteDialog *)appInviteDialog didCompleteWithResults:(NSDictionary *)results;
+
+/**
+ Sent to the delegate when the app invite encounters an error.
+ @param appInviteDialog The FBSDKAppInviteDialog that completed.
+ @param error The error.
+ */
+- (void)appInviteDialog:(FBSDKAppInviteDialog *)appInviteDialog didFailWithError:(NSError *)error;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKCameraEffectArguments.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKCameraEffectArguments.h
new file mode 100755
index 0000000..6306f47
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKCameraEffectArguments.h
@@ -0,0 +1,57 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import <FBSDKCoreKit/FBSDKCopying.h>
+
+/**
+ * A container of arguments for a camera effect.
+ * An argument is a NSString identified by a NSString key.
+ */
+@interface FBSDKCameraEffectArguments : NSObject <FBSDKCopying, NSSecureCoding>
+
+/**
+ Sets a string argument in the container.
+ @param string The argument
+ @param key The key for the argument
+ */
+- (void)setString:(NSString *)string forKey:(NSString *)key;
+
+/**
+ Gets a string argument from the container.
+ @param key The key for the argument
+ @return The string value or nil
+ */
+- (NSString *)stringForKey:(NSString *)key;
+
+/**
+ Sets a string array argument in the container.
+ @param array The array argument
+ @param key The key for the argument
+ */
+- (void)setArray:(NSArray<NSString *> *)array forKey:(NSString *)key;
+
+/**
+ Gets an array argument from the container.
+ @param key The key for the argument
+ @return The array argument
+ */
+- (NSArray *)arrayForKey:(NSString *)key;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKCameraEffectTextures.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKCameraEffectTextures.h
new file mode 100755
index 0000000..9639b50
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKCameraEffectTextures.h
@@ -0,0 +1,43 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <UIKit/UIKit.h>
+
+#import <FBSDKCoreKit/FBSDKCopying.h>
+
+/**
+ * A container of textures for a camera effect.
+ * A texture for a camera effect is an UIImages identified by a NSString key.
+ */
+@interface FBSDKCameraEffectTextures : NSObject <FBSDKCopying, NSSecureCoding>
+
+/**
+ Sets the image for a texture key.
+ @param image The UIImage for the texture
+ @param key The key for the texture
+ */
+- (void)setImage:(UIImage *)image forKey:(NSString *)key;
+
+/**
+ Gets the image for a texture key.
+ @param key The key for the texture
+ @return The texture UIImage or nil
+ */
+- (UIImage *)imageForKey:(NSString *)key;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKGameRequestContent.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKGameRequestContent.h
new file mode 100755
index 0000000..0591207
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKGameRequestContent.h
@@ -0,0 +1,142 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import <FBSDKCoreKit/FBSDKCopying.h>
+#import <FBSDKShareKit/FBSDKSharingValidation.h>
+
+/**
+ NS_ENUM(NSUInteger, FBSDKGameRequestActionType)
+  Additional context about the nature of the request.
+ */
+typedef NS_ENUM(NSUInteger, FBSDKGameRequestActionType)
+{
+  /** No action type */
+  FBSDKGameRequestActionTypeNone = 0,
+  /** Send action type: The user is sending an object to the friends. */
+  FBSDKGameRequestActionTypeSend,
+  /** Ask For action type: The user is asking for an object from friends. */
+  FBSDKGameRequestActionTypeAskFor,
+  /** Turn action type: It is the turn of the friends to play against the user in a match. (no object) */
+  FBSDKGameRequestActionTypeTurn,
+};
+
+/**
+ NS_ENUM(NSUInteger, FBSDKGameRequestFilters)
+  Filter for who can be displayed in the multi-friend selector.
+ */
+typedef NS_ENUM(NSUInteger, FBSDKGameRequestFilter)
+{
+  /** No filter, all friends can be displayed. */
+  FBSDKGameRequestFilterNone = 0,
+  /** Friends using the app can be displayed. */
+  FBSDKGameRequestFilterAppUsers,
+  /** Friends not using the app can be displayed. */
+  FBSDKGameRequestFilterAppNonUsers,
+};
+
+/**
+  A model for a game request.
+ */
+@interface FBSDKGameRequestContent : NSObject <FBSDKCopying, FBSDKSharingValidation, NSSecureCoding>
+
+/**
+  Used when defining additional context about the nature of the request.
+
+ The parameter 'objectID' is required if the action type is either
+ 'FBSDKGameRequestSendActionType' or 'FBSDKGameRequestAskForActionType'.
+
+- SeeAlso:objectID
+ */
+@property (nonatomic, assign) FBSDKGameRequestActionType actionType;
+
+/**
+  Compares the receiver to another game request content.
+ @param content The other content
+ @return YES if the receiver's values are equal to the other content's values; otherwise NO
+ */
+- (BOOL)isEqualToGameRequestContent:(FBSDKGameRequestContent *)content;
+
+/**
+  Additional freeform data you may pass for tracking. This will be stored as part of
+ the request objects created. The maximum length is 255 characters.
+ */
+@property (nonatomic, copy) NSString *data;
+
+/**
+  This controls the set of friends someone sees if a multi-friend selector is shown.
+ It is FBSDKGameRequestNoFilter by default, meaning that all friends can be shown.
+ If specify as FBSDKGameRequestAppUsersFilter, only friends who use the app will be shown.
+ On the other hands, use FBSDKGameRequestAppNonUsersFilter to filter only friends who do not use the app.
+
+ The parameter name is preserved to be consistent with the counter part on desktop.
+ */
+@property (nonatomic, assign) FBSDKGameRequestFilter filters;
+
+/**
+  A plain-text message to be sent as part of the request. This text will surface in the App Center view
+ of the request, but not on the notification jewel. Required parameter.
+ */
+@property (nonatomic, copy) NSString *message;
+
+/**
+  The Open Graph object ID of the object being sent.
+
+- SeeAlso:actionType
+ */
+@property (nonatomic, copy) NSString *objectID;
+
+/**
+  An array of user IDs, usernames or invite tokens (NSString) of people to send request.
+
+ These may or may not be a friend of the sender. If this is specified by the app,
+ the sender will not have a choice of recipients. If not, the sender will see a multi-friend selector
+
+ This is equivalent to the "to" parameter when using the web game request dialog.
+ */
+@property (nonatomic, copy) NSArray *recipients;
+
+/**
+  An array of user IDs that will be included in the dialog as the first suggested friends.
+ Cannot be used together with filters.
+
+ This is equivalent to the "suggestions" parameter when using the web game request dialog.
+*/
+@property (nonatomic, copy) NSArray *recipientSuggestions;
+
+/**
+
+@warning Use `recipientSuggestions` instead.
+*/
+@property (nonatomic, copy) NSArray *suggestions
+DEPRECATED_MSG_ATTRIBUTE("use recipientSuggestions instead");
+
+/**
+  The title for the dialog.
+ */
+@property (nonatomic, copy) NSString *title;
+
+/**
+
+@warning Use `recipients` instead.
+ */
+@property (nonatomic, copy) NSArray *to
+DEPRECATED_MSG_ATTRIBUTE("use recipients instead");
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKGameRequestDialog.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKGameRequestDialog.h
new file mode 100755
index 0000000..d403007
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKGameRequestDialog.h
@@ -0,0 +1,108 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import <FBSDKShareKit/FBSDKGameRequestContent.h>
+
+@protocol FBSDKGameRequestDialogDelegate;
+
+/**
+  A dialog for sending game requests.
+ */
+@interface FBSDKGameRequestDialog : NSObject
+
+/**
+  Convenience method to build up a game request with content and a delegate.
+ @param content The content for the game request.
+ @param delegate The receiver's delegate.
+ */
++ (instancetype)showWithContent:(FBSDKGameRequestContent *)content delegate:(id<FBSDKGameRequestDialogDelegate>)delegate;
+
+/**
+  The receiver's delegate or nil if it doesn't have a delegate.
+ */
+@property (nonatomic, weak) id<FBSDKGameRequestDialogDelegate> delegate;
+
+/**
+  The content for game request.
+ */
+@property (nonatomic, copy) FBSDKGameRequestContent *content;
+
+/**
+  Specifies whether frictionless requests are enabled.
+ */
+@property (nonatomic, assign) BOOL frictionlessRequestsEnabled;
+
+/**
+  A Boolean value that indicates whether the receiver can initiate a game request.
+
+ May return NO if the appropriate Facebook app is not installed and is required or an access token is
+ required but not available.  This method does not validate the content on the receiver, so this can be checked before
+ building up the content.
+
+ @see validateWithError:
+ @return YES if the receiver can share, otherwise NO.
+ */
+@property (nonatomic, readonly) BOOL canShow;
+
+/**
+  Begins the game request from the receiver.
+ @return YES if the receiver was able to show the dialog, otherwise NO.
+ */
+- (BOOL)show;
+
+/**
+  Validates the content on the receiver.
+ @param errorRef If an error occurs, upon return contains an NSError object that describes the problem.
+ @return YES if the content is valid, otherwise NO.
+ */
+- (BOOL)validateWithError:(NSError *__autoreleasing *)errorRef;
+
+@end
+
+/**
+  A delegate for FBSDKGameRequestDialog.
+
+ The delegate is notified with the results of the game request as long as the application has permissions to
+ receive the information.  For example, if the person is not signed into the containing app, the shower may not be able
+ to distinguish between completion of a game request and cancellation.
+ */
+@protocol FBSDKGameRequestDialogDelegate <NSObject>
+
+/**
+  Sent to the delegate when the game request completes without error.
+ @param gameRequestDialog The FBSDKGameRequestDialog that completed.
+ @param results The results from the dialog.  This may be nil or empty.
+ */
+- (void)gameRequestDialog:(FBSDKGameRequestDialog *)gameRequestDialog didCompleteWithResults:(NSDictionary *)results;
+
+/**
+  Sent to the delegate when the game request encounters an error.
+ @param gameRequestDialog The FBSDKGameRequestDialog that completed.
+ @param error The error.
+ */
+- (void)gameRequestDialog:(FBSDKGameRequestDialog *)gameRequestDialog didFailWithError:(NSError *)error;
+
+/**
+  Sent to the delegate when the game request dialog is cancelled.
+ @param gameRequestDialog The FBSDKGameRequestDialog that completed.
+ */
+- (void)gameRequestDialogDidCancel:(FBSDKGameRequestDialog *)gameRequestDialog;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKHashtag.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKHashtag.h
new file mode 100755
index 0000000..7c9c529
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKHashtag.h
@@ -0,0 +1,61 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import <FBSDKCoreKit/FBSDKCopying.h>
+
+/**
+  Represents a single hashtag that can be used with the share dialog.
+ */
+@interface FBSDKHashtag : NSObject <FBSDKCopying, NSSecureCoding>
+
+/**
+  Convenience method to build a new hashtag with a string identifier. Equivalent to setting the
+   `stringRepresentation` property.
+ @param hashtagString The hashtag string.
+ */
++ (instancetype)hashtagWithString:(NSString *)hashtagString;
+
+/**
+  The hashtag string.
+
+ You are responsible for making sure that `stringRepresentation` is a valid hashtag (a single '#' followed
+   by one or more word characters). Invalid hashtags are ignored when sharing content. You can check validity with the
+   `valid` property.
+ @return The hashtag string.
+ */
+@property (nonatomic, copy) NSString *stringRepresentation;
+
+/**
+  Tests if a hashtag is valid.
+
+ A valid hashtag matches the regular expression "#\w+": A single '#' followed by one or more
+   word characters.
+ @return YES if the hashtag is valid, NO otherwise.
+ */
+@property (nonatomic, readonly, assign, getter=isValid) BOOL valid;
+
+/**
+  Compares the receiver to another hashtag.
+ @param hashtag The other hashtag
+ @return YES if the receiver is equal to the other hashtag; otherwise NO
+ */
+- (BOOL)isEqualToHashtag:(FBSDKHashtag *)hashtag;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKLikeButton.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKLikeButton.h
new file mode 100755
index 0000000..dcfc9f6
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKLikeButton.h
@@ -0,0 +1,45 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <UIKit/UIKit.h>
+
+#import <FBSDKCoreKit/FBSDKButton.h>
+
+#import <FBSDKShareKit/FBSDKLikeObjectType.h>
+#import <FBSDKShareKit/FBSDKLiking.h>
+
+/**
+  Warning: This class is deprecated.
+  A button to like an object.
+
+ Tapping the receiver will invoke an API call to the Facebook app through a fast-app-switch that allows
+ the object to be liked.  Upon return to the calling app, the view will update with the new state.  If the
+ currentAccessToken has "publish_actions" permission and the object is an Open Graph object, then the like can happen
+ seamlessly without the fast-app-switch.
+ */
+DEPRECATED_MSG_ATTRIBUTE("This is no longer available")
+@interface FBSDKLikeButton : FBSDKButton <FBSDKLiking>
+
+/**
+  If YES, a sound is played when the receiver is toggled.
+
+ @default YES
+ */
+@property (nonatomic, assign, getter = isSoundEnabled) BOOL soundEnabled;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKLikeControl.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKLikeControl.h
new file mode 100755
index 0000000..0bf9f87
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKLikeControl.h
@@ -0,0 +1,142 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <UIKit/UIKit.h>
+
+#import <FBSDKShareKit/FBSDKLikeObjectType.h>
+#import <FBSDKShareKit/FBSDKLiking.h>
+
+/**
+ NS_ENUM (NSUInteger, FBSDKLikeControlAuxiliaryPosition)
+
+  Specifies the position of the auxiliary view relative to the like button.
+ */
+typedef NS_ENUM(NSUInteger, FBSDKLikeControlAuxiliaryPosition)
+{
+  /** The auxiliary view is inline with the like button. */
+  FBSDKLikeControlAuxiliaryPositionInline,
+  /** The auxiliary view is above the like button. */
+  FBSDKLikeControlAuxiliaryPositionTop,
+  /** The auxiliary view is below the like button. */
+  FBSDKLikeControlAuxiliaryPositionBottom,
+};
+
+/**
+  Converts an FBSDKLikeControlAuxiliaryPosition to an NSString.
+ */
+FOUNDATION_EXPORT NSString *NSStringFromFBSDKLikeControlAuxiliaryPosition(FBSDKLikeControlAuxiliaryPosition auxiliaryPosition);
+
+/**
+ NS_ENUM(NSUInteger, FBSDKLikeControlHorizontalAlignment)
+
+  Specifies the horizontal alignment for FBSDKLikeControlStyleStandard with
+ FBSDKLikeControlAuxiliaryPositionTop or FBSDKLikeControlAuxiliaryPositionBottom.
+ */
+typedef NS_ENUM(NSUInteger, FBSDKLikeControlHorizontalAlignment)
+{
+  /** The subviews are left aligned. */
+  FBSDKLikeControlHorizontalAlignmentLeft,
+  /** The subviews are center aligned. */
+  FBSDKLikeControlHorizontalAlignmentCenter,
+  /** The subviews are right aligned. */
+  FBSDKLikeControlHorizontalAlignmentRight,
+};
+
+/**
+  Converts an FBSDKLikeControlHorizontalAlignment to an NSString.
+ */
+FOUNDATION_EXPORT NSString *NSStringFromFBSDKLikeControlHorizontalAlignment(FBSDKLikeControlHorizontalAlignment horizontalAlignment);
+
+/**
+ NS_ENUM (NSUInteger, FBSDKLikeControlStyle)
+
+  Specifies the style of a like control.
+ */
+typedef NS_ENUM(NSUInteger, FBSDKLikeControlStyle)
+{
+  /** Displays the button and the social sentence. */
+  FBSDKLikeControlStyleStandard = 0,
+  /** Displays the button and a box that contains the like count. */
+  FBSDKLikeControlStyleBoxCount,
+};
+
+/**
+  Converts an FBSDKLikeControlStyle to an NSString.
+ */
+FOUNDATION_EXPORT NSString *NSStringFromFBSDKLikeControlStyle(FBSDKLikeControlStyle style);
+
+/**
+  Warning: This class is deprecated.
+  UI control to like an object in the Facebook graph.
+
+
+ Taps on the like button within this control will invoke an API call to the Facebook app through a
+ fast-app-switch that allows the user to like the object.  Upon return to the calling app, the view will update
+ with the new state and send actions for the UIControlEventValueChanged event.
+ */
+DEPRECATED_MSG_ATTRIBUTE("This is no longer available")
+@interface FBSDKLikeControl : UIControl <FBSDKLiking>
+
+/**
+  The foreground color to use for the content of the receiver.
+ */
+@property (nonatomic, strong) UIColor *foregroundColor;
+
+/**
+  The position for the auxiliary view for the receiver.
+
+
+ @see FBSDKLikeControlAuxiliaryPosition
+ */
+@property (nonatomic, assign) FBSDKLikeControlAuxiliaryPosition likeControlAuxiliaryPosition;
+
+/**
+  The text alignment of the social sentence.
+
+
+ This value is only valid for FBSDKLikeControlStyleStandard with
+ FBSDKLikeControlAuxiliaryPositionTop|Bottom.
+ */
+@property (nonatomic, assign) FBSDKLikeControlHorizontalAlignment likeControlHorizontalAlignment;
+
+/**
+  The style to use for the receiver.
+
+
+ @see FBSDKLikeControlStyle
+ */
+@property (nonatomic, assign) FBSDKLikeControlStyle likeControlStyle;
+
+/**
+  The preferred maximum width (in points) for autolayout.
+
+
+ This property affects the size of the receiver when layout constraints are applied to it. During layout,
+ if the text extends beyond the width specified by this property, the additional text is flowed to one or more new
+ lines, thereby increasing the height of the receiver.
+ */
+@property (nonatomic, assign) CGFloat preferredMaxLayoutWidth;
+
+/**
+  If YES, a sound is played when the receiver is toggled.
+
+ @default YES
+ */
+@property (nonatomic, assign, getter = isSoundEnabled) BOOL soundEnabled;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKLikeObjectType.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKLikeObjectType.h
new file mode 100755
index 0000000..ce7b8f6
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKLikeObjectType.h
@@ -0,0 +1,38 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+/**
+ NS_ENUM (NSUInteger, FBSDKLikeObjectType)
+  Specifies the type of object referenced by the objectID for likes.
+ */
+typedef NS_ENUM(NSUInteger, FBSDKLikeObjectType)
+{
+  /** The objectID refers to an unknown object type. */
+  FBSDKLikeObjectTypeUnknown = 0,
+  /** The objectID refers to an Open Graph object. */
+  FBSDKLikeObjectTypeOpenGraph,
+  /** The objectID refers to an Page object. */
+  FBSDKLikeObjectTypePage,
+};
+
+/**
+  Converts an FBLikeControlObjectType to an NSString.
+ */
+FOUNDATION_EXPORT NSString *NSStringFromFBSDKLikeObjectType(FBSDKLikeObjectType objectType);
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKLiking.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKLiking.h
new file mode 100755
index 0000000..57fbd22
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKLiking.h
@@ -0,0 +1,49 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+/**
+  The common interface for components that initiate liking.
+
+ @see FBSDKLikeButton
+
+ @see FBSDKLikeControl
+ */
+@protocol FBSDKLiking <NSObject>
+
+/**
+  The objectID for the object to like.
+
+
+ This value may be an Open Graph object ID or a string representation of an URL that describes an
+ Open Graph object.  The objects may be public objects, like pages, or objects that are defined by your application.
+ */
+@property (nonatomic, copy) NSString *objectID;
+
+/**
+  The type of object referenced by the objectID.
+
+
+ If the objectType is unknown, the control will determine the objectType by querying the server with the
+ objectID.  Specifying a value for the objectType is an optimization that should be used if the type is known by the
+ consumer.  Consider setting the objectType if it is known when setting the objectID.
+ */
+@property (nonatomic, assign) FBSDKLikeObjectType objectType;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKMessageDialog.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKMessageDialog.h
new file mode 100755
index 0000000..1604f80
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKMessageDialog.h
@@ -0,0 +1,47 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import <FBSDKShareKit/FBSDKSharing.h>
+
+/**
+ A dialog for sharing content through Messenger.
+
+ SUPPORTED SHARE TYPES
+ - FBSDKShareLinkContent
+ - FBSDKShareMessengerOpenGraphMusicTemplateContent
+ - FBSDKShareMessengerMediaTemplateContent
+ - FBSDKShareMessengerGenericTemplateContent
+
+ UNSUPPORTED SHARE TYPES (DEPRECATED AUGUST 2018)
+ - FBSDKShareOpenGraphContent
+ - FBSDKSharePhotoContent
+ - FBSDKShareVideoContent
+ - Any other types that are not one of the four supported types listed above
+ */
+@interface FBSDKMessageDialog : NSObject <FBSDKSharingDialog>
+
+/**
+ Convenience method to show a Message Share Dialog with content and a delegate.
+ @param content The content to be shared.
+ @param delegate The receiver's delegate.
+ */
++ (instancetype)showWithContent:(id<FBSDKSharingContent>)content delegate:(id<FBSDKSharingDelegate>)delegate;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKSendButton.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKSendButton.h
new file mode 100755
index 0000000..8dc40ac
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKSendButton.h
@@ -0,0 +1,33 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <UIKit/UIKit.h>
+
+#import <FBSDKCoreKit/FBSDKButton.h>
+
+#import <FBSDKShareKit/FBSDKSharingButton.h>
+
+/**
+  A button to send content through Messenger.
+
+ Tapping the receiver will invoke the FBSDKShareDialog with the attached shareContent.  If the dialog cannot
+ be shown, the button will be disable.
+ */
+@interface FBSDKSendButton : FBSDKButton <FBSDKSharingButton>
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareAPI.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareAPI.h
new file mode 100755
index 0000000..01ae3e8
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareAPI.h
@@ -0,0 +1,94 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import <FBSDKCoreKit/FBSDKAccessToken.h>
+
+#import <FBSDKShareKit/FBSDKShareOpenGraphObject.h>
+#import <FBSDKShareKit/FBSDKSharing.h>
+
+/**
+  A utility class for sharing through the graph API.  Using this class requires an access token that
+ has been granted the "publish_actions" permission.
+
+ FBSDKShareAPI network requests are scheduled on the current run loop in the default run loop mode.
+ If you want to use FBSDKShareAPI in a background thread, you must manage the run loop
+ yourself.
+ */
+@interface FBSDKShareAPI : NSObject <FBSDKSharing>
+
+/**
+  Convenience method to build up a share API with content and a delegate.
+ @param content The content to be shared.
+ @param delegate The receiver's delegate.
+ */
++ (instancetype)shareWithContent:(id<FBSDKSharingContent>)content delegate:(id<FBSDKSharingDelegate>)delegate;
+
+/**
+  The message the person has provided through the custom dialog that will accompany the share content.
+ */
+@property (nonatomic, copy) NSString *message;
+
+/**
+  The graph node to which content should be shared.
+ */
+@property (nonatomic, copy) NSString *graphNode;
+
+/**
+  The access token used when performing a share. The access token must have the "publish_actions"
+ permission granted.
+
+ Defaults to [FBSDKAccessToken currentAccessToken]. Setting this to nil will revert the access token to
+ [FBSDKAccessToken currentAccessToken].
+ */
+@property (nonatomic, strong) FBSDKAccessToken *accessToken;
+
+/**
+  A Boolean value that indicates whether the receiver can send the share.
+
+ May return NO if the appropriate Facebook app is not installed and is required or an access token is
+ required but not available.  This method does not validate the content on the receiver, so this can be checked before
+ building up the content.
+
+ @see [FBSDKSharing validateWithError:]
+ @return YES if the receiver can send, otherwise NO.
+ */
+@property (nonatomic, readonly) BOOL canShare;
+
+/**
+  Creates an User Owned Open Graph object without an action.
+ @param openGraphObject The open graph object to create.
+
+ Use this method to create an object alone, when an action is not going to be posted with the object.  If
+ the object will be used within an action, just put the object in the action and share that as the shareContent and the
+ object will be created in the process.  The delegate will be messaged with the results.
+
+ Also see https://developers.facebook.com/docs/sharing/opengraph/object-api#objectapi-creatinguser
+
+ @return YES if the receiver was able to send the request to create the object, otherwise NO.
+ */
+- (BOOL)createOpenGraphObject:(FBSDKShareOpenGraphObject *)openGraphObject;
+
+/**
+  Begins the send from the receiver.
+ @return YES if the receiver was able to send the share, otherwise NO.
+ */
+- (BOOL)share;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareButton.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareButton.h
new file mode 100755
index 0000000..c2565db
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareButton.h
@@ -0,0 +1,33 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <UIKit/UIKit.h>
+
+#import <FBSDKCoreKit/FBSDKButton.h>
+
+#import <FBSDKShareKit/FBSDKSharingButton.h>
+
+/**
+  A button to share content.
+
+ Tapping the receiver will invoke the FBSDKShareDialog with the attached shareContent.  If the dialog cannot
+ be shown, the button will be disabled.
+ */
+@interface FBSDKShareButton : FBSDKButton <FBSDKSharingButton>
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareCameraEffectContent.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareCameraEffectContent.h
new file mode 100755
index 0000000..1309c8d
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareCameraEffectContent.h
@@ -0,0 +1,53 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import <FBSDKShareKit/FBSDKCameraEffectArguments.h>
+#import <FBSDKShareKit/FBSDKCameraEffectTextures.h>
+#import <FBSDKShareKit/FBSDKSharingContent.h>
+#import <FBSDKShareKit/FBSDKSharingScheme.h>
+
+/**
+ A model for content to share with a Facebook camera effect.
+ */
+@interface FBSDKShareCameraEffectContent : NSObject <FBSDKSharingContent, FBSDKSharingScheme>
+
+/**
+ ID of the camera effect to use.
+ */
+@property (nonatomic, copy) NSString *effectID;
+
+/**
+ Arguments for the effect.
+ */
+@property (nonatomic, copy) FBSDKCameraEffectArguments *effectArguments;
+
+/**
+ Textures for the effect.
+ */
+@property (nonatomic, copy) FBSDKCameraEffectTextures *effectTextures;
+
+/**
+ Compares the receiver to another camera effect content.
+ @param content The other content
+ @return YES if the receiver's values are equal to the other content's values; otherwise NO
+ */
+- (BOOL)isEqualToShareCameraEffectContent:(FBSDKShareCameraEffectContent *)content;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareConstants.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareConstants.h
new file mode 100755
index 0000000..547a484
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareConstants.h
@@ -0,0 +1,85 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#if __IPHONE_OS_VERSION_MAX_ALLOWED >= __IPHONE_10_0
+
+/**
+ The error domain for all errors from FBSDKShareKit.
+
+ Error codes from the SDK in the range 200-299 are reserved for this domain.
+ */
+FOUNDATION_EXPORT NSErrorDomain const FBSDKShareErrorDomain;
+
+#else
+
+/**
+ The error domain for all errors from FBSDKShareKit.
+
+ Error codes from the SDK in the range 200-299 are reserved for this domain.
+ */
+FOUNDATION_EXPORT NSString *const FBSDKShareErrorDomain;
+
+#endif
+
+#ifndef NS_ERROR_ENUM
+#define NS_ERROR_ENUM(_domain, _name) \
+enum _name: NSInteger _name; \
+enum __attribute__((ns_error_domain(_domain))) _name: NSInteger
+#endif
+
+/**
+ FBSDKShareError
+ Error codes for FBSDKShareErrorDomain.
+ */
+typedef NS_ERROR_ENUM(FBSDKShareErrorDomain, FBSDKShareError)
+{
+  /**
+   Reserved.
+   */
+  FBSDKShareErrorReserved = 200,
+
+  /**
+   The error code for errors from uploading open graph objects.
+   */
+  FBSDKShareErrorOpenGraph,
+
+  /**
+   The error code for when a sharing dialog is not available.
+
+   Use the canShare methods to check for this case before calling show.
+   */
+  FBSDKShareErrorDialogNotAvailable,
+
+  /**
+   @The error code for unknown errors.
+   */
+  FBSDKShareErrorUnknown,
+};
+
+/**
+ Deprecated
+ */
+typedef NS_ENUM(NSInteger, FBSDKShareErrorCode)
+{
+  FBSDKShareReservedErrorCode DEPRECATED_MSG_ATTRIBUTE("use FBSDKShareErrorReserved instead") = 200,
+  FBSDKShareOpenGraphErrorCode DEPRECATED_MSG_ATTRIBUTE("use FBSDKShareErrorOpenGraph instead"),
+  FBSDKShareDialogNotAvailableErrorCode DEPRECATED_MSG_ATTRIBUTE("use FBSDKShareErrorDialogNotAvailable instead"),
+  FBSDKShareUnknownErrorCode DEPRECATED_MSG_ATTRIBUTE("use FBSDKShareErrorUnknown instead"),
+} DEPRECATED_MSG_ATTRIBUTE("use FBSDKShareError instead");
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareDialog.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareDialog.h
new file mode 100755
index 0000000..18c4d3e
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareDialog.h
@@ -0,0 +1,54 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <UIKit/UIKit.h>
+
+#import <FBSDKShareKit/FBSDKShareDialogMode.h>
+#import <FBSDKShareKit/FBSDKSharing.h>
+#import <FBSDKShareKit/FBSDKSharingContent.h>
+
+/**
+  A dialog for sharing content on Facebook.
+ */
+@interface FBSDKShareDialog : NSObject <FBSDKSharingDialog>
+
+/**
+  Convenience method to show an FBSDKShareDialog with a fromViewController, content and a delegate.
+ @param viewController A UIViewController to present the dialog from, if appropriate.
+ @param content The content to be shared.
+ @param delegate The receiver's delegate.
+ */
++ (instancetype)showFromViewController:(UIViewController *)viewController
+                           withContent:(id<FBSDKSharingContent>)content
+                              delegate:(id<FBSDKSharingDelegate>)delegate;
+
+/**
+  A UIViewController to present the dialog from.
+
+ If not specified, the top most view controller will be automatically determined as best as possible.
+ */
+@property (nonatomic, weak) UIViewController *fromViewController;
+
+/**
+  The mode with which to display the dialog.
+
+ Defaults to FBSDKShareDialogModeAutomatic, which will automatically choose the best available mode.
+ */
+@property (nonatomic, assign) FBSDKShareDialogMode mode;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareDialogMode.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareDialogMode.h
new file mode 100755
index 0000000..f7bc213
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareDialogMode.h
@@ -0,0 +1,63 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+/**
+ NS_ENUM(NSUInteger, FBSDKShareDialogMode)
+  Modes for the FBSDKShareDialog.
+
+ The automatic mode will progressively check the availability of different modes and open the most
+ appropriate mode for the dialog that is available.
+ */
+typedef NS_ENUM(NSUInteger, FBSDKShareDialogMode)
+{
+  /**
+    Acts with the most appropriate mode that is available.
+   */
+  FBSDKShareDialogModeAutomatic = 0,
+  /**
+   @Displays the dialog in the main native Facebook app.
+   */
+  FBSDKShareDialogModeNative,
+  /**
+   @Displays the dialog in the iOS integrated share sheet.
+   */
+  FBSDKShareDialogModeShareSheet,
+  /**
+   @Displays the dialog in Safari.
+   */
+  FBSDKShareDialogModeBrowser,
+  /**
+   @Displays the dialog in a UIWebView within the app.
+   */
+  FBSDKShareDialogModeWeb,
+  /**
+   @Displays the feed dialog in Safari.
+   */
+  FBSDKShareDialogModeFeedBrowser,
+  /**
+   @Displays the feed dialog in a UIWebView within the app.
+   */
+  FBSDKShareDialogModeFeedWeb,
+};
+
+/**
+  Converts an FBSDKShareDialogMode to an NSString.
+ */
+FOUNDATION_EXPORT NSString *NSStringFromFBSDKShareDialogMode(FBSDKShareDialogMode dialogMode);
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareKit.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareKit.h
new file mode 100755
index 0000000..30e36aa
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareKit.h
@@ -0,0 +1,62 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <UIKit/UIKit.h>
+
+#import <FBSDKShareKit/FBSDKHashtag.h>
+#import <FBSDKShareKit/FBSDKShareAPI.h>
+#import <FBSDKShareKit/FBSDKShareConstants.h>
+#import <FBSDKShareKit/FBSDKShareLinkContent.h>
+#import <FBSDKShareKit/FBSDKShareMediaContent.h>
+#import <FBSDKShareKit/FBSDKShareMessengerActionButton.h>
+#import <FBSDKShareKit/FBSDKShareMessengerGenericTemplateContent.h>
+#import <FBSDKShareKit/FBSDKShareMessengerGenericTemplateElement.h>
+#import <FBSDKShareKit/FBSDKShareMessengerMediaTemplateContent.h>
+#import <FBSDKShareKit/FBSDKShareMessengerOpenGraphMusicTemplateContent.h>
+#import <FBSDKShareKit/FBSDKShareMessengerURLActionButton.h>
+#import <FBSDKShareKit/FBSDKShareOpenGraphAction.h>
+#import <FBSDKShareKit/FBSDKShareOpenGraphContent.h>
+#import <FBSDKShareKit/FBSDKShareOpenGraphObject.h>
+#import <FBSDKShareKit/FBSDKSharePhoto.h>
+#import <FBSDKShareKit/FBSDKSharePhotoContent.h>
+#import <FBSDKShareKit/FBSDKShareVideo.h>
+#import <FBSDKShareKit/FBSDKShareVideoContent.h>
+#import <FBSDKShareKit/FBSDKSharing.h>
+#import <FBSDKShareKit/FBSDKSharingContent.h>
+
+#if !TARGET_OS_TV
+#import <FBSDKShareKit/FBSDKAppGroupAddDialog.h>
+#import <FBSDKShareKit/FBSDKAppGroupContent.h>
+#import <FBSDKShareKit/FBSDKAppGroupJoinDialog.h>
+#import <FBSDKShareKit/FBSDKAppInviteContent.h>
+#import <FBSDKShareKit/FBSDKAppInviteDialog.h>
+#import <FBSDKShareKit/FBSDKGameRequestContent.h>
+#import <FBSDKShareKit/FBSDKGameRequestDialog.h>
+#import <FBSDKShareKit/FBSDKLikeButton.h>
+#import <FBSDKShareKit/FBSDKLikeControl.h>
+#import <FBSDKShareKit/FBSDKLikeObjectType.h>
+#import <FBSDKShareKit/FBSDKMessageDialog.h>
+#import <FBSDKShareKit/FBSDKShareButton.h>
+#import <FBSDKShareKit/FBSDKShareCameraEffectContent.h>
+#import <FBSDKShareKit/FBSDKShareDialog.h>
+#import <FBSDKShareKit/FBSDKShareDialogMode.h>
+#import <FBSDKShareKit/FBSDKSendButton.h>
+#else
+#import <FBSDKShareKit/FBSDKDeviceShareViewController.h>
+#import <FBSDKShareKit/FBSDKDeviceShareButton.h>
+#endif
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareLinkContent.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareLinkContent.h
new file mode 100755
index 0000000..0a28377
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareLinkContent.h
@@ -0,0 +1,78 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import <FBSDKShareKit/FBSDKSharingContent.h>
+
+/**
+  A model for status and link content to be shared.
+ */
+@interface FBSDKShareLinkContent : NSObject <FBSDKSharingContent>
+
+/**
+  The description of the link.
+
+ If not specified, this field is automatically populated by information scraped from the contentURL,
+ typically the title of the page.  This value may be discarded for specially handled links (ex: iTunes URLs).
+ @return The description of the link
+
+ @deprecated `contentDescription` is deprecated from Graph API 2.9.
+ For more information, see https://developers.facebook.com/docs/apps/changelog#v2_9_deprecations.
+ */
+@property (nonatomic, readonly) NSString *contentDescription
+  DEPRECATED_MSG_ATTRIBUTE("`contentDescription` is deprecated from Graph API 2.9");
+
+/**
+  The title to display for this link.
+
+ This value may be discarded for specially handled links (ex: iTunes URLs).
+ @return The link title
+
+ @deprecated `contentTitle` is deprecated from Graph API 2.9.
+ For more information, see https://developers.facebook.com/docs/apps/changelog#v2_9_deprecations
+ */
+@property (nonatomic, readonly) NSString *contentTitle
+  DEPRECATED_MSG_ATTRIBUTE("`contentTitle` is deprecated from Graph API 2.9");
+
+/**
+  The URL of a picture to attach to this content.
+ @return The network URL of an image
+
+ @deprecated `imageURL` is deprecated from Graph API 2.9.
+ For more information, see https://developers.facebook.com/docs/apps/changelog#v2_9_deprecations
+ */
+@property (nonatomic, readonly) NSURL *imageURL
+  DEPRECATED_MSG_ATTRIBUTE("`imageURL` is deprecated from Graph API 2.9");
+
+/**
+  Some quote text of the link.
+
+ If specified, the quote text will render with custom styling on top of the link.
+ @return The quote text of a link
+ */
+@property (nonatomic, copy) NSString *quote;
+
+/**
+  Compares the receiver to another link content.
+ @param content The other content
+ @return YES if the receiver's values are equal to the other content's values; otherwise NO
+ */
+- (BOOL)isEqualToShareLinkContent:(FBSDKShareLinkContent *)content;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareMediaContent.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareMediaContent.h
new file mode 100755
index 0000000..ab9d895
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareMediaContent.h
@@ -0,0 +1,41 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import <FBSDKShareKit/FBSDKSharingContent.h>
+
+/**
+  A model for media content (photo or video) to be shared.
+ */
+@interface FBSDKShareMediaContent : NSObject <FBSDKSharingContent>
+
+/**
+  Media to be shared.
+ @return Array of the media (FBSDKSharePhoto or FBSDKShareVideo)
+ */
+@property (nonatomic, copy) NSArray *media;
+
+/**
+  Compares the receiver to another media content.
+ @param content The other content
+ @return YES if the receiver's values are equal to the other content's values; otherwise NO
+ */
+- (BOOL)isEqualToShareMediaContent:(FBSDKShareMediaContent *)content;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareMessengerActionButton.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareMessengerActionButton.h
new file mode 100755
index 0000000..8b18d07
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareMessengerActionButton.h
@@ -0,0 +1,34 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import <FBSDKCoreKit/FBSDKCopying.h>
+
+/**
+ A base interface for Messenger share action buttons.
+ */
+@protocol FBSDKShareMessengerActionButton <FBSDKCopying, NSSecureCoding>
+
+/**
+ The title displayed to the user for the button.
+ @return The title for the button.
+ */
+@property (nonatomic, copy) NSString *title;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareMessengerGenericTemplateContent.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareMessengerGenericTemplateContent.h
new file mode 100755
index 0000000..ffc1b7f
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareMessengerGenericTemplateContent.h
@@ -0,0 +1,55 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import <FBSDKShareKit/FBSDKSharingContent.h>
+
+@class FBSDKShareMessengerGenericTemplateElement;
+
+typedef NS_ENUM(NSUInteger, FBSDKShareMessengerGenericTemplateImageAspectRatio) {
+  FBSDKShareMessengerGenericTemplateImageAspectRatioHorizontal = 0,
+  FBSDKShareMessengerGenericTemplateImageAspectRatioSquare
+};
+
+/**
+ A model for sharing a generic template element to Messenger. This wrapper element allows
+ specifying whether or not the bubble is sharable and what aspect to render the images.
+ See https://developers.facebook.com/docs/messenger-platform/send-messages/template/generic
+ for more details.
+ */
+@interface FBSDKShareMessengerGenericTemplateContent : NSObject <FBSDKSharingContent>
+
+/**
+ This specifies whether or not this generic template message can be shared again after the
+ initial share. Defaults to false.
+ */
+@property (nonatomic, assign) BOOL isSharable;
+
+/**
+ The aspect ratio for when the image is rendered in the generic template bubble after being
+ shared. Defaults to horizontal.
+ */
+@property (nonatomic, assign) FBSDKShareMessengerGenericTemplateImageAspectRatio imageAspectRatio;
+
+/**
+ A generic template element with a title, optional subtitle, optional image, etc. Required.
+ */
+@property (nonatomic, copy) FBSDKShareMessengerGenericTemplateElement *element;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareMessengerGenericTemplateElement.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareMessengerGenericTemplateElement.h
new file mode 100755
index 0000000..d70dd96
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareMessengerGenericTemplateElement.h
@@ -0,0 +1,56 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import <FBSDKCoreKit/FBSDKCopying.h>
+#import <FBSDKShareKit/FBSDKShareMessengerActionButton.h>
+
+/**
+ A model for sharing a generic template element to Messenger. This allows specifying title, subtitle,
+ image, default action, and any other buttons. Title is required. See
+ https://developers.facebook.com/docs/messenger-platform/send-messages/template/generic for more details.
+ */
+@interface FBSDKShareMessengerGenericTemplateElement : NSObject <FBSDKCopying, NSSecureCoding>
+
+/**
+ The rendered title for the shared generic template element. Required.
+ */
+@property (nonatomic, copy) NSString *title;
+
+/**
+ The rendered subtitle for the shared generic template element. Optional.
+ */
+@property (nonatomic, copy) NSString *subtitle;
+
+/**
+ The image url that will be downloaded and rendered at the top of the generic template. Optional.
+ */
+@property (nonatomic, copy) NSURL *imageURL;
+
+/**
+ The default action executed when this shared generic tempate is tapped. Title for this button is ignored. Optional.
+ */
+@property (nonatomic, copy) id<FBSDKShareMessengerActionButton> defaultAction;
+
+/**
+ This specifies what action button to show below the generic template. Optional.
+ */
+@property (nonatomic, copy) id<FBSDKShareMessengerActionButton> button;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareMessengerMediaTemplateContent.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareMessengerMediaTemplateContent.h
new file mode 100755
index 0000000..142702d
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareMessengerMediaTemplateContent.h
@@ -0,0 +1,69 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import <FBSDKShareKit/FBSDKShareMessengerActionButton.h>
+#import <FBSDKShareKit/FBSDKSharingContent.h>
+
+typedef NS_ENUM(NSUInteger, FBSDKShareMessengerMediaTemplateMediaType) {
+  FBSDKShareMessengerMediaTemplateMediaTypeImage = 0,
+  FBSDKShareMessengerMediaTemplateMediaTypeVideo
+};
+
+/**
+ A model for sharing media template content. See
+ https://developers.facebook.com/docs/messenger-platform/send-messages/template/media for details.
+ */
+@interface FBSDKShareMessengerMediaTemplateContent : NSObject <FBSDKSharingContent>
+
+/**
+ The media type (image or video) for this content. This must match the media type specified in the
+ attachmentID/mediaURL to avoid an error when sharing. Defaults to image.
+ */
+@property (nonatomic, assign) FBSDKShareMessengerMediaTemplateMediaType mediaType;
+
+/**
+ The attachmentID of the item to share. Optional, but either attachmentID or mediaURL must be specified.
+ */
+@property (nonatomic, copy, readonly) NSString *attachmentID;
+
+/**
+ The Facebook url for this piece of media. External urls will not work; this must be a Facebook url.
+ See https://developers.facebook.com/docs/messenger-platform/send-messages/template/media for details.
+ Optional, but either attachmentID or mediaURL must be specified.
+ */
+@property (nonatomic, copy, readonly) NSURL *mediaURL;
+
+/**
+ This specifies what action button to show below the media. Optional.
+ */
+@property (nonatomic, copy) id<FBSDKShareMessengerActionButton> button;
+
+/**
+ Custom initializer to create media template share with attachment id.
+ */
+- (instancetype)initWithAttachmentID:(NSString *)attachmentID;
+
+/**
+ Custom initializer to create media template share with media url. This must be a Facebook url
+ and cannot be an external url.
+ */
+- (instancetype)initWithMediaURL:(NSURL *)mediaURL;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareMessengerOpenGraphMusicTemplateContent.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareMessengerOpenGraphMusicTemplateContent.h
new file mode 100755
index 0000000..f68f51c
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareMessengerOpenGraphMusicTemplateContent.h
@@ -0,0 +1,41 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import <FBSDKShareKit/FBSDKShareMessengerActionButton.h>
+#import <FBSDKShareKit/FBSDKSharingContent.h>
+
+/**
+ This share content allows sharing a bubble that plays songs with Open Graph music.
+ See https://developers.facebook.com/docs/messenger-platform/send-messages/template/open-graph
+ for details. Passing <FBSDKSharingContent> property pageID is required for this type of share.
+ */
+@interface FBSDKShareMessengerOpenGraphMusicTemplateContent : NSObject <FBSDKSharingContent>
+
+/**
+ This must be an Open Graph music url. Required.
+ */
+@property (nonatomic, copy) NSURL *url;
+
+/**
+ This specifies what action button to show below the open graph music bubble. Optional.
+ */
+@property (nonatomic, copy) id<FBSDKShareMessengerActionButton> button;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareMessengerURLActionButton.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareMessengerURLActionButton.h
new file mode 100755
index 0000000..79feadd
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareMessengerURLActionButton.h
@@ -0,0 +1,62 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import <FBSDKShareKit/FBSDKShareMessengerActionButton.h>
+
+typedef NS_ENUM(NSUInteger, FBSDKShareMessengerURLActionButtonWebviewHeightRatio) {
+  FBSDKShareMessengerURLActionButtonWebviewHeightRatioFull = 0,
+  FBSDKShareMessengerURLActionButtonWebviewHeightRatioTall,
+  FBSDKShareMessengerURLActionButtonWebviewHeightRatioCompact
+};
+
+/**
+ A model for a Messenger share URL action button.
+ */
+@interface FBSDKShareMessengerURLActionButton : NSObject <FBSDKShareMessengerActionButton>
+
+/**
+ The url that this button should open when tapped. Required.
+ */
+@property (nonatomic, copy) NSURL *url;
+
+/**
+ This controls the display height of the webview when shown in the Messenger app. Defaults to Full.
+ */
+@property (nonatomic, assign) FBSDKShareMessengerURLActionButtonWebviewHeightRatio webviewHeightRatio;
+
+/**
+ This must be true if the url is a Messenger Extensions url. Defaults to NO.
+ */
+@property (nonatomic, assign) BOOL isMessengerExtensionURL;
+
+/**
+ This is a fallback url for a Messenger Extensions enabled button. It is used on clients that do not support
+ Messenger Extensions. If this is not defined, the url will be used as a fallback. Optional, but ignored
+ unless isMessengerExtensionURL == YES.
+ */
+@property (nonatomic, copy) NSURL *fallbackURL;
+
+/**
+ This controls whether we want to hide the share button in the webview or not. It is useful to hide the share
+ button when the webview is user-specific and contains sensitive information. Defaults to NO.
+ */
+@property (nonatomic, assign) BOOL shouldHideWebviewShareButton;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareOpenGraphAction.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareOpenGraphAction.h
new file mode 100755
index 0000000..83e8883
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareOpenGraphAction.h
@@ -0,0 +1,70 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import <FBSDKCoreKit/FBSDKCopying.h>
+
+#import <FBSDKShareKit/FBSDKShareOpenGraphObject.h>
+#import <FBSDKShareKit/FBSDKShareOpenGraphValueContainer.h>
+
+/**
+  An Open Graph Action for sharing.
+
+ The property keys MUST have namespaces specified on them, such as `og:image`.
+ */
+@interface FBSDKShareOpenGraphAction : FBSDKShareOpenGraphValueContainer <FBSDKCopying, NSSecureCoding>
+
+/**
+  Convenience method to build a new action and set the object for the specified key.
+ @param actionType The action type of the receiver
+ @param object The Open Graph object represented by this action
+ @param key The key for the object
+ */
++ (instancetype)actionWithType:(NSString *)actionType object:(FBSDKShareOpenGraphObject *)object key:(NSString *)key;
+
+/**
+  Convenience method to build a new action and set the object for the specified key.
+ @param actionType The action type of the receiver
+ @param objectID The ID of an existing Open Graph object
+ @param key The key for the object
+ */
++ (instancetype)actionWithType:(NSString *)actionType objectID:(NSString *)objectID key:(NSString *)key;
+
+/**
+  Convenience method to build a new action and set the object for the specified key.
+ @param actionType The action type of the receiver
+ @param objectURL The URL to a page that defines the Open Graph object with meta tags
+ @param key The key for the object
+ */
++ (instancetype)actionWithType:(NSString *)actionType objectURL:(NSURL *)objectURL key:(NSString *)key;
+
+/**
+  Gets the action type.
+ @return The action type
+ */
+@property (nonatomic, copy) NSString *actionType;
+
+/**
+  Compares the receiver to another Open Graph Action.
+ @param action The other action
+ @return YES if the receiver's values are equal to the other action's values; otherwise NO
+ */
+- (BOOL)isEqualToShareOpenGraphAction:(FBSDKShareOpenGraphAction *)action;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareOpenGraphContent.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareOpenGraphContent.h
new file mode 100755
index 0000000..faed0ba
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareOpenGraphContent.h
@@ -0,0 +1,50 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import <FBSDKShareKit/FBSDKShareOpenGraphAction.h>
+#import <FBSDKShareKit/FBSDKSharingContent.h>
+
+/**
+  A model for Open Graph content to be shared.
+ */
+@interface FBSDKShareOpenGraphContent : NSObject <FBSDKSharingContent>
+
+/**
+  Open Graph Action to be shared.
+ @return The action
+ */
+@property (nonatomic, copy) FBSDKShareOpenGraphAction *action;
+
+/**
+  Property name that points to the primary Open Graph Object in the action.
+
+ The value that this action points to will be use for rendering the preview for the share.
+ @return The property name for the Open Graph Object in the action
+ */
+@property (nonatomic, copy) NSString *previewPropertyName;
+
+/**
+  Compares the receiver to another Open Graph content.
+ @param content The other content
+ @return YES if the receiver's values are equal to the other content's values; otherwise NO
+ */
+- (BOOL)isEqualToShareOpenGraphContent:(FBSDKShareOpenGraphContent *)content;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareOpenGraphObject.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareOpenGraphObject.h
new file mode 100755
index 0000000..ef34e28
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareOpenGraphObject.h
@@ -0,0 +1,59 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import <FBSDKCoreKit/FBSDKCopying.h>
+
+#import <FBSDKShareKit/FBSDKShareOpenGraphValueContainer.h>
+
+/**
+  An Open Graph Object for sharing.
+
+ The property keys MUST have namespaces specified on them, such as `og:image`,
+  and `og:type` is required.
+
+ See https://developers.facebook.com/docs/sharing/opengraph/object-properties for other properties.
+
+ You can specify nested namespaces inline to define complex properties. For example, the following
+ code will generate a fitness.course object with a location:
+
+ FBSDKShareOpenGraphObject *course = [FBSDKShareOpenGraphObject objectWithProperties:
+  @{
+    @"og:type": @"fitness.course",
+    @"og:title": @"Sample course",
+    @"fitness:metrics:location:latitude": @"41.40338",
+    @"fitness:metrics:location:longitude": @"2.17403",
+ }];
+ */
+@interface FBSDKShareOpenGraphObject : FBSDKShareOpenGraphValueContainer <FBSDKCopying, NSSecureCoding>
+
+/**
+  Convenience method to build a new action and set the object for the specified key.
+ @param properties Properties for the Open Graph object, which will be parsed into the proper models
+ */
++ (instancetype)objectWithProperties:(NSDictionary *)properties;
+
+/**
+  Compares the receiver to another Open Graph Object.
+ @param object The other object
+ @return YES if the receiver's values are equal to the other object's values; otherwise NO
+ */
+- (BOOL)isEqualToShareOpenGraphObject:(FBSDKShareOpenGraphObject *)object;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareOpenGraphValueContainer.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareOpenGraphValueContainer.h
new file mode 100755
index 0000000..59b1699
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareOpenGraphValueContainer.h
@@ -0,0 +1,162 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+@class FBSDKShareOpenGraphObject;
+@class FBSDKSharePhoto;
+
+/**
+  Protocol defining operations on open graph actions and objects.
+
+ The property keys MUST have namespaces specified on them, such as `og:image`.
+ */
+@protocol FBSDKShareOpenGraphValueContaining <NSObject, NSSecureCoding>
+
+/**
+  Gets an NSArray out of the receiver.
+ @param key The key for the value
+ @return The NSArray value or nil
+ */
+- (NSArray *)arrayForKey:(NSString *)key;
+
+/**
+  Applies a given block object to the entries of the receiver.
+ @param block A block object to operate on entries in the receiver
+ */
+- (void)enumerateKeysAndObjectsUsingBlock:(void (^)(NSString *key, id object, BOOL *stop))block;
+
+/**
+  Returns an enumerator object that lets you access each key in the receiver.
+ @return An enumerator object that lets you access each key in the receiver
+ */
+- (NSEnumerator *)keyEnumerator;
+
+/**
+  Gets an NSNumber out of the receiver.
+ @param key The key for the value
+ @return The NSNumber value or nil
+ */
+- (NSNumber *)numberForKey:(NSString *)key;
+
+/**
+  Returns an enumerator object that lets you access each value in the receiver.
+ @return An enumerator object that lets you access each value in the receiver
+ */
+- (NSEnumerator *)objectEnumerator;
+
+/**
+  Gets an FBSDKShareOpenGraphObject out of the receiver.
+ @param key The key for the value
+ @return The FBSDKShareOpenGraphObject value or nil
+ */
+- (FBSDKShareOpenGraphObject *)objectForKey:(NSString *)key;
+
+/**
+  Enables subscript access to the values in the receiver.
+ @param key The key for the value
+ @return The value
+ */
+- (id)objectForKeyedSubscript:(NSString *)key;
+
+/**
+  Parses properties out of a dictionary into the receiver.
+ @param properties The properties to parse.
+ */
+- (void)parseProperties:(NSDictionary *)properties;
+
+/**
+  Gets an FBSDKSharePhoto out of the receiver.
+ @param key The key for the value
+ @return The FBSDKSharePhoto value or nil
+ */
+- (FBSDKSharePhoto *)photoForKey:(NSString *)key;
+
+/**
+  Removes a value from the receiver for the specified key.
+ @param key The key for the value
+ */
+- (void)removeObjectForKey:(NSString *)key;
+
+/**
+  Sets an NSArray on the receiver.
+
+ This method will throw if the array contains any values that is not an NSNumber, NSString, NSURL,
+ FBSDKSharePhoto or FBSDKShareOpenGraphObject.
+ @param array The NSArray value
+ @param key The key for the value
+ */
+- (void)setArray:(NSArray *)array forKey:(NSString *)key;
+
+/**
+  Sets an NSNumber on the receiver.
+ @param number The NSNumber value
+ @param key The key for the value
+ */
+- (void)setNumber:(NSNumber *)number forKey:(NSString *)key;
+
+/**
+  Sets an FBSDKShareOpenGraphObject on the receiver.
+ @param object The FBSDKShareOpenGraphObject value
+ @param key The key for the value
+ */
+- (void)setObject:(FBSDKShareOpenGraphObject *)object forKey:(NSString *)key;
+
+/**
+  Sets an FBSDKSharePhoto on the receiver.
+ @param photo The FBSDKSharePhoto value
+ @param key The key for the value
+ */
+- (void)setPhoto:(FBSDKSharePhoto *)photo forKey:(NSString *)key;
+
+/**
+  Sets an NSString on the receiver.
+ @param string The NSString value
+ @param key The key for the value
+ */
+- (void)setString:(NSString *)string forKey:(NSString *)key;
+
+/**
+  Sets an NSURL on the receiver.
+ @param URL The NSURL value
+ @param key The key for the value
+ */
+- (void)setURL:(NSURL *)URL forKey:(NSString *)key;
+
+/**
+  Gets an NSString out of the receiver.
+ @param key The key for the value
+ @return The NSString value or nil
+ */
+- (NSString *)stringForKey:(NSString *)key;
+
+/**
+  Gets an NSURL out of the receiver.
+ @param key The key for the value
+ @return The NSURL value or nil
+ */
+- (NSURL *)URLForKey:(NSString *)key;
+
+@end
+
+/**
+  A base class to container Open Graph values.
+ */
+@interface FBSDKShareOpenGraphValueContainer : NSObject <FBSDKShareOpenGraphValueContaining>
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKSharePhoto.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKSharePhoto.h
new file mode 100755
index 0000000..7f8c2e4
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKSharePhoto.h
@@ -0,0 +1,98 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <UIKit/UIKit.h>
+
+#import <FBSDKCoreKit/FBSDKCopying.h>
+#import <FBSDKShareKit/FBSDKSharingValidation.h>
+
+@class PHAsset;
+
+/**
+  A photo for sharing.
+ */
+@interface FBSDKSharePhoto : NSObject <FBSDKCopying, FBSDKSharingValidation, NSSecureCoding>
+
+/**
+  Convenience method to build a new photo object with an image.
+ @param image If the photo is resident in memory, this method supplies the data
+ @param userGenerated Specifies whether the photo represented by the receiver was generated by the user or by the
+ application
+ */
++ (instancetype)photoWithImage:(UIImage *)image userGenerated:(BOOL)userGenerated;
+
+/**
+  Convenience method to build a new photo object with an imageURL.
+ @param imageURL The URL to the photo
+ @param userGenerated Specifies whether the photo represented by the receiver was generated by the user or by the
+ application
+
+ This method should only be used when adding photo content to open graph stories.
+  For example, if you're trying to share a photo from the web by itself, download the image and use
+  `photoWithImage:userGenerated:` instead.
+ */
++ (instancetype)photoWithImageURL:(NSURL *)imageURL userGenerated:(BOOL)userGenerated;
+
+/**
+ Convenience method to build a new photo object with a PHAsset.
+ - Parameter photoAsset: The PHAsset that represents the photo in the Photos library.
+ - Parameter userGenerated: Specifies whether the photo represented by the receiver was generated by the user or by the
+ application
+ */
++ (instancetype)photoWithPhotoAsset:(PHAsset *)photoAsset userGenerated:(BOOL)userGenerated;
+
+/**
+  If the photo is resident in memory, this method supplies the data.
+ @return UIImage representation of the photo
+ */
+@property (nonatomic, strong) UIImage *image;
+
+/**
+  The URL to the photo.
+ @return URL that points to a network location or the location of the photo on disk
+ */
+@property (nonatomic, copy) NSURL *imageURL;
+
+/**
+ The representation of the photo in the Photos library.
+ - Returns: PHAsset that represents the photo in the Photos library.
+ */
+@property (nonatomic, copy) PHAsset *photoAsset;
+
+/**
+  Specifies whether the photo represented by the receiver was generated by the user or by the application.
+ @return YES if the photo is user-generated, otherwise NO
+ */
+@property (nonatomic, assign, getter=isUserGenerated) BOOL userGenerated;
+
+/**
+  Compares the receiver to another photo.
+ @param photo The other photo
+ @return YES if the receiver's values are equal to the other photo's values; otherwise NO
+ */
+- (BOOL)isEqualToSharePhoto:(FBSDKSharePhoto *)photo;
+
+/**
+  The user generated caption for the photo. Note that the 'caption' must come from
+ * the user, as pre-filled content is forbidden by the Platform Policies (2.3).
+ @return the Photo's caption if exists else returns null.
+ */
+@property (nonatomic, copy) NSString *caption;
+
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKSharePhotoContent.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKSharePhotoContent.h
new file mode 100755
index 0000000..427c315
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKSharePhotoContent.h
@@ -0,0 +1,41 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import <FBSDKShareKit/FBSDKSharingContent.h>
+
+/**
+  A model for photo content to be shared.
+ */
+@interface FBSDKSharePhotoContent : NSObject <FBSDKSharingContent>
+
+/**
+  Photos to be shared.
+ @return Array of the photos (FBSDKSharePhoto)
+ */
+@property (nonatomic, copy) NSArray *photos;
+
+/**
+  Compares the receiver to another photo content.
+ @param content The other content
+ @return YES if the receiver's values are equal to the other content's values; otherwise NO
+ */
+- (BOOL)isEqualToSharePhotoContent:(FBSDKSharePhotoContent *)content;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareVideo.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareVideo.h
new file mode 100755
index 0000000..09c13d1
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareVideo.h
@@ -0,0 +1,109 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Photos/Photos.h>
+#import <UIKit/UIKit.h>
+
+#import <FBSDKCoreKit/FBSDKCopying.h>
+#import <FBSDKShareKit/FBSDKSharingValidation.h>
+
+@class FBSDKSharePhoto;
+@class PHAsset;
+
+/**
+  A video for sharing.
+ */
+@interface FBSDKShareVideo : NSObject <FBSDKCopying, FBSDKSharingValidation, NSSecureCoding>
+
+/**
+ Convenience method to build a new video object from raw data.
+ - Parameter data: The NSData object that holds the raw video data.
+ */
++ (instancetype)videoWithData:(NSData *)data;
+
+/**
+ Convenience method to build a new video object with NSData and a previewPhoto.
+ - Parameter data: The NSData object that holds the raw video data.
+ - Parameter previewPhoto: The photo that represents the video.
+ */
++ (instancetype)videoWithData:(NSData *)data previewPhoto:(FBSDKSharePhoto *)previewPhoto;
+
+/**
+ Convenience method to build a new video object with a PHAsset.
+ @param videoAsset The PHAsset that represents the video in the Photos library.
+ */
++ (instancetype)videoWithVideoAsset:(PHAsset *)videoAsset;
+
+/**
+ Convenience method to build a new video object with a PHAsset and a previewPhoto.
+ @param videoAsset The PHAsset that represents the video in the Photos library.
+ @param previewPhoto The photo that represents the video.
+ */
++ (instancetype)videoWithVideoAsset:(PHAsset *)videoAsset previewPhoto:(FBSDKSharePhoto *)previewPhoto;
+
+/**
+  Convenience method to build a new video object with a videoURL.
+ @param videoURL The URL to the video.
+ */
++ (instancetype)videoWithVideoURL:(NSURL *)videoURL;
+
+/**
+  Convenience method to build a new video object with a videoURL and a previewPhoto.
+ @param videoURL The URL to the video.
+ @param previewPhoto The photo that represents the video.
+ */
++ (instancetype)videoWithVideoURL:(NSURL *)videoURL previewPhoto:(FBSDKSharePhoto *)previewPhoto;
+
+/**
+ The raw video data.
+ - Returns: The video data.
+ */
+@property (nonatomic, strong) NSData *data;
+
+/**
+ The representation of the video in the Photos library.
+ @return PHAsset that represents the video in the Photos library.
+ */
+@property (nonatomic, copy) PHAsset *videoAsset;
+
+/**
+  The file URL to the video.
+ @return URL that points to the location of the video on disk
+ */
+@property (nonatomic, copy) NSURL *videoURL;
+
+/**
+  The photo that represents the video.
+ @return The photo
+ */
+@property (nonatomic, copy) FBSDKSharePhoto *previewPhoto;
+
+/**
+  Compares the receiver to another video.
+ @param video The other video
+ @return YES if the receiver's values are equal to the other video's values; otherwise NO
+ */
+- (BOOL)isEqualToShareVideo:(FBSDKShareVideo *)video;
+
+@end
+
+@interface PHAsset (FBSDKShareVideo)
+
+@property (nonatomic, copy, readonly) NSURL *videoURL;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareVideoContent.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareVideoContent.h
new file mode 100755
index 0000000..0f4fd37
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKShareVideoContent.h
@@ -0,0 +1,50 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import <FBSDKShareKit/FBSDKSharePhoto.h>
+#import <FBSDKShareKit/FBSDKShareVideo.h>
+#import <FBSDKShareKit/FBSDKSharingContent.h>
+
+/**
+  A model for video content to be shared.
+ */
+@interface FBSDKShareVideoContent : NSObject <FBSDKSharingContent>
+
+/**
+  The photo that represents the video.
+ @return The photo
+ */
+@property (nonatomic, copy) FBSDKSharePhoto *previewPhoto
+DEPRECATED_MSG_ATTRIBUTE("Use `video.previewPhoto`");
+
+/**
+  The video to be shared.
+ @return The video
+ */
+@property (nonatomic, copy) FBSDKShareVideo *video;
+
+/**
+  Compares the receiver to another video content.
+ @param content The other content
+ @return YES if the receiver's values are equal to the other content's values; otherwise NO
+ */
+- (BOOL)isEqualToShareVideoContent:(FBSDKShareVideoContent *)content;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKSharing.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKSharing.h
new file mode 100755
index 0000000..9e4ff6b
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKSharing.h
@@ -0,0 +1,117 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import <FBSDKShareKit/FBSDKSharingContent.h>
+
+@protocol FBSDKSharingDelegate;
+
+/**
+  The common interface for components that initiate sharing.
+
+ @see FBSDKShareDialog
+
+ @see FBSDKMessageDialog
+
+ @see FBSDKShareAPI
+ */
+@protocol FBSDKSharing <NSObject>
+
+/**
+  The receiver's delegate or nil if it doesn't have a delegate.
+ */
+@property (nonatomic, weak) id<FBSDKSharingDelegate> delegate;
+
+/**
+  The content to be shared.
+ */
+@property (nonatomic, copy) id<FBSDKSharingContent> shareContent;
+
+/**
+  A Boolean value that indicates whether the receiver should fail if it finds an error with the share content.
+
+ If NO, the sharer will still be displayed without the data that was mis-configured.  For example, an
+ invalid placeID specified on the shareContent would produce a data error.
+ */
+@property (nonatomic, assign) BOOL shouldFailOnDataError;
+
+/**
+  Validates the content on the receiver.
+ @param errorRef If an error occurs, upon return contains an NSError object that describes the problem.
+ @return YES if the content is valid, otherwise NO.
+ */
+- (BOOL)validateWithError:(NSError **)errorRef;
+
+@end
+
+/**
+  The common interface for dialogs that initiate sharing.
+ */
+@protocol FBSDKSharingDialog <FBSDKSharing>
+
+/**
+  A Boolean value that indicates whether the receiver can initiate a share.
+
+ May return NO if the appropriate Facebook app is not installed and is required or an access token is
+ required but not available.  This method does not validate the content on the receiver, so this can be checked before
+ building up the content.
+
+ @see [FBSDKSharing validateWithError:]
+ @return YES if the receiver can share, otherwise NO.
+ */
+@property (nonatomic, readonly) BOOL canShow;
+
+/**
+  Shows the dialog.
+ @return YES if the receiver was able to begin sharing, otherwise NO.
+ */
+- (BOOL)show;
+
+@end
+
+/**
+  A delegate for FBSDKSharing.
+
+ The delegate is notified with the results of the sharer as long as the application has permissions to
+ receive the information.  For example, if the person is not signed into the containing app, the sharer may not be able
+ to distinguish between completion of a share and cancellation.
+ */
+@protocol FBSDKSharingDelegate <NSObject>
+
+/**
+  Sent to the delegate when the share completes without error or cancellation.
+ @param sharer The FBSDKSharing that completed.
+ @param results The results from the sharer.  This may be nil or empty.
+ */
+- (void)sharer:(id<FBSDKSharing>)sharer didCompleteWithResults:(NSDictionary *)results;
+
+/**
+  Sent to the delegate when the sharer encounters an error.
+ @param sharer The FBSDKSharing that completed.
+ @param error The error.
+ */
+- (void)sharer:(id<FBSDKSharing>)sharer didFailWithError:(NSError *)error;
+
+/**
+  Sent to the delegate when the sharer is cancelled.
+ @param sharer The FBSDKSharing that completed.
+ */
+- (void)sharerDidCancel:(id<FBSDKSharing>)sharer;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKSharingButton.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKSharingButton.h
new file mode 100755
index 0000000..13cfc1f
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKSharingButton.h
@@ -0,0 +1,37 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import <FBSDKShareKit/FBSDKSharingContent.h>
+
+/**
+  The common interface for sharing buttons.
+
+ @see FBSDKSendButton
+
+ @see FBSDKShareButton
+ */
+@protocol FBSDKSharingButton <NSObject>
+
+/**
+  The content to be shared.
+ */
+@property (nonatomic, copy) id<FBSDKSharingContent> shareContent;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKSharingContent.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKSharingContent.h
new file mode 100755
index 0000000..3c97c5e
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKSharingContent.h
@@ -0,0 +1,98 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+#import <FBSDKCoreKit/FBSDKCopying.h>
+#import <FBSDKShareKit/FBSDKSharingValidation.h>
+
+@class FBSDKHashtag;
+
+/**
+  A base interface for content to be shared.
+ */
+@protocol FBSDKSharingContent <FBSDKCopying, FBSDKSharingValidation, NSSecureCoding>
+
+/**
+  URL for the content being shared.
+
+ This URL will be checked for all link meta tags for linking in platform specific ways.  See documentation
+ for App Links (https://developers.facebook.com/docs/applinks/)
+ @return URL representation of the content link
+ */
+@property (nonatomic, copy) NSURL *contentURL;
+
+/**
+  Hashtag for the content being shared.
+ @return The hashtag for the content being shared.
+ */
+@property (nonatomic, copy) FBSDKHashtag *hashtag;
+
+/**
+  List of IDs for taggable people to tag with this content.
+  See documentation for Taggable Friends
+ (https://developers.facebook.com/docs/graph-api/reference/user/taggable_friends)
+ @return Array of IDs for people to tag (NSString)
+ */
+@property (nonatomic, copy) NSArray *peopleIDs;
+
+/**
+  The ID for a place to tag with this content.
+ @return The ID for the place to tag
+ */
+@property (nonatomic, copy) NSString *placeID;
+
+/**
+  A value to be added to the referrer URL when a person follows a link from this shared content on feed.
+ @return The ref for the content.
+ */
+@property (nonatomic, copy) NSString *ref;
+
+/**
+ For shares into Messenger, this pageID will be used to map the app to page and attach attribution to the share.
+ @return The ID of the Facebok page this share is associated with.
+ */
+@property (nonatomic, copy) NSString *pageID;
+
+/**
+ A unique identifier for a share involving this content, useful for tracking purposes.
+ @return A unique string identifying this share data.
+ */
+@property (nonatomic, copy, readonly) NSString *shareUUID;
+
+/**
+ Adds content to an existing dictionary as key/value pairs and returns the
+ updated dictionary
+ @param existingParameters An immutable dictionary of existing values
+ @param bridgeOptions The options for bridging
+ @return A new dictionary with the modified contents
+ */
+- (NSDictionary<NSString *, id> *)addParameters:(NSDictionary<NSString *, id> *)existingParameters
+                                  bridgeOptions:(FBSDKShareBridgeOptions)bridgeOptions;
+
+/**
+ Adds content to a dictionary as key/value pairs.
+ @param parameters A mutable dictionary that may be appended with key/value pairs of content.
+ @param bridgeOptions The options for bridging
+ */
+
+- (void)addToParameters:(NSMutableDictionary<NSString *, id> *)parameters
+          bridgeOptions:(FBSDKShareBridgeOptions)bridgeOptions
+DEPRECATED_MSG_ATTRIBUTE("`addToParameters` is deprecated. Use `addParameters`");
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKSharingScheme.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKSharingScheme.h
new file mode 100755
index 0000000..1d81771
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKSharingScheme.h
@@ -0,0 +1,33 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import "FBSDKShareDialogMode.h"
+
+/**
+ A base interface for indicating a custom URL scheme
+ */
+@protocol FBSDKSharingScheme
+
+/**
+ Asks the receiver to provide a custom scheme.
+ - Parameter mode: The intended dialog mode for sharing the content.
+ - Returns: A custom URL scheme to use for the specified mode, or nil.
+ */
+- (nullable NSString *)schemeForMode:(FBSDKShareDialogMode)mode;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKSharingValidation.h b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKSharingValidation.h
new file mode 100755
index 0000000..b16454a
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Headers/FBSDKSharingValidation.h
@@ -0,0 +1,46 @@
+// Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+//
+// You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+// copy, modify, and distribute this software in source code or binary form for use
+// in connection with the web services and APIs provided by Facebook.
+//
+// As with any software that integrates with the Facebook platform, your use of
+// this software is subject to the Facebook Developer Principles and Policies
+// [http://developers.facebook.com/policy/]. This copyright notice shall be
+// included in all copies or substantial portions of the software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+#import <Foundation/Foundation.h>
+
+/**
+ Flags to indicate support for newer bridge options beyond the initial 20130410 implementation.
+ */
+typedef NS_OPTIONS(NSUInteger, FBSDKShareBridgeOptions)
+{
+  FBSDKShareBridgeOptionsDefault       = 0,
+  FBSDKShareBridgeOptionsPhotoAsset    = 1 << 0,
+  FBSDKShareBridgeOptionsPhotoImageURL = 1 << 1, // if set, a web-based URL is required; asset, image, and imageURL.isFileURL not allowed
+  FBSDKShareBridgeOptionsVideoAsset    = 1 << 2,
+  FBSDKShareBridgeOptionsVideoData     = 1 << 3,
+  FBSDKShareBridgeOptionsWebHashtag    = 1 << 4, // if set, pass the hashtag as a string value, not an array of one string
+};
+
+/**
+ A base interface for validation of content and media.
+ */
+@protocol FBSDKSharingValidation
+
+/**
+ Asks the receiver to validate that its content or media values are valid.
+ - Parameter errorRef: Optional, will receive an FBSDKShareError if the values are not valid.
+ - Returns: YES if the receiver's values are valid; otherwise NO
+ */
+- (BOOL)validateWithOptions:(FBSDKShareBridgeOptions)bridgeOptions error:(NSError *__autoreleasing *)errorRef;
+
+@end
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Info.plist b/ios/Frameworks/FBSDKShareKit.framework/Info.plist
new file mode 100755
index 0000000..69faed1
Binary files /dev/null and b/ios/Frameworks/FBSDKShareKit.framework/Info.plist differ
diff --git a/ios/Frameworks/FBSDKShareKit.framework/Modules/module.modulemap b/ios/Frameworks/FBSDKShareKit.framework/Modules/module.modulemap
new file mode 100755
index 0000000..faa8711
--- /dev/null
+++ b/ios/Frameworks/FBSDKShareKit.framework/Modules/module.modulemap
@@ -0,0 +1,6 @@
+framework module FBSDKShareKit {
+    umbrella header "FBSDKShareKit.h"
+
+    export *
+    module * { export * }
+}
diff --git a/ios/RNPlaceholder.swift b/ios/RNPlaceholder.swift
new file mode 100644
index 0000000..e69de29
diff --git a/ios/Wefiq-Bridging-Header.h b/ios/Wefiq-Bridging-Header.h
new file mode 100644
index 0000000..1b2cb5d
--- /dev/null
+++ b/ios/Wefiq-Bridging-Header.h
@@ -0,0 +1,4 @@
+//
+//  Use this file to import your target's public headers that you would like to expose to Swift.
+//
+
diff --git a/ios/Wefiq.xcodeproj/project.pbxproj b/ios/Wefiq.xcodeproj/project.pbxproj
index 85d3ebd..966c685 100644
--- a/ios/Wefiq.xcodeproj/project.pbxproj
+++ b/ios/Wefiq.xcodeproj/project.pbxproj
@@ -5,7 +5,6 @@
 	};
 	objectVersion = 46;
 	objects = {
-
 /* Begin PBXBuildFile section */
 		00C302E51ABCBA2D00DB3ED1 /* libRCTActionSheet.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302AC1ABCB8CE00DB3ED1 /* libRCTActionSheet.a */; };
 		00C302E71ABCBA2D00DB3ED1 /* libRCTGeolocation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302BA1ABCB90400DB3ED1 /* libRCTGeolocation.a */; };
@@ -13,7 +12,7 @@
 		00C302E91ABCBA2D00DB3ED1 /* libRCTNetwork.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302DC1ABCB9D200DB3ED1 /* libRCTNetwork.a */; };
 		00C302EA1ABCBA2D00DB3ED1 /* libRCTVibration.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302E41ABCB9EE00DB3ED1 /* libRCTVibration.a */; };
 		00E356F31AD99517003FC87E /* WefiqTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* WefiqTests.m */; };
-		0292F6D38D5B46FDB2949264 /* FontAwesome.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 615837568EE94B78954354E4 /* FontAwesome.ttf */; };
+		0E255D78E87B43FF9358378F /* RNPlaceholder.swift in Sources */ = {isa = PBXBuildFile; fileRef = BA140DEEC62542DEA536DBB7 /* RNPlaceholder.swift */; };
 		11D1A2F320CAFA9E000508D9 /* libRCTAnimation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */; };
 		133E29F31AD74F7200F7D852 /* libRCTLinking.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 78C398B91ACF4ADC00677621 /* libRCTLinking.a */; };
 		133E3ABFEDEA4E119122B4D9 /* libRNCNetInfo.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 6AEC32BDABD44568960B9A21 /* libRNCNetInfo.a */; };
@@ -45,26 +44,21 @@
 		416E78A7AB1143029A8D7119 /* FontAwesome.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 186FCC6E54644AD5A307619A /* FontAwesome.ttf */; };
 		4214EA62BFAB451FAAFC994F /* FontAwesome5_Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 78B40DFF866A456DB616BE30 /* FontAwesome5_Regular.ttf */; };
 		468D882E45EA4918B9307B5E /* libRNVectorIcons.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 391232F1DAE44FD0BBBDF312 /* libRNVectorIcons.a */; };
-		47BBDD4B2885479CBDCAEAD0 /* MaterialCommunityIcons.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4C5925A3D483470A821A2BC6 /* MaterialCommunityIcons.ttf */; };
 		4BFD1A32A17D433E87E83624 /* Roboto.ttf in Resources */ = {isa = PBXBuildFile; fileRef = CB3A6EDB9F6A4E9EB6EE845E /* Roboto.ttf */; };
 		4F1BAB64BCC34A89AA538F19 /* libRNSound.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 5353E159F21E4CD89E66DB5B /* libRNSound.a */; };
 		53E1835877B5413ABBEB528B /* libRNDeviceInfo.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 43F19A75716748B0A645628C /* libRNDeviceInfo.a */; };
 		550866C6BDAD4047B81CE170 /* libRNDeviceInfo-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 505325CB51C24CE896A8505C /* libRNDeviceInfo-tvOS.a */; };
 		577F4C48C7884814AB3EA1F1 /* AntDesign.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 8E953FD9918641079A1711E0 /* AntDesign.ttf */; };
-		65D321045B0B42AC884450EE /* Zocial.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 85D5E9C138DA401485DDAAC8 /* Zocial.ttf */; };
 		7BC88C64D3384A38A444E1EB /* libRNGestureHandler.a in Frameworks */ = {isa = PBXBuildFile; fileRef = E0E6BD5BC6584D6E9F1A2280 /* libRNGestureHandler.a */; };
 		7DBA1C56E77D427A9D22A9BE /* MaterialCommunityIcons.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 43F12B9213464DF680CF72BA /* MaterialCommunityIcons.ttf */; };
 		7ED5C5CB70014150B0249478 /* libRNSpringScrollView.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 709320764D464F26A0E4E90D /* libRNSpringScrollView.a */; };
 		832341BD1AAA6AB300B99B32 /* libRCTText.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 832341B51AAA6A8300B99B32 /* libRCTText.a */; };
 		88FAED6E40EA469DAA055384 /* libRNVectorIcons-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = A8F947BB442949F0A085B527 /* libRNVectorIcons-tvOS.a */; };
-		8B38601AD7B04D7DAD1C4B71 /* Foundation.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 83122C6F00084FA794C74FAB /* Foundation.ttf */; };
-		9498FFBAC11047B883BEE7EC /* Feather.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 8365B3A2FCD64E3F8D797393 /* Feather.ttf */; };
 		97FBB1285F024E70A1DD6CFA /* libReactNativeConfig-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = A1681FF811BA44BFA6FFA92A /* libReactNativeConfig-tvOS.a */; };
 		9D48B3C273224F29919079B6 /* libReactNativeConfig.a in Frameworks */ = {isa = PBXBuildFile; fileRef = AB6FD0A8279F4E6DA6FE97A0 /* libReactNativeConfig.a */; };
 		A1286020E296465F8871AE57 /* SimpleLineIcons.ttf in Resources */ = {isa = PBXBuildFile; fileRef = BDE9FBF85A834213A48BDFD7 /* SimpleLineIcons.ttf */; };
 		A8854367FD6447388BECD11D /* Entypo.ttf in Resources */ = {isa = PBXBuildFile; fileRef = F0AD7F493A9949A1B7EA0732 /* Entypo.ttf */; };
 		AA9020890A014E09AAE06400 /* EvilIcons.ttf in Resources */ = {isa = PBXBuildFile; fileRef = B7A188CF061547F7A3C7A853 /* EvilIcons.ttf */; };
-		ADB7F0CE9ED44EFB89EF0C39 /* Entypo.ttf in Resources */ = {isa = PBXBuildFile; fileRef = D3F1FF5B6C7E4A13B841F8B8 /* Entypo.ttf */; };
 		ADBDB9381DFEBF1600ED6528 /* libRCTBlob.a in Frameworks */ = {isa = PBXBuildFile; fileRef = ADBDB9271DFEBF0700ED6528 /* libRCTBlob.a */; };
 		AF4FC458D5194AEA825C78C3 /* Feather.ttf in Resources */ = {isa = PBXBuildFile; fileRef = D0D713C794CB42DAB13775E7 /* Feather.ttf */; };
 		BF01CB4722C5FAD90041FBA6 /* Fontello.ttf in Resources */ = {isa = PBXBuildFile; fileRef = BF01CB4622C5FAD90041FBA6 /* Fontello.ttf */; };
@@ -82,6 +76,9 @@
 		BF48E46D221AFDD00082F202 /* SourceSansPro-Black.ttf in Resources */ = {isa = PBXBuildFile; fileRef = BF48E463221AFDCF0082F202 /* SourceSansPro-Black.ttf */; };
 		BF5250A122817DE100B6C257 /* Bolts.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = BF5250A022817DE100B6C257 /* Bolts.framework */; };
 		BF5250A322817DF300B6C257 /* FBSDKLoginKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = BF5250A222817DF300B6C257 /* FBSDKLoginKit.framework */; };
+		BF7F0608230065CB0079831F /* RNPlaceholder.swift in Sources */ = {isa = PBXBuildFile; fileRef = BA140DEEC62542DEA536DBB7 /* RNPlaceholder.swift */; };
+		BF7F0609230065CB0079831F /* RNPlaceholder.swift in Sources */ = {isa = PBXBuildFile; fileRef = BA140DEEC62542DEA536DBB7 /* RNPlaceholder.swift */; };
+		BF7F060A230065CB0079831F /* RNPlaceholder.swift in Sources */ = {isa = PBXBuildFile; fileRef = BA140DEEC62542DEA536DBB7 /* RNPlaceholder.swift */; };
 		BF8DCE9E21C3DD560049DB90 /* SourceSansPro-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = BF8DCE9D21C3DD560049DB90 /* SourceSansPro-Regular.ttf */; };
 		BFB7124022779186004FAD31 /* libRNGoogleSignin.a in Frameworks */ = {isa = PBXBuildFile; fileRef = BFB7123B2277914A004FAD31 /* libRNGoogleSignin.a */; };
 		BFB71246227792A9004FAD31 /* GoogleSignIn.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = BFB71245227792A9004FAD31 /* GoogleSignIn.framework */; };
@@ -92,21 +89,16 @@
 		C078E689434E4E5DB3E7726D /* FontAwesome5_Solid.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 55CDC755FF90449F969A854E /* FontAwesome5_Solid.ttf */; };
 		C0CBAB6899EC4153AC6ED870 /* rubicon-icon-font.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 356FD21A5F3342E7A1FABCF9 /* rubicon-icon-font.ttf */; };
 		C17C95149BA04BAD9DC43299 /* libRCTVideo.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 784C727B7B674D37A2B77AC9 /* libRCTVideo.a */; };
-		C1AA25FFBE924EC58CCA80DB /* SimpleLineIcons.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 14542B4B493043AB8068EED1 /* SimpleLineIcons.ttf */; };
 		C3172935B0694E4EB64FF713 /* Zocial.ttf in Resources */ = {isa = PBXBuildFile; fileRef = F0309A4080564839A46684DC /* Zocial.ttf */; };
 		C7D39EDE41164C0EB6AA782B /* Octicons.ttf in Resources */ = {isa = PBXBuildFile; fileRef = AD62712381C048358DE9082F /* Octicons.ttf */; };
 		C93F8B560C794240809F81F0 /* libRNCNetInfo-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 471B50E795D04E5BBE2FC8F5 /* libRNCNetInfo-tvOS.a */; };
 		CDF84BBE755040028B3E7FA1 /* libFastImage.a in Frameworks */ = {isa = PBXBuildFile; fileRef = F220AE57374840FE8108BF3E /* libFastImage.a */; };
-		D3217B12D99E449A8E70DCD7 /* EvilIcons.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 5FFCD327D5804B85955928C7 /* EvilIcons.ttf */; };
 		D4987CF1B7B444CFBA88994C /* libRCTFBSDK.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 66E7E703B5BB421A85E3C765 /* libRCTFBSDK.a */; };
-		DE05D038DCE7499F9E5CA116 /* Ionicons.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 8996859AC30146BA925E5F0C /* Ionicons.ttf */; };
 		E218601CD47F4337B8B81A41 /* Roboto_medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = B96073649D234907AC521CB2 /* Roboto_medium.ttf */; };
 		E239602A86364C39B73D83F4 /* MaterialIcons.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 0892FF41FA9A4F0187646BEE /* MaterialIcons.ttf */; };
 		E6D623338C584ADC87DFB9C0 /* Foundation.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 2B232648BFB94CDEA3C1F702 /* Foundation.ttf */; };
 		F0BD8583103A4302AE96CCB3 /* libRNCookieManagerIOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = DDA54280F0864B53818054BC /* libRNCookieManagerIOS.a */; };
-		F0EC2AA3B8E74D8AA0FEDB75 /* MaterialIcons.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 13BF522BABEF43BC9F97AD93 /* MaterialIcons.ttf */; };
 		FA85CF9727274F6A86070A7D /* Ionicons.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 5FEE9FBEA59F472EAE9F4B76 /* Ionicons.ttf */; };
-		FBCEE3D884C74AF1AD172E34 /* Octicons.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 89BDA14552D9486BA3D084AC /* Octicons.ttf */; };
 /* End PBXBuildFile section */

 /* Begin PBXContainerItemProxy section */
@@ -566,8 +558,6 @@
 		13B07FB51A68108700A75B9A /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Images.xcassets; path = Wefiq/Images.xcassets; sourceTree = "<group>"; };
 		13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = Wefiq/Info.plist; sourceTree = "<group>"; };
 		13B07FB71A68108700A75B9A /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = Wefiq/main.m; sourceTree = "<group>"; };
-		13BF522BABEF43BC9F97AD93 /* MaterialIcons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = MaterialIcons.ttf; path = "../node_modules/native-base/Fonts/MaterialIcons.ttf"; sourceTree = "<group>"; };
-		14542B4B493043AB8068EED1 /* SimpleLineIcons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = SimpleLineIcons.ttf; path = "../node_modules/native-base/Fonts/SimpleLineIcons.ttf"; sourceTree = "<group>"; };
 		146833FF1AC3E56700842450 /* React.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = React.xcodeproj; path = "../node_modules/react-native/React/React.xcodeproj"; sourceTree = "<group>"; };
 		186FCC6E54644AD5A307619A /* FontAwesome.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = FontAwesome.ttf; path = "../node_modules/react-native-vector-icons/Fonts/FontAwesome.ttf"; sourceTree = "<group>"; };
 		26D282C2050848B2B329A270 /* RNGestureHandler.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNGestureHandler.xcodeproj; path = "../node_modules/react-native-gesture-handler/ios/RNGestureHandler.xcodeproj"; sourceTree = "<group>"; };
@@ -582,7 +572,6 @@
 		43F19A75716748B0A645628C /* libRNDeviceInfo.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNDeviceInfo.a; sourceTree = "<group>"; };
 		471B50E795D04E5BBE2FC8F5 /* libRNCNetInfo-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNCNetInfo-tvOS.a"; sourceTree = "<group>"; };
 		4A945A31982F456A8CBE2F44 /* FastImage.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = FastImage.xcodeproj; path = "../node_modules/react-native-fast-image/ios/FastImage.xcodeproj"; sourceTree = "<group>"; };
-		4C5925A3D483470A821A2BC6 /* MaterialCommunityIcons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = MaterialCommunityIcons.ttf; path = "../node_modules/native-base/Fonts/MaterialCommunityIcons.ttf"; sourceTree = "<group>"; };
 		505325CB51C24CE896A8505C /* libRNDeviceInfo-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNDeviceInfo-tvOS.a"; sourceTree = "<group>"; };
 		51CC3E5F2A8B420BAD80EDDE /* libBVLinearGradient.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libBVLinearGradient.a; sourceTree = "<group>"; };
 		534F0BA53FCE47429BAA1064 /* libRNCWebView.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNCWebView.a; sourceTree = "<group>"; };
@@ -591,8 +580,6 @@
 		55CDC755FF90449F969A854E /* FontAwesome5_Solid.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = FontAwesome5_Solid.ttf; path = "../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Solid.ttf"; sourceTree = "<group>"; };
 		5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTAnimation.xcodeproj; path = "../node_modules/react-native/Libraries/NativeAnimation/RCTAnimation.xcodeproj"; sourceTree = "<group>"; };
 		5FEE9FBEA59F472EAE9F4B76 /* Ionicons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Ionicons.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Ionicons.ttf"; sourceTree = "<group>"; };
-		5FFCD327D5804B85955928C7 /* EvilIcons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = EvilIcons.ttf; path = "../node_modules/native-base/Fonts/EvilIcons.ttf"; sourceTree = "<group>"; };
-		615837568EE94B78954354E4 /* FontAwesome.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = FontAwesome.ttf; path = "../node_modules/native-base/Fonts/FontAwesome.ttf"; sourceTree = "<group>"; };
 		6171904B9F404772BFF3A31D /* ReactNativeConfig.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = ReactNativeConfig.xcodeproj; path = "../node_modules/react-native-config/ios/ReactNativeConfig.xcodeproj"; sourceTree = "<group>"; };
 		66E7E703B5BB421A85E3C765 /* libRCTFBSDK.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRCTFBSDK.a; sourceTree = "<group>"; };
 		6AEC32BDABD44568960B9A21 /* libRNCNetInfo.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNCNetInfo.a; sourceTree = "<group>"; };
@@ -601,12 +588,7 @@
 		78B40DFF866A456DB616BE30 /* FontAwesome5_Regular.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = FontAwesome5_Regular.ttf; path = "../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Regular.ttf"; sourceTree = "<group>"; };
 		78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTLinking.xcodeproj; path = "../node_modules/react-native/Libraries/LinkingIOS/RCTLinking.xcodeproj"; sourceTree = "<group>"; };
 		7C97AF80D98D4B2395E208BF /* SplashScreen.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = SplashScreen.xcodeproj; path = "../node_modules/react-native-splash-screen/ios/SplashScreen.xcodeproj"; sourceTree = "<group>"; };
-		83122C6F00084FA794C74FAB /* Foundation.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Foundation.ttf; path = "../node_modules/native-base/Fonts/Foundation.ttf"; sourceTree = "<group>"; };
 		832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTText.xcodeproj; path = "../node_modules/react-native/Libraries/Text/RCTText.xcodeproj"; sourceTree = "<group>"; };
-		8365B3A2FCD64E3F8D797393 /* Feather.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Feather.ttf; path = "../node_modules/native-base/Fonts/Feather.ttf"; sourceTree = "<group>"; };
-		85D5E9C138DA401485DDAAC8 /* Zocial.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Zocial.ttf; path = "../node_modules/native-base/Fonts/Zocial.ttf"; sourceTree = "<group>"; };
-		8996859AC30146BA925E5F0C /* Ionicons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Ionicons.ttf; path = "../node_modules/native-base/Fonts/Ionicons.ttf"; sourceTree = "<group>"; };
-		89BDA14552D9486BA3D084AC /* Octicons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Octicons.ttf; path = "../node_modules/native-base/Fonts/Octicons.ttf"; sourceTree = "<group>"; };
 		8E953FD9918641079A1711E0 /* AntDesign.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = AntDesign.ttf; path = "../node_modules/react-native-vector-icons/Fonts/AntDesign.ttf"; sourceTree = "<group>"; };
 		9DD657284A984871B972C83B /* RNVectorIcons.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNVectorIcons.xcodeproj; path = "../node_modules/react-native-vector-icons/RNVectorIcons.xcodeproj"; sourceTree = "<group>"; };
 		A1681FF811BA44BFA6FFA92A /* libReactNativeConfig-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libReactNativeConfig-tvOS.a"; sourceTree = "<group>"; };
@@ -617,6 +599,7 @@
 		ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTBlob.xcodeproj; path = "../node_modules/react-native/Libraries/Blob/RCTBlob.xcodeproj"; sourceTree = "<group>"; };
 		B7A188CF061547F7A3C7A853 /* EvilIcons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = EvilIcons.ttf; path = "../node_modules/react-native-vector-icons/Fonts/EvilIcons.ttf"; sourceTree = "<group>"; };
 		B96073649D234907AC521CB2 /* Roboto_medium.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Roboto_medium.ttf; path = "../node_modules/native-base/Fonts/Roboto_medium.ttf"; sourceTree = "<group>"; };
+		BA140DEEC62542DEA536DBB7 /* RNPlaceholder.swift */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 4; includeInIndex = 0; lastKnownFileType = sourcecode.swift; path = RNPlaceholder.swift; sourceTree = "<group>"; };
 		BB5E104DA7164EE2A6C6EC21 /* RNCWebView.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNCWebView.xcodeproj; path = "../node_modules/react-native-webview/ios/RNCWebView.xcodeproj"; sourceTree = "<group>"; };
 		BDE9FBF85A834213A48BDFD7 /* SimpleLineIcons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = SimpleLineIcons.ttf; path = "../node_modules/react-native-vector-icons/Fonts/SimpleLineIcons.ttf"; sourceTree = "<group>"; };
 		BF01CB4622C5FAD90041FBA6 /* Fontello.ttf */ = {isa = PBXFileReference; lastKnownFileType = file; name = Fontello.ttf; path = "../../../../Downloads/fontello-d51f598e/font/Fontello.ttf"; sourceTree = "<group>"; };
@@ -648,7 +631,6 @@
 		CFD09D82D1524BAF8CB46BC8 /* RCTVideo.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RCTVideo.xcodeproj; path = "../node_modules/react-native-video/ios/RCTVideo.xcodeproj"; sourceTree = "<group>"; };
 		D0CC68C46F0F479183267D1E /* libSplashScreen.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libSplashScreen.a; sourceTree = "<group>"; };
 		D0D713C794CB42DAB13775E7 /* Feather.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Feather.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Feather.ttf"; sourceTree = "<group>"; };
-		D3F1FF5B6C7E4A13B841F8B8 /* Entypo.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Entypo.ttf; path = "../node_modules/native-base/Fonts/Entypo.ttf"; sourceTree = "<group>"; };
 		DDA54280F0864B53818054BC /* libRNCookieManagerIOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNCookieManagerIOS.a; sourceTree = "<group>"; };
 		E0E6BD5BC6584D6E9F1A2280 /* libRNGestureHandler.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNGestureHandler.a; sourceTree = "<group>"; };
 		F0309A4080564839A46684DC /* Zocial.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Zocial.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Zocial.ttf"; sourceTree = "<group>"; };
@@ -917,20 +899,9 @@
 				AD62712381C048358DE9082F /* Octicons.ttf */,
 				BDE9FBF85A834213A48BDFD7 /* SimpleLineIcons.ttf */,
 				F0309A4080564839A46684DC /* Zocial.ttf */,
-				D3F1FF5B6C7E4A13B841F8B8 /* Entypo.ttf */,
-				5FFCD327D5804B85955928C7 /* EvilIcons.ttf */,
-				8365B3A2FCD64E3F8D797393 /* Feather.ttf */,
-				615837568EE94B78954354E4 /* FontAwesome.ttf */,
-				83122C6F00084FA794C74FAB /* Foundation.ttf */,
-				8996859AC30146BA925E5F0C /* Ionicons.ttf */,
-				4C5925A3D483470A821A2BC6 /* MaterialCommunityIcons.ttf */,
-				13BF522BABEF43BC9F97AD93 /* MaterialIcons.ttf */,
-				89BDA14552D9486BA3D084AC /* Octicons.ttf */,
 				B96073649D234907AC521CB2 /* Roboto_medium.ttf */,
 				CB3A6EDB9F6A4E9EB6EE845E /* Roboto.ttf */,
 				356FD21A5F3342E7A1FABCF9 /* rubicon-icon-font.ttf */,
-				14542B4B493043AB8068EED1 /* SimpleLineIcons.ttf */,
-				85D5E9C138DA401485DDAAC8 /* Zocial.ttf */,
 			);
 			name = Resources;
 			sourceTree = "<group>";
@@ -1069,6 +1040,8 @@
 				6AEC32BDABD44568960B9A21 /* libRNCNetInfo.a */,
 				471B50E795D04E5BBE2FC8F5 /* libRNCNetInfo-tvOS.a */,
 				709320764D464F26A0E4E90D /* libRNSpringScrollView.a */,
+				BA140DEEC62542DEA536DBB7 /* RNPlaceholder.swift */,
+				C73165B3D5FF434788BC0A6E /* libRNTrackPlayer.a */,
 			);
 			name = "Recovered References";
 			sourceTree = "<group>";
@@ -1282,6 +1255,7 @@
 			developmentRegion = English;
 			hasScannedForEncodings = 0;
 			knownRegions = (
+				English,
 				en,
 				Base,
 			);
@@ -1877,22 +1851,11 @@
 				BF8DCE9E21C3DD560049DB90 /* SourceSansPro-Regular.ttf in Resources */,
 				C3172935B0694E4EB64FF713 /* Zocial.ttf in Resources */,
 				BFD67D4722048B1C000FAB7E /* SourceSansPro-Bold.ttf in Resources */,
-				ADB7F0CE9ED44EFB89EF0C39 /* Entypo.ttf in Resources */,
 				BF48E464221AFDD00082F202 /* SourceSansPro-BoldItalic.ttf in Resources */,
-				D3217B12D99E449A8E70DCD7 /* EvilIcons.ttf in Resources */,
-				9498FFBAC11047B883BEE7EC /* Feather.ttf in Resources */,
-				0292F6D38D5B46FDB2949264 /* FontAwesome.ttf in Resources */,
-				8B38601AD7B04D7DAD1C4B71 /* Foundation.ttf in Resources */,
-				DE05D038DCE7499F9E5CA116 /* Ionicons.ttf in Resources */,
-				47BBDD4B2885479CBDCAEAD0 /* MaterialCommunityIcons.ttf in Resources */,
 				BF48E468221AFDD00082F202 /* SourceSansPro-Italic.ttf in Resources */,
-				F0EC2AA3B8E74D8AA0FEDB75 /* MaterialIcons.ttf in Resources */,
-				FBCEE3D884C74AF1AD172E34 /* Octicons.ttf in Resources */,
 				E218601CD47F4337B8B81A41 /* Roboto_medium.ttf in Resources */,
 				4BFD1A32A17D433E87E83624 /* Roboto.ttf in Resources */,
 				C0CBAB6899EC4153AC6ED870 /* rubicon-icon-font.ttf in Resources */,
-				C1AA25FFBE924EC58CCA80DB /* SimpleLineIcons.ttf in Resources */,
-				65D321045B0B42AC884450EE /* Zocial.ttf in Resources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -1950,6 +1913,7 @@
 			buildActionMask = 2147483647;
 			files = (
 				00E356F31AD99517003FC87E /* WefiqTests.m in Sources */,
+				BF7F0608230065CB0079831F /* RNPlaceholder.swift in Sources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -1959,6 +1923,7 @@
 			files = (
 				13B07FBC1A68108700A75B9A /* AppDelegate.m in Sources */,
 				13B07FC11A68108700A75B9A /* main.m in Sources */,
+				0E255D78E87B43FF9358378F /* RNPlaceholder.swift in Sources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -1968,6 +1933,7 @@
 			files = (
 				2D02E4BF1E0B4AB3006451C7 /* main.m in Sources */,
 				2D02E4BC1E0B4A80006451C7 /* AppDelegate.m in Sources */,
+				BF7F0609230065CB0079831F /* RNPlaceholder.swift in Sources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -1976,6 +1942,7 @@
 			buildActionMask = 2147483647;
 			files = (
 				2DCD954D1E0B4F2C00145EB5 /* WefiqTests.m in Sources */,
+				BF7F060A230065CB0079831F /* RNPlaceholder.swift in Sources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -2037,7 +2004,6 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -2045,6 +2011,7 @@
 				);
 				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
 				PRODUCT_NAME = "$(TARGET_NAME)";
+				SWIFT_VERSION = 4.0;
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/Wefiq.app/Wefiq";
 			};
 			name = Debug;
@@ -2076,7 +2043,6 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -2084,6 +2050,7 @@
 				);
 				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
 				PRODUCT_NAME = "$(TARGET_NAME)";
+				SWIFT_VERSION = 4.0;
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/Wefiq.app/Wefiq";
 			};
 			name = Release;
@@ -2098,7 +2065,7 @@
 				DEVELOPMENT_TEAM = J94459DY3F;
 				ENABLE_BITCODE = NO;
 				FRAMEWORK_SEARCH_PATHS = (
-					"~/Documents/FacebookSDK",
+					"$(HOME)/Documents/FacebookSDK",
 					"$(PROJECT_DIR)",
 				);
 				HEADER_SEARCH_PATHS = (
@@ -2129,6 +2096,7 @@
 				PRODUCT_NAME = Wefiq;
 				PROVISIONING_PROFILE = "f7d16192-af71-46bb-9878-2fe9bd3e8e24";
 				PROVISIONING_PROFILE_SPECIFIER = WefiqTest;
+				SWIFT_VERSION = 4.0;
 				VERSIONING_SYSTEM = "apple-generic";
 			};
 			name = Debug;
@@ -2142,7 +2110,7 @@
 				DEVELOPMENT_TEAM = J94459DY3F;
 				ENABLE_BITCODE = NO;
 				FRAMEWORK_SEARCH_PATHS = (
-					"~/Documents/FacebookSDK",
+					"$(HOME)/Documents/FacebookSDK",
 					"$(PROJECT_DIR)",
 				);
 				HEADER_SEARCH_PATHS = (
@@ -2173,6 +2141,7 @@
 				PRODUCT_NAME = Wefiq;
 				PROVISIONING_PROFILE = "f7d16192-af71-46bb-9878-2fe9bd3e8e24";
 				PROVISIONING_PROFILE_SPECIFIER = WefiqTest;
+				SWIFT_VERSION = 4.0;
 				VERSIONING_SYSTEM = "apple-generic";
 			};
 			name = Release;
@@ -2210,7 +2179,6 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -2219,6 +2187,7 @@
 				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.Wefiq-tvOS";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
+				SWIFT_VERSION = 4.0;
 				TARGETED_DEVICE_FAMILY = 3;
 				TVOS_DEPLOYMENT_TARGET = 9.2;
 			};
@@ -2257,7 +2226,6 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -2266,6 +2234,7 @@
 				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.Wefiq-tvOS";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
+				SWIFT_VERSION = 4.0;
 				TARGETED_DEVICE_FAMILY = 3;
 				TVOS_DEPLOYMENT_TARGET = 9.2;
 			};
@@ -2303,7 +2272,6 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -2312,6 +2280,7 @@
 				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.Wefiq-tvOSTests";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
+				SWIFT_VERSION = 4.0;
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/Wefiq-tvOS.app/Wefiq-tvOS";
 				TVOS_DEPLOYMENT_TARGET = 10.1;
 			};
@@ -2349,7 +2318,6 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -2358,6 +2326,7 @@
 				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.Wefiq-tvOSTests";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
+				SWIFT_VERSION = 4.0;
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/Wefiq-tvOS.app/Wefiq-tvOS";
 				TVOS_DEPLOYMENT_TARGET = 10.1;
 			};
@@ -2413,6 +2382,7 @@
 				MTL_ENABLE_DEBUG_INFO = YES;
 				ONLY_ACTIVE_ARCH = YES;
 				SDKROOT = iphoneos;
+				SWIFT_VERSION = 4.0;
 			};
 			name = Debug;
 		};
@@ -2458,6 +2428,7 @@
 				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				MTL_ENABLE_DEBUG_INFO = NO;
 				SDKROOT = iphoneos;
+				SWIFT_VERSION = 4.0;
 				VALIDATE_PRODUCT = YES;
 			};
 			name = Release;
diff --git a/ios/Wefiq/Info.plist b/ios/Wefiq/Info.plist
index 07e38a4..13d8f24 100644
--- a/ios/Wefiq/Info.plist
+++ b/ios/Wefiq/Info.plist
@@ -40,7 +40,7 @@
 			<key>CFBundleTypeRole</key>
 			<string>Editor</string>
 			<key>CFBundleURLName</key>
-			<string></string>
+			<string/>
 			<key>CFBundleURLSchemes</key>
 			<array>
 				<string>com.googleusercontent.apps.210123810570-4gfr851uc3du0h0ch3iqc8j9l6fcljn6</string>
@@ -76,7 +76,7 @@
 		</dict>
 	</dict>
 	<key>NSLocationWhenInUseUsageDescription</key>
-	<string></string>
+	<string/>
 	<key>UIAppFonts</key>
 	<array>
 		<string>AntDesign.ttf</string>
diff --git a/package-lock.json b/package-lock.json
index c864ce7..13d0ead 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -14104,6 +14104,11 @@
         "prop-types": "15.6.2"
       }
     },
+    "react-native-track-player": {
+      "version": "1.1.8",
+      "resolved": "https://registry.npmjs.org/react-native-track-player/-/react-native-track-player-1.1.8.tgz",
+      "integrity": "sha512-pAGMgEHtnrnHQYI53qxeZ/dNbw5CNiCTMjj6L09CQrWvZ6cJwjOQeyz4/6aOs7HfUDJc3HLntzKwTHYT7ges0g=="
+    },
     "react-native-vector-icons": {
       "version": "6.1.0",
       "resolved": "https://registry.npmjs.org/react-native-vector-icons/-/react-native-vector-icons-6.1.0.tgz",
diff --git a/package.json b/package.json
index 0d96ec2..fa3eff3 100644
--- a/package.json
+++ b/package.json
@@ -21,6 +21,7 @@
     "lint": "standard --verbose | snazzy",
     "lintdiff": "git diff --name-only --cached --relative | grep '\\.js$' | xargs standard | snazzy",
     "fixcode": "standard --fix",
+    "postinstall": "patch-package",
     "git-hook": "npm run lint -s && npm run test -s",
     "android-dev": "adb reverse tcp:8081 tcp:8081",
     "react-devtools": "react-devtools",
@@ -42,6 +43,8 @@
     "json-api-normalizer": "^0.4.14",
     "lodash": "^4.17.11",
     "native-base": "git+https://github.com/CESARBR/NativeBase.git#b81cc6d43d88388e112600153b4ad0b39e9beba2",
+    "patch-package": "^6.1.2",
+    "postinstall-postinstall": "^2.0.0",
     "prop-types": "^15.6.1",
     "pusher-js": "^4.4.0",
     "qs": "^6.6.0",
@@ -69,8 +72,10 @@
     "react-native-sound": "^0.10.9",
     "react-native-splash-screen": "^3.1.1",
     "react-native-spring-scrollview": "^2.0.22",
+    "react-native-swift": "^1.2.2",
     "react-native-swipe-gestures": "^1.0.3",
     "react-native-tab-view": "0.0.74",
+    "react-native-track-player": "1.1.8",
     "react-native-vector-icons": "6.1.0",
     "react-native-video": "^4.4.4",
     "react-native-webview": "^5.7.0",
@@ -154,5 +159,6 @@
       "FormData",
       "React$Element"
     ]
-  }
-}
+  },
+  "isSwift": true
+}
\ No newline at end of file
diff --git a/yarn.lock b/yarn.lock
index c186de8..31092b8 100644
--- a/yarn.lock
+++ b/yarn.lock
@@ -671,6 +671,14 @@
   resolved "https://registry.yarnpkg.com/@emotion/unitless/-/unitless-0.7.3.tgz#6310a047f12d21a1036fb031317219892440416f"
   integrity sha512-4zAPlpDEh2VwXswwr/t8xGNDGg8RQiPxtxZ3qQEXyQsBV39ptTdESCjuBvGze1nLMVrxmTIKmnO/nAV8Tqjjzg==

+"@raydeck/xcode@^2.2.0":
+  version "2.2.1"
+  resolved "https://registry.yarnpkg.com/@raydeck/xcode/-/xcode-2.2.1.tgz#fd94c3b1908ad15ad9a82fde298b87bf08238289"
+  integrity sha512-464tAzmcJLL0A4W5vKP3t3s6mRLnwGWE/cHo+I+0mHJiSzojSwHIZK7i3shFJioyQFHPxYndzRzTu2VOjdpBcQ==
+  dependencies:
+    simple-plist "^0.2.1"
+    uuid "3.0.1"
+
 "@react-native-community/netinfo@^3.2.1":
   version "3.2.1"
   resolved "https://registry.yarnpkg.com/@react-native-community/netinfo/-/netinfo-3.2.1.tgz#cd073b81a4b978f7f55f1a960a0b56c462813e02"
@@ -940,6 +948,11 @@
   resolved "https://registry.yarnpkg.com/@types/node/-/node-10.12.15.tgz#20e85651b62fd86656e57c9c9bc771ab1570bc59"
   integrity sha512-9kROxduaN98QghwwHmxXO2Xz3MaWf+I1sLVAA6KJDF5xix+IyXVhds0MAfdNwtcpSrzhaTsNB0/jnL86fgUhqA==

+"@yarnpkg/lockfile@^1.1.0":
+  version "1.1.0"
+  resolved "https://registry.yarnpkg.com/@yarnpkg/lockfile/-/lockfile-1.1.0.tgz#e77a97fbd345b76d83245edcd17d393b1b41fb31"
+  integrity sha512-GpSwvyXOcOOlV70vbnzjj4fW5xW/FdUF6nQEt1ENy7m4ZCczi1+/buVUPAqmGfqznsORNFzUMjctTIp8a9tuCQ==
+
 abab@^2.0.0:
   version "2.0.0"
   resolved "https://registry.yarnpkg.com/abab/-/abab-2.0.0.tgz#aba0ab4c5eee2d4c79d3487d85450fb2376ebb0f"
@@ -1079,6 +1092,13 @@ alphanum-sort@^1.0.1, alphanum-sort@^1.0.2:
   resolved "https://registry.yarnpkg.com/alphanum-sort/-/alphanum-sort-1.0.2.tgz#97a1119649b211ad33691d9f9f486a8ec9fbe0a3"
   integrity sha1-l6ERlkmyEa0zaR2fn0hqjsn74KM=

+ansi-align@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/ansi-align/-/ansi-align-2.0.0.tgz#c36aeccba563b89ceb556f3690f0b1d9e3547f7f"
+  integrity sha1-w2rsy6VjuJzrVW82kPCx2eNUf38=
+  dependencies:
+    string-width "^2.0.0"
+
 ansi-colors@^1.0.1:
   version "1.1.0"
   resolved "https://registry.yarnpkg.com/ansi-colors/-/ansi-colors-1.1.0.tgz#6374b4dd5d4718ff3ce27a671a3b1cad077132a9"
@@ -2545,6 +2565,19 @@ bowser@^1.0.0, bowser@^1.7.3:
   resolved "https://registry.yarnpkg.com/bowser/-/bowser-1.9.4.tgz#890c58a2813a9d3243704334fa81b96a5c150c9a"
   integrity sha512-9IdMmj2KjigRq6oWhmwv1W36pDuA4STQZ8q6YO9um+x07xgYNCD3Oou+WP/3L1HNz7iqythGet3/p4wvc8AAwQ==

+boxen@^1.2.1:
+  version "1.3.0"
+  resolved "https://registry.yarnpkg.com/boxen/-/boxen-1.3.0.tgz#55c6c39a8ba58d9c61ad22cd877532deb665a20b"
+  integrity sha512-TNPjfTr432qx7yOjQyaXm3dSR0MH9vXp7eT1BFSl/C51g+EFnOR9hTg1IreahGBmDNCehscshe45f+C1TBZbLw==
+  dependencies:
+    ansi-align "^2.0.0"
+    camelcase "^4.0.0"
+    chalk "^2.0.1"
+    cli-boxes "^1.0.0"
+    string-width "^2.0.0"
+    term-size "^1.2.0"
+    widest-line "^2.0.0"
+
 bplist-creator@0.0.7:
   version "0.0.7"
   resolved "https://registry.yarnpkg.com/bplist-creator/-/bplist-creator-0.0.7.tgz#37df1536092824b87c42f957b01344117372ae45"
@@ -2816,7 +2849,7 @@ camelcase@^1.0.2:
   resolved "https://registry.yarnpkg.com/camelcase/-/camelcase-1.2.1.tgz#9bb5304d2e0b56698b2c758b08a3eaa9daa58a39"
   integrity sha1-m7UwTS4LVmmLLHWLCKPqqdqlijk=

-camelcase@^4.1.0:
+camelcase@^4.0.0, camelcase@^4.1.0:
   version "4.1.0"
   resolved "https://registry.yarnpkg.com/camelcase/-/camelcase-4.1.0.tgz#d545635be1e33c542649c69173e5de6acfae34dd"
   integrity sha1-1UVjW+HjPFQmScaRc+Xeas+uNN0=
@@ -2848,6 +2881,11 @@ capture-exit@^1.2.0:
   dependencies:
     rsvp "^3.3.3"

+capture-stack-trace@^1.0.0:
+  version "1.0.1"
+  resolved "https://registry.yarnpkg.com/capture-stack-trace/-/capture-stack-trace-1.0.1.tgz#a6c0bbe1f38f3aa0b92238ecb6ff42c344d4135d"
+  integrity sha512-mYQLZnx5Qt1JgB1WEiMCf2647plpGeQ2NMR/5L0HNZzGQo4fuSPnK+wjfPnKZV0aiJDgzmWqqkV/g7JD+DW0qw==
+
 case-sensitive-paths-webpack-plugin@^2.1.2:
   version "2.1.2"
   resolved "https://registry.yarnpkg.com/case-sensitive-paths-webpack-plugin/-/case-sensitive-paths-webpack-plugin-2.1.2.tgz#c899b52175763689224571dad778742e133f0192"
@@ -2897,6 +2935,15 @@ chalk@^2.0.0, chalk@^2.0.1, chalk@^2.3.0, chalk@^2.3.2, chalk@^2.4.1:
     escape-string-regexp "^1.0.5"
     supports-color "^5.3.0"

+chalk@^2.4.2:
+  version "2.4.2"
+  resolved "https://registry.yarnpkg.com/chalk/-/chalk-2.4.2.tgz#cd42541677a54333cf541a49108c1432b44c9424"
+  integrity sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==
+  dependencies:
+    ansi-styles "^3.2.1"
+    escape-string-regexp "^1.0.5"
+    supports-color "^5.3.0"
+
 chardet@^0.4.0:
   version "0.4.2"
   resolved "https://registry.yarnpkg.com/chardet/-/chardet-0.4.2.tgz#b5473b33dc97c424e5d98dc87d55d4d8a29c8bf2"
@@ -2944,6 +2991,11 @@ ci-info@^1.5.0:
   resolved "https://registry.yarnpkg.com/ci-info/-/ci-info-1.6.0.tgz#2ca20dbb9ceb32d4524a683303313f0304b1e497"
   integrity sha512-vsGdkwSCDpWmP80ncATX7iea5DWQemg1UgCW5J8tqjU3lYw4FBYuj89J0CTVomA7BEfvSZd84GmHko+MxFQU2A==

+ci-info@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/ci-info/-/ci-info-2.0.0.tgz#67a9e964be31a51e15e5010d58e6f12834002f46"
+  integrity sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ==
+
 cipher-base@^1.0.0, cipher-base@^1.0.1, cipher-base@^1.0.3:
   version "1.0.4"
   resolved "https://registry.yarnpkg.com/cipher-base/-/cipher-base-1.0.4.tgz#8760e4ecc272f4c363532f926d874aae2c1397de"
@@ -2991,6 +3043,11 @@ clean-css@4.2.x:
   dependencies:
     source-map "~0.6.0"

+cli-boxes@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/cli-boxes/-/cli-boxes-1.0.0.tgz#4fa917c3e59c94a004cd61f8ee509da651687143"
+  integrity sha1-T6kXw+WclKAEzWH47lCdplFocUM=
+
 cli-cursor@^1.0.1:
   version "1.0.2"
   resolved "https://registry.yarnpkg.com/cli-cursor/-/cli-cursor-1.0.2.tgz#64da3f7d56a54412e59794bd62dc35295e8f2987"
@@ -3212,6 +3269,18 @@ concat-stream@1.6.2, concat-stream@^1.5.0, concat-stream@^1.5.2, concat-stream@^
     readable-stream "^2.2.2"
     typedarray "^0.0.6"

+configstore@^3.0.0:
+  version "3.1.2"
+  resolved "https://registry.yarnpkg.com/configstore/-/configstore-3.1.2.tgz#c6f25defaeef26df12dd33414b001fe81a543f8f"
+  integrity sha512-vtv5HtGjcYUgFrXc6Kx747B83MRRVS5R1VTEQoXvuP+kMI+if6uywV0nDGoiydJRy4yk7h9od5Og0kxx4zUXmw==
+  dependencies:
+    dot-prop "^4.1.0"
+    graceful-fs "^4.1.2"
+    make-dir "^1.0.0"
+    unique-string "^1.0.0"
+    write-file-atomic "^2.0.0"
+    xdg-basedir "^3.0.0"
+
 connect@^3.6.5:
   version "3.6.6"
   resolved "https://registry.yarnpkg.com/connect/-/connect-3.6.6.tgz#09eff6c55af7236e137135a72574858b6786f524"
@@ -3331,6 +3400,13 @@ create-ecdh@^4.0.0:
     bn.js "^4.1.0"
     elliptic "^6.0.0"

+create-error-class@^3.0.0:
+  version "3.0.2"
+  resolved "https://registry.yarnpkg.com/create-error-class/-/create-error-class-3.0.2.tgz#06be7abef947a3f14a30fd610671d401bca8b7b6"
+  integrity sha1-Br56vvlHo/FKMP1hBnHUAbyot7Y=
+  dependencies:
+    capture-stack-trace "^1.0.0"
+
 create-hash@^1.1.0, create-hash@^1.1.2:
   version "1.2.0"
   resolved "https://registry.yarnpkg.com/create-hash/-/create-hash-1.2.0.tgz#889078af11a63756bcfb59bd221996be3a9ef196"
@@ -3372,6 +3448,17 @@ cross-spawn@5.1.0, cross-spawn@^5.0.1, cross-spawn@^5.1.0:
     shebang-command "^1.2.0"
     which "^1.2.9"

+cross-spawn@^6.0.5:
+  version "6.0.5"
+  resolved "https://registry.yarnpkg.com/cross-spawn/-/cross-spawn-6.0.5.tgz#4a5ec7c64dfae22c3a14124dbacdee846d80cbc4"
+  integrity sha512-eTVLrBSt7fjbDygz805pMnstIs2VTBNkRm0qxZd+M7A5XDdxVRWO5MxGBXZhjY4cqLYLdtrGqRf8mBPmzwSpWQ==
+  dependencies:
+    nice-try "^1.0.4"
+    path-key "^2.0.1"
+    semver "^5.5.0"
+    shebang-command "^1.2.0"
+    which "^1.2.9"
+
 crypto-browserify@^3.11.0:
   version "3.12.0"
   resolved "https://registry.yarnpkg.com/crypto-browserify/-/crypto-browserify-3.12.0.tgz#396cf9f3137f03e4b8e532c58f698254e00f80ec"
@@ -3389,6 +3476,11 @@ crypto-browserify@^3.11.0:
     randombytes "^2.0.0"
     randomfill "^1.0.3"

+crypto-random-string@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/crypto-random-string/-/crypto-random-string-1.0.0.tgz#a230f64f568310e1498009940790ec99545bca7e"
+  integrity sha1-ojD2T1aDEOFJgAmUB5DsmVRbyn4=
+
 css-color-keywords@^1.0.0:
   version "1.0.0"
   resolved "https://registry.yarnpkg.com/css-color-keywords/-/css-color-keywords-1.0.0.tgz#fea2616dc676b2962686b3af8dbdbe180b244e05"
@@ -3862,6 +3954,13 @@ domutils@^1.5.1:
     dom-serializer "0"
     domelementtype "1"

+dot-prop@^4.1.0:
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/dot-prop/-/dot-prop-4.2.0.tgz#1f19e0c2e1aa0e32797c49799f2837ac6af69c57"
+  integrity sha512-tUMXrxlExSW6U2EXiiKGSBVdYgtV8qlHL+C10TsW4PURY/ic+eaysnSkwB4kA/mBlCyy/IKDJ+Lc3wbWeaXtuQ==
+  dependencies:
+    is-obj "^1.0.0"
+
 dotenv@^5.0.1:
   version "5.0.1"
   resolved "https://registry.yarnpkg.com/dotenv/-/dotenv-5.0.1.tgz#a5317459bd3d79ab88cff6e44057a6a3fbb1fcef"
@@ -4816,6 +4915,14 @@ find-up@^2.0.0, find-up@^2.1.0:
   dependencies:
     locate-path "^2.0.0"

+find-yarn-workspace-root@^1.2.1:
+  version "1.2.1"
+  resolved "https://registry.yarnpkg.com/find-yarn-workspace-root/-/find-yarn-workspace-root-1.2.1.tgz#40eb8e6e7c2502ddfaa2577c176f221422f860db"
+  integrity sha512-dVtfb0WuQG+8Ag2uWkbG79hOUzEsRrhBzgfn86g2sJPkzmcpGdghbNTfUKGTxymFrY/tLIodDzLoW9nOJ4FY8Q==
+  dependencies:
+    fs-extra "^4.0.3"
+    micromatch "^3.1.4"
+
 flat-cache@^1.2.1:
   version "1.3.4"
   resolved "https://registry.yarnpkg.com/flat-cache/-/flat-cache-1.3.4.tgz#2c2ef77525cc2929007dfffa1dd314aa9c9dee6f"
@@ -4919,6 +5026,24 @@ fs-extra@^2.0.0:
     graceful-fs "^4.1.2"
     jsonfile "^2.1.0"

+fs-extra@^4.0.3:
+  version "4.0.3"
+  resolved "https://registry.yarnpkg.com/fs-extra/-/fs-extra-4.0.3.tgz#0d852122e5bc5beb453fb028e9c0c9bf36340c94"
+  integrity sha512-q6rbdDd1o2mAnQreO7YADIxf/Whx4AHBiRf6d+/cVT8h44ss+lHgxf1FemcqDnQt9X3ct4McHr+JMGlYSsK7Cg==
+  dependencies:
+    graceful-fs "^4.1.2"
+    jsonfile "^4.0.0"
+    universalify "^0.1.0"
+
+fs-extra@^7.0.1:
+  version "7.0.1"
+  resolved "https://registry.yarnpkg.com/fs-extra/-/fs-extra-7.0.1.tgz#4f189c44aa123b895f722804f55ea23eadc348e9"
+  integrity sha512-YJDaCJZEnBmcbw13fvdAM9AwNOJwOzrE4pqMqBq5nFiEqXUqHwlK4B+3pUw6JNvfSPtX05xFHtYy/1ni01eGCw==
+  dependencies:
+    graceful-fs "^4.1.2"
+    jsonfile "^4.0.0"
+    universalify "^0.1.0"
+
 fs-minipass@^1.2.5:
   version "1.2.5"
   resolved "https://registry.yarnpkg.com/fs-minipass/-/fs-minipass-1.2.5.tgz#06c277218454ec288df77ada54a03b8702aacb9d"
@@ -5094,6 +5219,25 @@ glob@^7.0.0, glob@^7.0.3, glob@^7.0.5, glob@^7.1.1, glob@^7.1.2:
     once "^1.3.0"
     path-is-absolute "^1.0.0"

+glob@^7.1.3:
+  version "7.1.4"
+  resolved "https://registry.yarnpkg.com/glob/-/glob-7.1.4.tgz#aa608a2f6c577ad357e1ae5a5c26d9a8d1969255"
+  integrity sha512-hkLPepehmnKk41pUGm3sYxoFs/umurYfYJCerbXEyFIWcAzvpipAgVkBqqT9RBKMGjnq6kMuyYwha6csxbiM1A==
+  dependencies:
+    fs.realpath "^1.0.0"
+    inflight "^1.0.4"
+    inherits "2"
+    minimatch "^3.0.4"
+    once "^1.3.0"
+    path-is-absolute "^1.0.0"
+
+global-dirs@^0.1.0:
+  version "0.1.1"
+  resolved "https://registry.yarnpkg.com/global-dirs/-/global-dirs-0.1.1.tgz#b319c0dd4607f353f3be9cca4c72fc148c49f445"
+  integrity sha1-sxnA3UYH81PzvpzKTHL8FIxJ9EU=
+  dependencies:
+    ini "^1.3.4"
+
 global-modules@1.0.0, global-modules@^1.0.0:
   version "1.0.0"
   resolved "https://registry.yarnpkg.com/global-modules/-/global-modules-1.0.0.tgz#6d770f0eb523ac78164d72b5e71a8877265cc3ea"
@@ -5132,6 +5276,23 @@ globals@^9.14.0, globals@^9.18.0:
   resolved "https://registry.yarnpkg.com/globals/-/globals-9.18.0.tgz#aa3896b3e69b487f17e31ed2143d69a8e30c2d8a"
   integrity sha512-S0nG3CLEQiY/ILxqtztTWH/3iRRdyBLw6KMDxnKMchrtbj2OFmehVh0WUCfW3DUrIgx/qFrJPICrq4Z4sTR9UQ==

+got@^6.7.1:
+  version "6.7.1"
+  resolved "https://registry.yarnpkg.com/got/-/got-6.7.1.tgz#240cd05785a9a18e561dc1b44b41c763ef1e8db0"
+  integrity sha1-JAzQV4WpoY5WHcG0S0HHY+8ejbA=
+  dependencies:
+    create-error-class "^3.0.0"
+    duplexer3 "^0.1.4"
+    get-stream "^3.0.0"
+    is-redirect "^1.0.0"
+    is-retry-allowed "^1.0.0"
+    is-stream "^1.0.0"
+    lowercase-keys "^1.0.0"
+    safe-buffer "^5.0.1"
+    timed-out "^4.0.0"
+    unzip-response "^2.0.1"
+    url-parse-lax "^1.0.0"
+
 got@^7.0.0:
   version "7.1.0"
   resolved "https://registry.yarnpkg.com/got/-/got-7.1.0.tgz#05450fd84094e6bbea56f451a43a9c289166385a"
@@ -5602,6 +5763,11 @@ import-from@^2.1.0:
   dependencies:
     resolve-from "^3.0.0"

+import-lazy@^2.1.0:
+  version "2.1.0"
+  resolved "https://registry.yarnpkg.com/import-lazy/-/import-lazy-2.1.0.tgz#05698e3d45c88e8d7e9d92cb0584e77f096f3e43"
+  integrity sha1-BWmOPUXIjo1+nZLLBYTnfwlvPkM=
+
 import-local@^1.0.0:
   version "1.0.0"
   resolved "https://registry.yarnpkg.com/import-local/-/import-local-1.0.0.tgz#5e4ffdc03f4fe6c009c6729beb29631c2f8227bc"
@@ -5790,6 +5956,13 @@ is-ci@^1.0.10:
   dependencies:
     ci-info "^1.5.0"

+is-ci@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/is-ci/-/is-ci-2.0.0.tgz#6bc6334181810e04b5c22b3d589fdca55026404c"
+  integrity sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==
+  dependencies:
+    ci-info "^2.0.0"
+
 is-data-descriptor@^0.1.4:
   version "0.1.4"
   resolved "https://registry.yarnpkg.com/is-data-descriptor/-/is-data-descriptor-0.1.4.tgz#0b5ee648388e2c860282e793f1856fec3f301b56"
@@ -5921,6 +6094,14 @@ is-glob@^4.0.0:
   dependencies:
     is-extglob "^2.1.1"

+is-installed-globally@^0.1.0:
+  version "0.1.0"
+  resolved "https://registry.yarnpkg.com/is-installed-globally/-/is-installed-globally-0.1.0.tgz#0dfd98f5a9111716dd535dda6492f67bf3d25a80"
+  integrity sha1-Df2Y9akRFxbdU13aZJL2e/PSWoA=
+  dependencies:
+    global-dirs "^0.1.0"
+    is-path-inside "^1.0.0"
+
 is-my-ip-valid@^1.0.0:
   version "1.0.0"
   resolved "https://registry.yarnpkg.com/is-my-ip-valid/-/is-my-ip-valid-1.0.0.tgz#7b351b8e8edd4d3995d4d066680e664d94696824"
@@ -5937,6 +6118,11 @@ is-my-json-valid@^2.10.0:
     jsonpointer "^4.0.0"
     xtend "^4.0.0"

+is-npm@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/is-npm/-/is-npm-1.0.0.tgz#f2fb63a65e4905b406c86072765a1a4dc793b9f4"
+  integrity sha1-8vtjpl5JBbQGyGBydloaTceTufQ=
+
 is-number-object@^1.0.3:
   version "1.0.3"
   resolved "https://registry.yarnpkg.com/is-number-object/-/is-number-object-1.0.3.tgz#f265ab89a9f445034ef6aff15a8f00b00f551799"
@@ -5961,11 +6147,23 @@ is-number@^4.0.0:
   resolved "https://registry.yarnpkg.com/is-number/-/is-number-4.0.0.tgz#0026e37f5454d73e356dfe6564699867c6a7f0ff"
   integrity sha512-rSklcAIlf1OmFdyAqbnWTLVelsQ58uvZ66S/ZyawjWqIviTWCjg2PzVGw8WUA+nNuPTqb4wgA+NszrJ+08LlgQ==

+is-obj@^1.0.0:
+  version "1.0.1"
+  resolved "https://registry.yarnpkg.com/is-obj/-/is-obj-1.0.1.tgz#3e4729ac1f5fde025cd7d83a896dab9f4f67db0f"
+  integrity sha1-PkcprB9f3gJc19g6iW2rn09n2w8=
+
 is-object@^1.0.1:
   version "1.0.1"
   resolved "https://registry.yarnpkg.com/is-object/-/is-object-1.0.1.tgz#8952688c5ec2ffd6b03ecc85e769e02903083470"
   integrity sha1-iVJojF7C/9awPsyF52ngKQMINHA=

+is-path-inside@^1.0.0:
+  version "1.0.1"
+  resolved "https://registry.yarnpkg.com/is-path-inside/-/is-path-inside-1.0.1.tgz#8ef5b7de50437a3fdca6b4e865ef7aa55cb48036"
+  integrity sha1-jvW33lBDej/cprToZe96pVy0gDY=
+  dependencies:
+    path-is-inside "^1.0.1"
+
 is-plain-obj@^1.0.0, is-plain-obj@^1.1.0:
   version "1.1.0"
   resolved "https://registry.yarnpkg.com/is-plain-obj/-/is-plain-obj-1.1.0.tgz#71a50c8429dfca773c92a390a4a03b39fcd51d3e"
@@ -5998,6 +6196,11 @@ is-property@^1.0.0, is-property@^1.0.2:
   resolved "https://registry.yarnpkg.com/is-property/-/is-property-1.0.2.tgz#57fe1c4e48474edd65b09911f26b1cd4095dda84"
   integrity sha1-V/4cTkhHTt1lsJkR8msc1Ald2oQ=

+is-redirect@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/is-redirect/-/is-redirect-1.0.0.tgz#1d03dded53bd8db0f30c26e4f95d36fc7c87dc24"
+  integrity sha1-HQPd7VO9jbDzDCbk+V02/HyH3CQ=
+
 is-regex@^1.0.4:
   version "1.0.4"
   resolved "https://registry.yarnpkg.com/is-regex/-/is-regex-1.0.4.tgz#5517489b547091b0930e095654ced25ee97e9491"
@@ -6694,6 +6897,13 @@ jsonfile@^2.1.0:
   optionalDependencies:
     graceful-fs "^4.1.6"

+jsonfile@^4.0.0:
+  version "4.0.0"
+  resolved "https://registry.yarnpkg.com/jsonfile/-/jsonfile-4.0.0.tgz#8771aae0799b64076b76640fca058f9c10e33ecb"
+  integrity sha1-h3Gq4HmbZAdrdmQPygWPnBDjPss=
+  optionalDependencies:
+    graceful-fs "^4.1.6"
+
 jsonify@~0.0.0:
   version "0.0.0"
   resolved "https://registry.yarnpkg.com/jsonify/-/jsonify-0.0.0.tgz#2c74b6ee41d93ca51b7b5aaee8f503631d252a73"
@@ -6758,6 +6968,13 @@ kind-of@^6.0.0, kind-of@^6.0.2:
   resolved "https://registry.yarnpkg.com/kind-of/-/kind-of-6.0.2.tgz#01146b36a6218e64e58f3a8d66de5d7fc6f6d051"
   integrity sha512-s5kLOcnH0XqDO+FvuaLX8DDjZ18CGFk7VygH40QoKPUQhW4e2rvM0rwUq0t8IQDOwYSeLK01U90OjzBTme2QqA==

+klaw-sync@^6.0.0:
+  version "6.0.0"
+  resolved "https://registry.yarnpkg.com/klaw-sync/-/klaw-sync-6.0.0.tgz#1fd2cfd56ebb6250181114f0a581167099c2b28c"
+  integrity sha512-nIeuVSzdCCs6TDPTqI8w1Yre34sSq7AkZ4B3sfOBbI2CgVSB4Du4aLQijFU2+lhAFCwt9+42Hel6lQNIv6AntQ==
+  dependencies:
+    graceful-fs "^4.1.11"
+
 klaw@^1.0.0:
   version "1.3.1"
   resolved "https://registry.yarnpkg.com/klaw/-/klaw-1.3.1.tgz#4088433b46b3b1ba259d78785d8e96f73ba02439"
@@ -6770,6 +6987,13 @@ kleur@^2.0.1:
   resolved "https://registry.yarnpkg.com/kleur/-/kleur-2.0.2.tgz#b704f4944d95e255d038f0cb05fb8a602c55a300"
   integrity sha512-77XF9iTllATmG9lSlIv0qdQ2BQ/h9t0bJllHlbvsQ0zUWfU7Yi0S8L5JXzPZgkefIiajLmBJJ4BsMJmqcf7oxQ==

+latest-version@^3.0.0:
+  version "3.1.0"
+  resolved "https://registry.yarnpkg.com/latest-version/-/latest-version-3.1.0.tgz#a205383fea322b33b5ae3b18abee0dc2f356ee15"
+  integrity sha1-ogU4P+oyKzO1rjsYq+4NwvNW7hU=
+  dependencies:
+    package-json "^4.0.0"
+
 lazy-cache@^1.0.3:
   version "1.0.4"
   resolved "https://registry.yarnpkg.com/lazy-cache/-/lazy-cache-1.0.4.tgz#a1d78fc3a50474cb80845d3b3b6e1da49a446e8e"
@@ -7646,6 +7870,11 @@ next-tick@1:
   resolved "https://registry.yarnpkg.com/next-tick/-/next-tick-1.0.0.tgz#ca86d1fe8828169b0120208e3dc8424b9db8342c"
   integrity sha1-yobR/ogoFpsBICCOPchCS524NCw=

+nice-try@^1.0.4:
+  version "1.0.5"
+  resolved "https://registry.yarnpkg.com/nice-try/-/nice-try-1.0.5.tgz#a3378a7696ce7d223e88fc9b764bd7ef1089e366"
+  integrity sha512-1nh45deeb5olNY7eX82BkPO7SSxR5SSYJiPTrTdFUVYwAl8CKMA5N9PjTYkHiRjisVcxcQ1HXdLhx2qxxJzLNQ==
+
 no-case@^2.2.0:
   version "2.3.2"
   resolved "https://registry.yarnpkg.com/no-case/-/no-case-2.3.2.tgz#60b813396be39b3f1288a4c1ed5d1e7d28b464ac"
@@ -8084,6 +8313,16 @@ p-try@^1.0.0:
   resolved "https://registry.yarnpkg.com/p-try/-/p-try-1.0.0.tgz#cbc79cdbaf8fd4228e13f621f2b1a237c1b207b3"
   integrity sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M=

+package-json@^4.0.0:
+  version "4.0.1"
+  resolved "https://registry.yarnpkg.com/package-json/-/package-json-4.0.1.tgz#8869a0401253661c4c4ca3da6c2121ed555f5eed"
+  integrity sha1-iGmgQBJTZhxMTKPabCEh7VVfXu0=
+  dependencies:
+    got "^6.7.1"
+    registry-auth-token "^3.0.1"
+    registry-url "^3.0.3"
+    semver "^5.1.0"
+
 pako@~1.0.5:
   version "1.0.7"
   resolved "https://registry.yarnpkg.com/pako/-/pako-1.0.7.tgz#2473439021b57f1516c82f58be7275ad8ef1bb27"
@@ -8173,6 +8412,25 @@ pascalcase@^0.1.1:
   resolved "https://registry.yarnpkg.com/pascalcase/-/pascalcase-0.1.1.tgz#b363e55e8006ca6fe21784d2db22bd15d7917f14"
   integrity sha1-s2PlXoAGym/iF4TS2yK9FdeRfxQ=

+patch-package@^6.1.2:
+  version "6.1.2"
+  resolved "https://registry.yarnpkg.com/patch-package/-/patch-package-6.1.2.tgz#9ed0b3defb5c34ecbef3f334ddfb13e01b3d3ff6"
+  integrity sha512-5GnzR8lEyeleeariG+hGabUnD2b1yL7AIGFjlLo95zMGRWhZCel58IpeKD46wwPb7i+uNhUI8unV56ogk8Bgqg==
+  dependencies:
+    "@yarnpkg/lockfile" "^1.1.0"
+    chalk "^2.4.2"
+    cross-spawn "^6.0.5"
+    find-yarn-workspace-root "^1.2.1"
+    fs-extra "^7.0.1"
+    is-ci "^2.0.0"
+    klaw-sync "^6.0.0"
+    minimist "^1.2.0"
+    rimraf "^2.6.3"
+    semver "^5.6.0"
+    slash "^2.0.0"
+    tmp "^0.0.33"
+    update-notifier "^2.5.0"
+
 path-browserify@0.0.0:
   version "0.0.0"
   resolved "https://registry.yarnpkg.com/path-browserify/-/path-browserify-0.0.0.tgz#a0b870729aae214005b7d5032ec2cbbb0fb4451a"
@@ -8205,7 +8463,7 @@ path-is-inside@^1.0.1:
   resolved "https://registry.yarnpkg.com/path-is-inside/-/path-is-inside-1.0.2.tgz#365417dede44430d1c11af61027facf074bdfc53"
   integrity sha1-NlQX3t5EQw0cEa9hAn+s8HS9/FM=

-path-key@^2.0.0:
+path-key@^2.0.0, path-key@^2.0.1:
   version "2.0.1"
   resolved "https://registry.yarnpkg.com/path-key/-/path-key-2.0.1.tgz#411cadb574c5a140d3a4b1910d40d80cc9f40b40"
   integrity sha1-QRyttXTFoUDTpLGRDUDYDMn0C0A=
@@ -8712,6 +8970,11 @@ postcss@^6.0.0, postcss@^6.0.1, postcss@^6.0.17:
     source-map "^0.6.1"
     supports-color "^5.4.0"

+postinstall-postinstall@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/postinstall-postinstall/-/postinstall-postinstall-2.0.0.tgz#7ba6711b4420575c4f561638836a81faad47f43f"
+  integrity sha512-3f6qWexsHiT4WKtZc5DRb0FPLilHtARi5KpY4fqban/DJNn8/YhZH8U7dVKVz51WbOxEnR31gV+qYQhvEdHtdQ==
+
 prelude-ls@~1.1.2:
   version "1.1.2"
   resolved "https://registry.yarnpkg.com/prelude-ls/-/prelude-ls-1.1.2.tgz#21932a549f5e52ffd9a827f570e04be62a97da54"
@@ -9076,7 +9339,7 @@ raw-body@2.3.3:
     iconv-lite "0.4.23"
     unpipe "1.0.0"

-rc@^1.2.7:
+rc@^1.0.1, rc@^1.1.6, rc@^1.2.7:
   version "1.2.8"
   resolved "https://registry.yarnpkg.com/rc/-/rc-1.2.8.tgz#cd924bf5200a075b83c188cd6b9e211b7fc0d3ed"
   integrity sha512-y3bGgqKj3QBdxLbLkomlohkvsA8gdAiUQlSBJnBhfn+BPxg4bc62d8TcBW15wavDfgexCgccckhcZvywyQYPOw==
@@ -9400,6 +9663,14 @@ react-native-spring-scrollview@^2.0.22:
   resolved "https://registry.yarnpkg.com/react-native-spring-scrollview/-/react-native-spring-scrollview-2.0.22.tgz#6d8dbaf485b68a30c330d25e7e22f70ce7574c4c"
   integrity sha512-y1O/AMq1++AHOjQjT5Nse8GAQ7tOWnWTR67kO06FBHbgyu6EeZ0Ow5KK2EjtmFN0EAY8zFZmXtZyr0Sdht/wJA==

+react-native-swift@^1.2.2:
+  version "1.2.2"
+  resolved "https://registry.yarnpkg.com/react-native-swift/-/react-native-swift-1.2.2.tgz#6da9a9b6d8c795a26cda53c1d99ebb5dd1fa0a9b"
+  integrity sha512-lp87GXJKhydpAjZnprpZuJp4Q15tN9ophpcVLZmfceorSSc+uidUSkDQpwgk7EAoCq/jBdw7lTC1vb7UWd5F1Q==
+  dependencies:
+    "@raydeck/xcode" "^2.2.0"
+    glob "^7.1.2"
+
 react-native-swipe-gestures@^1.0.3:
   version "1.0.3"
   resolved "https://registry.yarnpkg.com/react-native-swipe-gestures/-/react-native-swipe-gestures-1.0.3.tgz#4160f8d459627323f3a3d2770af4bcd82fd054f5"
@@ -9426,6 +9697,11 @@ react-native-tab-view@^1.4.1:
   dependencies:
     prop-types "^15.6.1"

+react-native-track-player@1.1.8:
+  version "1.1.8"
+  resolved "https://registry.yarnpkg.com/react-native-track-player/-/react-native-track-player-1.1.8.tgz#4827d46a14320c405d19f34593c3f999c2424b0f"
+  integrity sha512-pAGMgEHtnrnHQYI53qxeZ/dNbw5CNiCTMjj6L09CQrWvZ6cJwjOQeyz4/6aOs7HfUDJc3HLntzKwTHYT7ges0g==
+
 react-native-vector-icons@6.0.2:
   version "6.0.2"
   resolved "https://registry.yarnpkg.com/react-native-vector-icons/-/react-native-vector-icons-6.0.2.tgz#826252a72d648cf957d46ada8df890318dac53e1"
@@ -10010,6 +10286,21 @@ regexpu-core@^4.1.3:
     unicode-match-property-ecmascript "^1.0.4"
     unicode-match-property-value-ecmascript "^1.0.2"

+registry-auth-token@^3.0.1:
+  version "3.4.0"
+  resolved "https://registry.yarnpkg.com/registry-auth-token/-/registry-auth-token-3.4.0.tgz#d7446815433f5d5ed6431cd5dca21048f66b397e"
+  integrity sha512-4LM6Fw8eBQdwMYcES4yTnn2TqIasbXuwDx3um+QRs7S55aMKCBKBxvPXl2RiUjHwuJLTyYfxSpmfSAjQpcuP+A==
+  dependencies:
+    rc "^1.1.6"
+    safe-buffer "^5.0.1"
+
+registry-url@^3.0.3:
+  version "3.1.0"
+  resolved "https://registry.yarnpkg.com/registry-url/-/registry-url-3.1.0.tgz#3d4ef870f73dde1d77f0cf9a381432444e174942"
+  integrity sha1-PU74cPc93h138M+aOBQyRE4XSUI=
+  dependencies:
+    rc "^1.0.1"
+
 regjsgen@^0.2.0:
   version "0.2.0"
   resolved "https://registry.yarnpkg.com/regjsgen/-/regjsgen-0.2.0.tgz#6c016adeac554f75823fe37ac05b92d5a4edb1f7"
@@ -10224,6 +10515,13 @@ rimraf@^2.5.4, rimraf@^2.6.1, rimraf@^2.6.2, rimraf@~2.6.2:
   dependencies:
     glob "^7.0.5"

+rimraf@^2.6.3:
+  version "2.6.3"
+  resolved "https://registry.yarnpkg.com/rimraf/-/rimraf-2.6.3.tgz#b2d104fe0d8fb27cf9e0a1cda8262dd3833c6cab"
+  integrity sha512-mwqeW5XsA2qAejG46gYdENaxXjx9onRNCfn7L0duuP4hCuTIi/QO7PDK07KJfp1d+izWPrzEJDcSqBa0OZQriA==
+  dependencies:
+    glob "^7.1.3"
+
 rimraf@~2.2.6:
   version "2.2.8"
   resolved "https://registry.yarnpkg.com/rimraf/-/rimraf-2.2.8.tgz#e439be2aaee327321952730f99a8929e4fc50582"
@@ -10376,6 +10674,13 @@ seamless-immutable@^7.1.4:
   resolved "https://registry.yarnpkg.com/seamless-immutable/-/seamless-immutable-7.1.4.tgz#6e9536def083ddc4dea0207d722e0e80d0f372f8"
   integrity sha512-XiUO1QP4ki4E2PHegiGAlu6r82o5A+6tRh7IkGGTVg/h+UoeX4nFBeCGPOhb4CYjvkqsfm/TUtvOMYC1xmV30A==

+semver-diff@^2.0.0:
+  version "2.1.0"
+  resolved "https://registry.yarnpkg.com/semver-diff/-/semver-diff-2.1.0.tgz#4bbb8437c8d37e4b0cf1a68fd726ec6d645d6d36"
+  integrity sha1-S7uEN8jTfksM8aaP1ybsbWRdbTY=
+  dependencies:
+    semver "^5.0.3"
+
 "semver@2 || 3 || 4 || 5", semver@^5.0.3, semver@^5.1.0, semver@^5.3.0, semver@^5.4.1, semver@^5.5.0, semver@^5.5.1, semver@^5.6.0:
   version "5.6.0"
   resolved "https://registry.yarnpkg.com/semver/-/semver-5.6.0.tgz#7e74256fbaa49c75aa7c7a205cc22799cac80004"
@@ -10572,6 +10877,11 @@ slash@^1.0.0:
   resolved "https://registry.yarnpkg.com/slash/-/slash-1.0.0.tgz#c41f2f6c39fc16d1cd17ad4b5d896114ae470d55"
   integrity sha1-xB8vbDn8FtHNF61LXYlhFK5HDVU=

+slash@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/slash/-/slash-2.0.0.tgz#de552851a1759df3a8f206535442f5ec4ddeab44"
+  integrity sha512-ZYKh3Wh2z1PpEXWr0MpSBZ0V6mZHAQfYevttO11c51CaWjGTaadiKZ+wVt1PbMlDV5qhMFslpZCemhwOK7C89A==
+
 slice-ansi@0.0.4:
   version "0.0.4"
   resolved "https://registry.yarnpkg.com/slice-ansi/-/slice-ansi-0.0.4.tgz#edbf8903f66f7ce2f8eafd6ceed65e264c831b35"
@@ -11101,6 +11411,13 @@ temp@0.8.3:
     os-tmpdir "^1.0.0"
     rimraf "~2.2.6"

+term-size@^1.2.0:
+  version "1.2.0"
+  resolved "https://registry.yarnpkg.com/term-size/-/term-size-1.2.0.tgz#458b83887f288fc56d6fffbfad262e26638efa69"
+  integrity sha1-RYuDiH8oj8Vtb/+/rSYuJmOO+mk=
+  dependencies:
+    execa "^0.7.0"
+
 test-exclude@^4.2.1:
   version "4.2.3"
   resolved "https://registry.yarnpkg.com/test-exclude/-/test-exclude-4.2.3.tgz#a9a5e64474e4398339245a0a769ad7c2f4a97c20"
@@ -11435,6 +11752,18 @@ unique-slug@^2.0.0:
   dependencies:
     imurmurhash "^0.1.4"

+unique-string@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/unique-string/-/unique-string-1.0.0.tgz#9e1057cca851abb93398f8b33ae187b99caec11a"
+  integrity sha1-nhBXzKhRq7kzmPizOuGHuZyuwRo=
+  dependencies:
+    crypto-random-string "^1.0.0"
+
+universalify@^0.1.0:
+  version "0.1.2"
+  resolved "https://registry.yarnpkg.com/universalify/-/universalify-0.1.2.tgz#b646f69be3942dabcecc9d6639c80dc105efaa66"
+  integrity sha512-rBJeI5CXAlmy1pV+617WB9J63U6XcazHHF2f2dbJix4XzpUF0RS3Zbj0FGIOCAva5P/d/GBOYaACQ1w+0azUkg==
+
 unpipe@1.0.0, unpipe@~1.0.0:
   version "1.0.0"
   resolved "https://registry.yarnpkg.com/unpipe/-/unpipe-1.0.0.tgz#b2bf4ee8514aae6165b4817829d21b2ef49904ec"
@@ -11448,11 +11777,32 @@ unset-value@^1.0.0:
     has-value "^0.3.1"
     isobject "^3.0.0"

+unzip-response@^2.0.1:
+  version "2.0.1"
+  resolved "https://registry.yarnpkg.com/unzip-response/-/unzip-response-2.0.1.tgz#d2f0f737d16b0615e72a6935ed04214572d56f97"
+  integrity sha1-0vD3N9FrBhXnKmk17QQhRXLVb5c=
+
 upath@^1.0.5:
   version "1.1.0"
   resolved "https://registry.yarnpkg.com/upath/-/upath-1.1.0.tgz#35256597e46a581db4793d0ce47fa9aebfc9fabd"
   integrity sha512-bzpH/oBhoS/QI/YtbkqCg6VEiPYjSZtrHQM6/QnJS6OL9pKUFLqb3aFh4Scvwm45+7iAgiMkLhSbaZxUqmrprw==

+update-notifier@^2.5.0:
+  version "2.5.0"
+  resolved "https://registry.yarnpkg.com/update-notifier/-/update-notifier-2.5.0.tgz#d0744593e13f161e406acb1d9408b72cad08aff6"
+  integrity sha512-gwMdhgJHGuj/+wHJJs9e6PcCszpxR1b236igrOkUofGhqJuG+amlIKwApH1IW1WWl7ovZxsX49lMBWLxSdm5Dw==
+  dependencies:
+    boxen "^1.2.1"
+    chalk "^2.0.1"
+    configstore "^3.0.0"
+    import-lazy "^2.1.0"
+    is-ci "^1.0.10"
+    is-installed-globally "^0.1.0"
+    is-npm "^1.0.0"
+    latest-version "^3.0.0"
+    semver-diff "^2.0.0"
+    xdg-basedir "^3.0.0"
+
 upper-case@^1.1.1:
   version "1.1.3"
   resolved "https://registry.yarnpkg.com/upper-case/-/upper-case-1.1.3.tgz#f6b4501c2ec4cdd26ba78be7222961de77621598"
@@ -11787,6 +12137,13 @@ wide-align@^1.1.0:
   dependencies:
     string-width "^1.0.2 || 2"

+widest-line@^2.0.0:
+  version "2.0.1"
+  resolved "https://registry.yarnpkg.com/widest-line/-/widest-line-2.0.1.tgz#7438764730ec7ef4381ce4df82fb98a53142a3fc"
+  integrity sha512-Ba5m9/Fa4Xt9eb2ELXt77JxVDV8w7qQrH0zS/TWSJdLyAwQjWoOzpzj5lwVftDz6n/EOu3tNACS84v509qwnJA==
+  dependencies:
+    string-width "^2.1.1"
+
 window-size@0.1.0:
   version "0.1.0"
   resolved "https://registry.yarnpkg.com/window-size/-/window-size-0.1.0.tgz#5438cd2ea93b202efa3a19fe8887aee7c94f9c9d"
@@ -11836,6 +12193,15 @@ write-file-atomic@^1.2.0:
     imurmurhash "^0.1.4"
     slide "^1.1.5"

+write-file-atomic@^2.0.0:
+  version "2.4.3"
+  resolved "https://registry.yarnpkg.com/write-file-atomic/-/write-file-atomic-2.4.3.tgz#1fd2e9ae1df3e75b8d8c367443c692d4ca81f481"
+  integrity sha512-GaETH5wwsX+GcnzhPgKcKjJ6M2Cq3/iZp1WyY/X1CSqrW+jVNM9Y7D8EC2sM4ZG/V8wZlSniJnCKWPmBYAucRQ==
+  dependencies:
+    graceful-fs "^4.1.11"
+    imurmurhash "^0.1.4"
+    signal-exit "^3.0.2"
+
 write-file-atomic@^2.1.0:
   version "2.3.0"
   resolved "https://registry.yarnpkg.com/write-file-atomic/-/write-file-atomic-2.3.0.tgz#1ff61575c2e2a4e8e510d6fa4e243cce183999ab"
@@ -11908,6 +12274,11 @@ xcode@^1.0.0:
     simple-plist "^0.2.1"
     uuid "^3.3.2"

+xdg-basedir@^3.0.0:
+  version "3.0.0"
+  resolved "https://registry.yarnpkg.com/xdg-basedir/-/xdg-basedir-3.0.0.tgz#496b2cc109eca8dbacfe2dc72b603c17c5870ad4"
+  integrity sha1-SWsswQnsqNus/i3HK2A8F8WHCtQ=
+
 xml-name-validator@^3.0.0:
   version "3.0.0"
   resolved "https://registry.yarnpkg.com/xml-name-validator/-/xml-name-validator-3.0.0.tgz#6ae73e06de4d8c6e47f9fb181f78d648ad457c6a"
